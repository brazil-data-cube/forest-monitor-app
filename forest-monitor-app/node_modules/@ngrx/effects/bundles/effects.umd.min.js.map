{"version":3,"sources":["modules/effects/effects.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ngrx","effects","tslib","rxjs","operators","ng","core","this","tslib_1","store","CREATE_EFFECT_METADATA_KEY","getCreateEffectMetadata","instance","Object","getOwnPropertyNames","filter","propertyName","hasOwnProperty","map","__assign","getSourceForInstance","getPrototypeOf","METADATA_KEY","getEffectDecoratorMetadata","compose","getEffectMetadataEntries","sourceProto","constructor","getSourceMetadata","reduce","sources","source","concat","mergeEffects","sourceInstance","errorHandler","sourceName","name","observables$","_a","dispatch","resubscribeOnError","observable$","resubscribable$","pipe","catchError","error","handleError","ignoreElements","materialize","notification","effect","merge","apply","__spread","Actions","_super","_this","call","Actions_1","__extends","prototype","lift","operator","observable","__decorate","Injectable","__param","Inject","ScannedActionsSubject","__metadata","Observable","onIdentifyEffectsKey","EffectSources","addEffects","effectSourceInstance","next","toActions","groupBy","mergeMap","source$","effectsInstance","exhaustMap","resolveEffectSource","mergedEffects$","isOnRunEffects","ngrxOnRunEffects","output","reportInvalidActions","reporter","kind","action","value","isAction","type","Error","getEffectName","stringify","JSON","dematerialize","ErrorHandler","Store","Subject","InjectionToken","ROOT_EFFECTS","FEATURE_EFFECTS","EffectsRunner","effectSources","effectsSubscription","start","subscribe","ngOnDestroy","unsubscribe","ROOT_EFFECTS_INIT","EffectsRootModule","runner","rootEffects","storeRootModule","storeFeatureModule","forEach","NgModule","Optional","Array","StoreRootModule","StoreFeatureModule","EffectsFeatureModule","root","effectSourceGroups","group","EffectsModule","forFeature","featureEffects","ngModule","providers","provide","multi","deps","useFactory","createSourceInstances","forRoot","instances","_i","arguments","length","ɵngrx_modules_effects_effects_c","ɵngrx_modules_effects_effects_a","ɵngrx_modules_effects_effects_b","ɵngrx_modules_effects_effects_f","ɵngrx_modules_effects_effects_e","ɵngrx_modules_effects_effects_d","createEffect","config","defineProperty","Effect","_b","_c","_d","target","setEffectMetadataEntries","entries","meta","push","getEffectsMetadata","e_1","metadata","__values","done","e_1_1","return","ofType","allowedTypes","some","typeOrActionCreator","act","configOrProject","errorFn","project","concatMap","complete","undefined","defer","subject","input","index","completed","errored","projectedCount","Notification","n","finalize"],"mappings":"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","sourcesContent":["/**\n * @license NgRx 8.1.0\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@ngrx/store'), require('rxjs'), require('rxjs/operators'), require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define('@ngrx/effects', ['exports', 'tslib', '@ngrx/store', 'rxjs', 'rxjs/operators', '@angular/core'], factory) :\n    (global = global || self, factory((global.ngrx = global.ngrx || {}, global.ngrx.effects = {}), global.tslib, global['@ngrx/store'], global.rxjs, global.rxjs.operators, global.ng.core));\n}(this, function (exports, tslib_1, store, rxjs, operators, core) { 'use strict';\n\n    var CREATE_EFFECT_METADATA_KEY = '__@ngrx/effects_create__';\n    /**\n     * @description\n     * Creates an effect from an `Observable` and an `EffectConfig`.\n     *\n     * @param source A function which returns an `Observable`.\n     * @param config A `Partial<EffectConfig>` to configure the effect.  By default, `dispatch` is true and `resubscribeOnError` is true.\n     * @returns If `EffectConfig`#`dispatch` is true, returns `Observable<Action>`.  Else, returns `Observable<unknown>`.\n     *\n     * @usageNotes\n     *\n     * ** Mapping to a different action **\n     * ```ts\n     * effectName$ = createEffect(\n     *   () => this.actions$.pipe(\n     *     ofType(FeatureActions.actionOne),\n     *     map(() => FeatureActions.actionTwo())\n     *   )\n     * );\n     * ```\n     *\n     *  ** Non-dispatching effects **\n     * ```ts\n     * effectName$ = createEffect(\n     *   () => this.actions$.pipe(\n     *     ofType(FeatureActions.actionOne),\n     *     tap(() => console.log('Action One Dispatched'))\n     *   ),\n     *   { dispatch: false }\n     *   // FeatureActions.actionOne is not dispatched\n     * );\n     * ```\n     */\n    function createEffect(source, config) {\n        var effect = source();\n        // Right now both createEffect and @Effect decorator set default values.\n        // Ideally that should only be done in one place that aggregates that info,\n        // for example in mergeEffects().\n        var value = tslib_1.__assign({ dispatch: true, resubscribeOnError: true }, config);\n        Object.defineProperty(effect, CREATE_EFFECT_METADATA_KEY, {\n            value: value,\n        });\n        return effect;\n    }\n    function getCreateEffectMetadata(instance) {\n        var propertyNames = Object.getOwnPropertyNames(instance);\n        var metadata = propertyNames\n            .filter(function (propertyName) {\n            return instance[propertyName] &&\n                instance[propertyName].hasOwnProperty(CREATE_EFFECT_METADATA_KEY);\n        })\n            .map(function (propertyName) {\n            var metaData = instance[propertyName][CREATE_EFFECT_METADATA_KEY];\n            return tslib_1.__assign({ propertyName: propertyName }, metaData);\n        });\n        return metadata;\n    }\n\n    function getSourceForInstance(instance) {\n        return Object.getPrototypeOf(instance);\n    }\n\n    var METADATA_KEY = '__@ngrx/effects__';\n    function Effect(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.dispatch, dispatch = _c === void 0 ? true : _c, _d = _b.resubscribeOnError, resubscribeOnError = _d === void 0 ? true : _d;\n        return function (target, propertyName) {\n            // Right now both createEffect and @Effect decorator set default values.\n            // Ideally that should only be done in one place that aggregates that info,\n            // for example in mergeEffects().\n            var metadata = {\n                propertyName: propertyName,\n                dispatch: dispatch,\n                resubscribeOnError: resubscribeOnError,\n            };\n            setEffectMetadataEntries(target, [metadata]);\n        };\n    }\n    function getEffectDecoratorMetadata(instance) {\n        var effectsDecorators = store.compose(getEffectMetadataEntries, getSourceForInstance)(instance);\n        return effectsDecorators;\n    }\n    function setEffectMetadataEntries(sourceProto, entries) {\n        var constructor = sourceProto.constructor;\n        var meta = constructor.hasOwnProperty(METADATA_KEY)\n            ? constructor[METADATA_KEY]\n            : Object.defineProperty(constructor, METADATA_KEY, { value: [] })[METADATA_KEY];\n        Array.prototype.push.apply(meta, entries);\n    }\n    function getEffectMetadataEntries(sourceProto) {\n        return sourceProto.constructor.hasOwnProperty(METADATA_KEY)\n            ? sourceProto.constructor[METADATA_KEY]\n            : [];\n    }\n\n    function getEffectsMetadata(instance) {\n        var e_1, _a;\n        var metadata = {};\n        try {\n            for (var _b = tslib_1.__values(getSourceMetadata(instance)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = _c.value, propertyName = _d.propertyName, dispatch = _d.dispatch, resubscribeOnError = _d.resubscribeOnError;\n                metadata[propertyName] = { dispatch: dispatch, resubscribeOnError: resubscribeOnError };\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return metadata;\n    }\n    function getSourceMetadata(instance) {\n        var effects = [\n            getEffectDecoratorMetadata,\n            getCreateEffectMetadata,\n        ];\n        return effects.reduce(function (sources, source) { return sources.concat(source(instance)); }, []);\n    }\n\n    function mergeEffects(sourceInstance, errorHandler) {\n        var sourceName = getSourceForInstance(sourceInstance).constructor.name;\n        var observables$ = getSourceMetadata(sourceInstance).map(function (_a) {\n            var propertyName = _a.propertyName, dispatch = _a.dispatch, resubscribeOnError = _a.resubscribeOnError;\n            var observable$ = typeof sourceInstance[propertyName] === 'function'\n                ? sourceInstance[propertyName]()\n                : sourceInstance[propertyName];\n            var resubscribable$ = resubscribeOnError\n                ? observable$.pipe(operators.catchError(function (error) {\n                    if (errorHandler)\n                        errorHandler.handleError(error);\n                    // Return observable that produces this particular effect\n                    return observable$;\n                }))\n                : observable$;\n            if (dispatch === false) {\n                return resubscribable$.pipe(operators.ignoreElements());\n            }\n            var materialized$ = resubscribable$.pipe(operators.materialize());\n            return materialized$.pipe(operators.map(function (notification) { return ({\n                effect: sourceInstance[propertyName],\n                notification: notification,\n                propertyName: propertyName,\n                sourceName: sourceName,\n                sourceInstance: sourceInstance,\n            }); }));\n        });\n        return rxjs.merge.apply(void 0, tslib_1.__spread(observables$));\n    }\n\n    var Actions = /** @class */ (function (_super) {\n        tslib_1.__extends(Actions, _super);\n        function Actions(source) {\n            var _this = _super.call(this) || this;\n            if (source) {\n                _this.source = source;\n            }\n            return _this;\n        }\n        Actions_1 = Actions;\n        Actions.prototype.lift = function (operator) {\n            var observable = new Actions_1();\n            observable.source = this;\n            observable.operator = operator;\n            return observable;\n        };\n        var Actions_1;\n        Actions = Actions_1 = tslib_1.__decorate([\n            core.Injectable(),\n            tslib_1.__param(0, core.Inject(store.ScannedActionsSubject)),\n            tslib_1.__metadata(\"design:paramtypes\", [rxjs.Observable])\n        ], Actions);\n        return Actions;\n    }(rxjs.Observable));\n    function ofType() {\n        var allowedTypes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            allowedTypes[_i] = arguments[_i];\n        }\n        return operators.filter(function (action) {\n            return allowedTypes.some(function (typeOrActionCreator) {\n                if (typeof typeOrActionCreator === 'string') {\n                    // Comparing the string to type\n                    return typeOrActionCreator === action.type;\n                }\n                // We are filtering by ActionCreator\n                return typeOrActionCreator.type === action.type;\n            });\n        });\n    }\n\n    function reportInvalidActions(output, reporter) {\n        if (output.notification.kind === 'N') {\n            var action = output.notification.value;\n            var isInvalidAction = !isAction(action);\n            if (isInvalidAction) {\n                reporter.handleError(new Error(\"Effect \" + getEffectName(output) + \" dispatched an invalid action: \" + stringify(action)));\n            }\n        }\n    }\n    function isAction(action) {\n        return (typeof action !== 'function' &&\n            action &&\n            action.type &&\n            typeof action.type === 'string');\n    }\n    function getEffectName(_a) {\n        var propertyName = _a.propertyName, sourceInstance = _a.sourceInstance, sourceName = _a.sourceName;\n        var isMethod = typeof sourceInstance[propertyName] === 'function';\n        return \"\\\"\" + sourceName + \".\" + propertyName + (isMethod ? '()' : '') + \"\\\"\";\n    }\n    function stringify(action) {\n        try {\n            return JSON.stringify(action);\n        }\n        catch (_a) {\n            return action;\n        }\n    }\n\n    var onIdentifyEffectsKey = 'ngrxOnIdentifyEffects';\n    var onRunEffectsKey = 'ngrxOnRunEffects';\n    var onInitEffects = 'ngrxOnInitEffects';\n\n    var EffectSources = /** @class */ (function (_super) {\n        tslib_1.__extends(EffectSources, _super);\n        function EffectSources(errorHandler, store) {\n            var _this = _super.call(this) || this;\n            _this.errorHandler = errorHandler;\n            _this.store = store;\n            return _this;\n        }\n        EffectSources.prototype.addEffects = function (effectSourceInstance) {\n            this.next(effectSourceInstance);\n            if (onInitEffects in effectSourceInstance &&\n                typeof effectSourceInstance[onInitEffects] === 'function') {\n                this.store.dispatch(effectSourceInstance[onInitEffects]());\n            }\n        };\n        /**\n         * @internal\n         */\n        EffectSources.prototype.toActions = function () {\n            var _this = this;\n            return this.pipe(operators.groupBy(getSourceForInstance), operators.mergeMap(function (source$) { return source$.pipe(operators.groupBy(effectsInstance)); }), operators.mergeMap(function (source$) {\n                return source$.pipe(operators.exhaustMap(resolveEffectSource(_this.errorHandler)), operators.map(function (output) {\n                    reportInvalidActions(output, _this.errorHandler);\n                    return output.notification;\n                }), operators.filter(function (notification) {\n                    return notification.kind === 'N';\n                }), operators.dematerialize());\n            }));\n        };\n        EffectSources = tslib_1.__decorate([\n            core.Injectable(),\n            tslib_1.__metadata(\"design:paramtypes\", [core.ErrorHandler, store.Store])\n        ], EffectSources);\n        return EffectSources;\n    }(rxjs.Subject));\n    function effectsInstance(sourceInstance) {\n        if (onIdentifyEffectsKey in sourceInstance &&\n            typeof sourceInstance[onIdentifyEffectsKey] === 'function') {\n            return sourceInstance[onIdentifyEffectsKey]();\n        }\n        return '';\n    }\n    function resolveEffectSource(errorHandler) {\n        return function (sourceInstance) {\n            var mergedEffects$ = mergeEffects(sourceInstance, errorHandler);\n            if (isOnRunEffects(sourceInstance)) {\n                return sourceInstance.ngrxOnRunEffects(mergedEffects$);\n            }\n            return mergedEffects$;\n        };\n    }\n    function isOnRunEffects(sourceInstance) {\n        var source = getSourceForInstance(sourceInstance);\n        return (onRunEffectsKey in source && typeof source[onRunEffectsKey] === 'function');\n    }\n\n    var IMMEDIATE_EFFECTS = new core.InjectionToken('ngrx/effects: Immediate Effects');\n    var ROOT_EFFECTS = new core.InjectionToken('ngrx/effects: Root Effects');\n    var FEATURE_EFFECTS = new core.InjectionToken('ngrx/effects: Feature Effects');\n\n    var EffectsRunner = /** @class */ (function () {\n        function EffectsRunner(effectSources, store) {\n            this.effectSources = effectSources;\n            this.store = store;\n            this.effectsSubscription = null;\n        }\n        EffectsRunner.prototype.start = function () {\n            if (!this.effectsSubscription) {\n                this.effectsSubscription = this.effectSources\n                    .toActions()\n                    .subscribe(this.store);\n            }\n        };\n        EffectsRunner.prototype.ngOnDestroy = function () {\n            if (this.effectsSubscription) {\n                this.effectsSubscription.unsubscribe();\n                this.effectsSubscription = null;\n            }\n        };\n        EffectsRunner = tslib_1.__decorate([\n            core.Injectable(),\n            tslib_1.__metadata(\"design:paramtypes\", [EffectSources,\n                store.Store])\n        ], EffectsRunner);\n        return EffectsRunner;\n    }());\n\n    var ROOT_EFFECTS_INIT = '@ngrx/effects/init';\n    var EffectsRootModule = /** @class */ (function () {\n        function EffectsRootModule(sources, runner, store, rootEffects, storeRootModule, storeFeatureModule) {\n            this.sources = sources;\n            runner.start();\n            rootEffects.forEach(function (effectSourceInstance) {\n                return sources.addEffects(effectSourceInstance);\n            });\n            store.dispatch({ type: ROOT_EFFECTS_INIT });\n        }\n        EffectsRootModule.prototype.addEffects = function (effectSourceInstance) {\n            this.sources.addEffects(effectSourceInstance);\n        };\n        EffectsRootModule = tslib_1.__decorate([\n            core.NgModule({}),\n            tslib_1.__param(3, core.Inject(ROOT_EFFECTS)),\n            tslib_1.__param(4, core.Optional()),\n            tslib_1.__param(5, core.Optional()),\n            tslib_1.__metadata(\"design:paramtypes\", [EffectSources,\n                EffectsRunner,\n                store.Store, Array, store.StoreRootModule,\n                store.StoreFeatureModule])\n        ], EffectsRootModule);\n        return EffectsRootModule;\n    }());\n\n    var EffectsFeatureModule = /** @class */ (function () {\n        function EffectsFeatureModule(root, effectSourceGroups, storeRootModule, storeFeatureModule) {\n            effectSourceGroups.forEach(function (group) {\n                return group.forEach(function (effectSourceInstance) {\n                    return root.addEffects(effectSourceInstance);\n                });\n            });\n        }\n        EffectsFeatureModule = tslib_1.__decorate([\n            core.NgModule({}),\n            tslib_1.__param(1, core.Inject(FEATURE_EFFECTS)),\n            tslib_1.__param(2, core.Optional()),\n            tslib_1.__param(3, core.Optional()),\n            tslib_1.__metadata(\"design:paramtypes\", [EffectsRootModule, Array, store.StoreRootModule,\n                store.StoreFeatureModule])\n        ], EffectsFeatureModule);\n        return EffectsFeatureModule;\n    }());\n\n    var EffectsModule = /** @class */ (function () {\n        function EffectsModule() {\n        }\n        EffectsModule.forFeature = function (featureEffects) {\n            return {\n                ngModule: EffectsFeatureModule,\n                providers: [\n                    featureEffects,\n                    {\n                        provide: FEATURE_EFFECTS,\n                        multi: true,\n                        deps: featureEffects,\n                        useFactory: createSourceInstances,\n                    },\n                ],\n            };\n        };\n        EffectsModule.forRoot = function (rootEffects) {\n            return {\n                ngModule: EffectsRootModule,\n                providers: [\n                    EffectsRunner,\n                    EffectSources,\n                    Actions,\n                    rootEffects,\n                    {\n                        provide: ROOT_EFFECTS,\n                        deps: rootEffects,\n                        useFactory: createSourceInstances,\n                    },\n                ],\n            };\n        };\n        EffectsModule = tslib_1.__decorate([\n            core.NgModule({})\n        ], EffectsModule);\n        return EffectsModule;\n    }());\n    function createSourceInstances() {\n        var instances = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            instances[_i] = arguments[_i];\n        }\n        return instances;\n    }\n\n    function act(\n    /** Allow to take either config object or project/error functions */\n    configOrProject, errorFn) {\n        var _a = typeof configOrProject === 'function'\n            ? {\n                project: configOrProject,\n                error: errorFn,\n                operator: operators.concatMap,\n                complete: undefined,\n                unsubscribe: undefined,\n            }\n            : tslib_1.__assign({}, configOrProject, { operator: configOrProject.operator || operators.concatMap }), project = _a.project, error = _a.error, complete = _a.complete, operator = _a.operator, unsubscribe = _a.unsubscribe;\n        return function (source) {\n            return rxjs.defer(function () {\n                var subject = new rxjs.Subject();\n                return rxjs.merge(source.pipe(operator(function (input, index) {\n                    return rxjs.defer(function () {\n                        var completed = false;\n                        var errored = false;\n                        var projectedCount = 0;\n                        return project(input, index).pipe(operators.materialize(), operators.map(function (notification) {\n                            switch (notification.kind) {\n                                case 'E':\n                                    errored = true;\n                                    return new rxjs.Notification(\n                                    // TODO: remove any in RxJS 6.5\n                                    'N', error(notification.error, input));\n                                case 'C':\n                                    completed = true;\n                                    return complete\n                                        ? new rxjs.Notification(\n                                        // TODO: remove any in RxJS 6.5\n                                        'N', complete(projectedCount, input))\n                                        : undefined;\n                                default:\n                                    ++projectedCount;\n                                    return notification;\n                            }\n                        }), operators.filter(function (n) { return n != null; }), operators.dematerialize(), operators.finalize(function () {\n                            if (!completed && !errored && unsubscribe) {\n                                subject.next(unsubscribe(projectedCount, input));\n                            }\n                        }));\n                    });\n                })), subject);\n            });\n        };\n    }\n\n    /**\n     * DO NOT EDIT\n     *\n     * This file is automatically generated at build\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵngrx_modules_effects_effects_c = EffectsFeatureModule;\n    exports.ɵngrx_modules_effects_effects_a = createSourceInstances;\n    exports.ɵngrx_modules_effects_effects_b = EffectsRootModule;\n    exports.ɵngrx_modules_effects_effects_f = EffectsRunner;\n    exports.ɵngrx_modules_effects_effects_e = FEATURE_EFFECTS;\n    exports.ɵngrx_modules_effects_effects_d = ROOT_EFFECTS;\n    exports.createEffect = createEffect;\n    exports.Effect = Effect;\n    exports.getEffectsMetadata = getEffectsMetadata;\n    exports.mergeEffects = mergeEffects;\n    exports.Actions = Actions;\n    exports.ofType = ofType;\n    exports.EffectsModule = EffectsModule;\n    exports.EffectSources = EffectSources;\n    exports.ROOT_EFFECTS_INIT = ROOT_EFFECTS_INIT;\n    exports.act = act;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=effects.umd.js.map\n"]}