(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["elastic-apm-opentracing"] = factory();
	else
		root["elastic-apm-opentracing"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/opentracing-entry.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/elastic-apm-js-core/src/common/apm-server.js":
/*!*******************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/common/apm-server.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar Queue = __webpack_require__(/*! ./queue */ \"./node_modules/elastic-apm-js-core/src/common/queue.js\");\n\nvar throttle = __webpack_require__(/*! ./throttle */ \"./node_modules/elastic-apm-js-core/src/common/throttle.js\");\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/elastic-apm-js-core/src/common/utils.js\");\n\nvar NDJSON = __webpack_require__(/*! ./ndjson */ \"./node_modules/elastic-apm-js-core/src/common/ndjson.js\");\n\nvar xhrIgnore = __webpack_require__(/*! ./patching/patch-utils */ \"./node_modules/elastic-apm-js-core/src/common/patching/patch-utils.js\").XHR_IGNORE;\n\nvar ApmServer =\n/*#__PURE__*/\nfunction () {\n  function ApmServer(configService, loggingService) {\n    this._configService = configService;\n    this._loggingService = loggingService;\n    this.logMessages = {\n      invalidConfig: {\n        message: 'Configuration is invalid!',\n        level: 'warn'\n      }\n    };\n    this.errorQueue = undefined;\n    this.transactionQueue = undefined;\n    this.throttleAddError = undefined;\n    this.throttleAddTransaction = undefined;\n    this.initialized = false;\n    this.ndjsonSpan = {};\n  }\n\n  var _proto = ApmServer.prototype;\n\n  _proto.init = function init() {\n    if (this.initialized) {\n      return;\n    }\n\n    this.initialized = true;\n    this.initErrorQueue();\n    this.initTransactionQueue();\n  };\n\n  _proto.createServiceObject = function createServiceObject() {\n    var cfg = this._configService;\n    var stringLimit = cfg.get('serverStringLimit');\n    var serviceObject = {\n      name: utils.sanitizeString(cfg.get('serviceName'), stringLimit, true),\n      version: utils.sanitizeString(cfg.get('serviceVersion'), stringLimit, false),\n      agent: {\n        name: cfg.get('agentName'),\n        version: cfg.get('agentVersion')\n      },\n      language: {\n        name: 'javascript'\n      }\n    };\n    return serviceObject;\n  };\n\n  _proto._postJson = function _postJson(endPoint, payload) {\n    return this._makeHttpRequest('POST', endPoint, payload, {\n      'Content-Type': 'application/x-ndjson'\n    });\n  };\n\n  _proto._makeHttpRequest = function _makeHttpRequest(method, url, payload, headers) {\n    return new Promise(function (resolve, reject) {\n      var xhr = new window.XMLHttpRequest();\n      xhr[xhrIgnore] = true;\n      xhr.open(method, url, true);\n      xhr.timeout = 10000;\n\n      if (headers) {\n        for (var header in headers) {\n          if (headers.hasOwnProperty(header)) {\n            xhr.setRequestHeader(header, headers[header]);\n          }\n        }\n      }\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          var status = xhr.status;\n\n          if (status === 0 || status > 399 && status < 600) {\n            // An http 4xx or 5xx error. Signal an error.\n            var err = new Error(url + ' HTTP status: ' + status);\n            err.xhr = xhr;\n            reject(err);\n          } else {\n            resolve(xhr.responseText);\n          }\n        }\n      };\n\n      xhr.onerror = function (err) {\n        reject(err);\n      };\n\n      xhr.send(payload);\n    });\n  };\n\n  _proto._createQueue = function _createQueue(onFlush) {\n    var queueLimit = this._configService.get('queueLimit');\n\n    var flushInterval = this._configService.get('flushInterval');\n\n    return new Queue(onFlush, {\n      queueLimit: queueLimit,\n      flushInterval: flushInterval\n    });\n  };\n\n  _proto.initErrorQueue = function initErrorQueue() {\n    var apmServer = this;\n\n    if (this.errorQueue) {\n      this.errorQueue.flush();\n    }\n\n    this.errorQueue = this._createQueue(function (errors) {\n      var p = apmServer.sendErrors(errors);\n\n      if (p) {\n        p.then(undefined, function (reason) {\n          apmServer._loggingService.warn('Failed sending errors!', reason);\n        });\n      }\n    });\n\n    var limit = apmServer._configService.get('errorThrottleLimit');\n\n    var interval = apmServer._configService.get('errorThrottleInterval');\n\n    this.throttleAddError = throttle(this.errorQueue.add.bind(this.errorQueue), function () {\n      apmServer._loggingService.warn('Dropped error due to throttling!');\n    }, {\n      limit: limit,\n      interval: interval\n    });\n  };\n\n  _proto.initTransactionQueue = function initTransactionQueue() {\n    var apmServer = this;\n\n    if (this.transactionQueue) {\n      this.transactionQueue.flush();\n    }\n\n    this.transactionQueue = this._createQueue(function (transactions) {\n      var p = apmServer.sendTransactions(transactions);\n\n      if (p) {\n        p.then(undefined, function (reason) {\n          apmServer._loggingService.warn('Failed sending transactions!', reason);\n        });\n      }\n    });\n\n    var limit = apmServer._configService.get('transactionThrottleLimit');\n\n    var interval = apmServer._configService.get('transactionThrottleInterval');\n\n    this.throttleAddTransaction = throttle(this.transactionQueue.add.bind(this.transactionQueue), function () {\n      apmServer._loggingService.warn('Dropped transaction due to throttling!');\n    }, {\n      limit: limit,\n      interval: interval\n    });\n  };\n\n  _proto.addError = function addError(error) {\n    if (this._configService.isActive()) {\n      if (!this.errorQueue) {\n        this.initErrorQueue();\n      }\n\n      this.throttleAddError(error);\n    }\n  };\n\n  _proto.addTransaction = function addTransaction(transaction) {\n    if (this._configService.isActive()) {\n      if (!this.transactionQueue) {\n        this.initTransactionQueue();\n      }\n\n      this.throttleAddTransaction(transaction);\n    }\n  };\n\n  _proto.warnOnce = function warnOnce(logObject) {\n    if (logObject.level === 'warn') {\n      logObject.level = 'debug';\n\n      this._loggingService.warn(logObject.message);\n    } else {\n      this._loggingService.debug(logObject.message);\n    }\n  };\n\n  _proto.ndjsonErrors = function ndjsonErrors(errors) {\n    return errors.map(function (error) {\n      return NDJSON.stringify({\n        error: error\n      });\n    });\n  };\n\n  _proto.sendErrors = function sendErrors(errors) {\n    if (this._configService.isValid() && this._configService.isActive()) {\n      if (errors && errors.length > 0) {\n        var payload = {\n          service: this.createServiceObject(),\n          errors: errors\n        };\n        payload = this._configService.applyFilters(payload);\n\n        if (payload) {\n          var endPoint = this._configService.getEndpointUrl('errors');\n\n          var ndjson = this.ndjsonErrors(payload.errors);\n          ndjson.unshift(NDJSON.stringify({\n            metadata: {\n              service: payload.service\n            }\n          }));\n          var ndjsonPayload = ndjson.join('');\n          return this._postJson(endPoint, ndjsonPayload);\n        } else {\n          this._loggingService.warn('Dropped payload due to filtering!');\n        }\n      }\n    } else {\n      this.warnOnce(this.logMessages.invalidConfig);\n    }\n  };\n\n  _proto.ndjsonTransactions = function ndjsonTransactions(transactions) {\n    var ndjsonSpan = this.ndjsonSpan;\n    return transactions.map(function (tr) {\n      var spans = '';\n\n      if (tr.spans) {\n        spans = tr.spans.map(function (sp) {\n          ndjsonSpan.span = sp;\n          return NDJSON.stringify(ndjsonSpan);\n        }).join('');\n        delete tr.spans;\n      }\n\n      return NDJSON.stringify({\n        transaction: tr\n      }) + spans;\n    });\n  };\n\n  _proto.sendTransactions = function sendTransactions(transactions) {\n    if (this._configService.isValid() && this._configService.isActive()) {\n      if (transactions && transactions.length > 0) {\n        var payload = {\n          service: this.createServiceObject(),\n          transactions: transactions\n        };\n        payload = this._configService.applyFilters(payload);\n\n        if (payload) {\n          var endPoint = this._configService.getEndpointUrl('transactions');\n\n          var ndjson = this.ndjsonTransactions(payload.transactions);\n          ndjson.unshift(NDJSON.stringify({\n            metadata: {\n              service: payload.service\n            }\n          }));\n          var ndjsonPayload = ndjson.join('');\n          return this._postJson(endPoint, ndjsonPayload);\n        } else {\n          this._loggingService.warn('Dropped payload due to filtering!');\n        }\n      }\n    } else {\n      this.warnOnce(this.logMessages.invalidConfig);\n    }\n  };\n\n  return ApmServer;\n}();\n\nmodule.exports = ApmServer;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/common/apm-server.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/common/config-service.js":
/*!***********************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/common/config-service.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar _require = __webpack_require__(/*! ./utils */ \"./node_modules/elastic-apm-js-core/src/common/utils.js\"),\n    getCurrentScript = _require.getCurrentScript,\n    sanitizeString = _require.sanitizeString,\n    _setTag = _require.setTag,\n    merge = _require.merge;\n\nvar Subscription = __webpack_require__(/*! ../common/subscription */ \"./node_modules/elastic-apm-js-core/src/common/subscription.js\");\n\nvar constants = __webpack_require__(/*! ./constants */ \"./node_modules/elastic-apm-js-core/src/common/constants.js\");\n\nfunction getConfigFromScript() {\n  var script = getCurrentScript();\n  var config = getDataAttributesFromNode(script);\n  return config;\n}\n\nfunction getDataAttributesFromNode(node) {\n  if (!node) {\n    return {};\n  }\n\n  var dataAttrs = {};\n  var dataRegex = /^data-([\\w-]+)$/;\n  var attrs = node.attributes;\n\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n\n    if (dataRegex.test(attr.nodeName)) {\n      var key = attr.nodeName.match(dataRegex)[1]; // camelCase key\n\n      var camelCasedkey = key.split('-').map(function (value, index) {\n        return index > 0 ? value.charAt(0).toUpperCase() + value.substring(1) : value;\n      }).join('');\n      dataAttrs[camelCasedkey] = attr.value || attr.nodeValue;\n    }\n  }\n\n  return dataAttrs;\n}\n\nvar Config =\n/*#__PURE__*/\nfunction () {\n  function Config() {\n    this.config = {};\n    this.defaults = {\n      serviceName: '',\n      serviceVersion: '',\n      agentName: 'js-base',\n      agentVersion: '%%agent-version%%',\n      serverUrl: 'http://localhost:8200',\n      serverUrlPrefix: '/intake/v2/rum/events',\n      active: true,\n      debug: false,\n      logLevel: 'warn',\n      browserResponsivenessInterval: 500,\n      browserResponsivenessBuffer: 3,\n      checkBrowserResponsiveness: true,\n      groupSimilarSpans: true,\n      similarSpanThreshold: 0.05,\n      capturePageLoad: true,\n      ignoreTransactions: [],\n      // throttlingRequestLimit: 20,\n      // throttlingInterval: 30000, // 30s\n      errorThrottleLimit: 20,\n      errorThrottleInterval: 30000,\n      transactionThrottleLimit: 20,\n      transactionThrottleInterval: 30000,\n      transactionDurationThreshold: 60000,\n      queueLimit: -1,\n      flushInterval: 500,\n      sendPageLoadTransaction: true,\n      serverStringLimit: constants.serverStringLimit,\n      distributedTracing: true,\n      distributedTracingOrigins: [],\n      distributedTracingHeaderValueCallback: undefined,\n      distributedTracingHeaderName: 'elastic-apm-traceparent',\n      pageLoadTraceId: undefined,\n      pageLoadSpanId: undefined,\n      pageLoadSampled: undefined,\n      pageLoadTransactionName: undefined,\n      transactionSampleRate: 1.0,\n      context: {},\n      platform: {}\n    };\n    this._changeSubscription = new Subscription();\n    this.filters = [];\n  }\n\n  var _proto = Config.prototype;\n\n  _proto.init = function init() {\n    var scriptData = getConfigFromScript();\n    this.setConfig(scriptData);\n  };\n\n  _proto.isActive = function isActive() {\n    return this.get('active');\n  };\n\n  _proto.addFilter = function addFilter(cb) {\n    if (typeof cb !== 'function') {\n      throw new Error('Argument to must be function');\n    }\n\n    this.filters.push(cb);\n  };\n\n  _proto.applyFilters = function applyFilters(data) {\n    for (var i = 0; i < this.filters.length; i++) {\n      data = this.filters[i](data);\n\n      if (!data) {\n        return;\n      }\n    }\n\n    return data;\n  };\n\n  _proto.get = function get(key) {\n    return key.split('.').reduce(function (obj, objKey) {\n      return obj && obj[objKey];\n    }, this.config);\n  };\n\n  _proto.getEndpointUrl = function getEndpointUrl() {\n    var url = this.get('serverUrl') + this.get('serverUrlPrefix');\n    return url;\n  };\n\n  _proto.set = function set(key, value) {\n    var levels = key.split('.');\n    var maxLevel = levels.length - 1;\n    var target = this.config;\n\n    for (var i = 0; i < maxLevel + 1; i++) {\n      var level = levels[i];\n\n      if (!level) {\n        continue;\n      }\n\n      if (i === maxLevel) {\n        target[level] = value;\n      } else {\n        var obj = target[level] || {};\n        target[level] = obj;\n        target = obj;\n      }\n    }\n  };\n\n  _proto.setUserContext = function setUserContext(userContext) {\n    var context = {};\n\n    if (typeof userContext.id === 'number') {\n      context.id = userContext.id;\n    }\n\n    if (typeof userContext.id === 'string') {\n      context.id = sanitizeString(userContext.id, this.get('serverStringLimit'));\n    }\n\n    if (typeof userContext.username === 'string') {\n      context.username = sanitizeString(userContext.username, this.get('serverStringLimit'));\n    }\n\n    if (typeof userContext.email === 'string') {\n      context.email = sanitizeString(userContext.email, this.get('serverStringLimit'));\n    }\n\n    this.set('context.user', context);\n  };\n\n  _proto.setCustomContext = function setCustomContext(customContext) {\n    if (customContext && typeof customContext === 'object') {\n      this.set('context.custom', customContext);\n    }\n  };\n\n  _proto.setTag = function setTag(key, value) {\n    if (!key) return;\n\n    if (!this.config.context.tags) {\n      this.config.context.tags = {};\n    }\n\n    _setTag(key, value, this.config.context.tags);\n  };\n\n  _proto.addTags = function addTags(tags) {\n    var _this = this;\n\n    var keys = Object.keys(tags);\n    keys.forEach(function (k) {\n      _this.setTag(k, tags[k]);\n    });\n  };\n\n  _proto.setConfig = function setConfig(properties) {\n    properties = properties || {};\n    this.config = merge({}, this.defaults, this.config, properties);\n\n    this._changeSubscription.applyAll(this, [this.config]);\n  };\n\n  _proto.subscribeToChange = function subscribeToChange(fn) {\n    return this._changeSubscription.subscribe(fn);\n  };\n\n  _proto.isValid = function isValid() {\n    var requiredKeys = ['serviceName', 'serverUrl'];\n\n    for (var i = 0; i < requiredKeys.length; i++) {\n      var key = requiredKeys[i];\n\n      if (this.config[key] == null || this.config[key] === '') {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  return Config;\n}();\n\nmodule.exports = Config;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/common/config-service.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/common/constants.js":
/*!******************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/common/constants.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\n/**\n * Task States\n */\nvar SCHEDULE = 'schedule';\nvar INVOKE = 'invoke';\nvar CLEAR = 'clear';\n/**\n * Request Sources\n */\n\nvar FETCH_SOURCE = 'fetch';\nvar XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n/**\n * Event listener methods\n */\n\nvar ADD_EVENT_LISTENER_STR = 'addEventListener';\nvar REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/**\n * Others\n */\n\nvar serverStringLimit = 1024;\nmodule.exports = {\n  SCHEDULE: SCHEDULE,\n  INVOKE: INVOKE,\n  CLEAR: CLEAR,\n  FETCH_SOURCE: FETCH_SOURCE,\n  XMLHTTPREQUEST_SOURCE: XMLHTTPREQUEST_SOURCE,\n  ADD_EVENT_LISTENER_STR: ADD_EVENT_LISTENER_STR,\n  REMOVE_EVENT_LISTENER_STR: REMOVE_EVENT_LISTENER_STR,\n  serverStringLimit: serverStringLimit\n};\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/common/constants.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/common/logging-service.js":
/*!************************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/common/logging-service.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar _require = __webpack_require__(/*! ./utils */ \"./node_modules/elastic-apm-js-core/src/common/utils.js\"),\n    noop = _require.noop;\n\nvar LoggingService =\n/*#__PURE__*/\nfunction () {\n  function LoggingService(spec) {\n    if (!spec) spec = {};\n    this.levels = ['trace', 'debug', 'info', 'warn', 'error'];\n    this.level = spec.level || 'info';\n    this.prefix = spec.prefix || '';\n    this.resetLogMethods();\n  }\n\n  var _proto = LoggingService.prototype;\n\n  _proto.shouldLog = function shouldLog(level) {\n    return this.levels.indexOf(level) >= this.levels.indexOf(this.level);\n  };\n\n  _proto.setLevel = function setLevel(level) {\n    this.level = level;\n    this.resetLogMethods();\n  };\n\n  _proto.resetLogMethods = function resetLogMethods() {\n    var loggingService = this;\n    this.levels.forEach(function (level) {\n      loggingService[level] = loggingService.shouldLog(level) ? log : noop;\n\n      function log() {\n        var prefix = loggingService.prefix;\n        var normalizedLevel;\n\n        switch (level) {\n          case 'trace':\n            normalizedLevel = 'info';\n            break;\n\n          case 'debug':\n            normalizedLevel = 'info';\n            break;\n\n          default:\n            normalizedLevel = level;\n        }\n\n        var args = arguments;\n\n        if (prefix) {\n          if (typeof prefix === 'function') prefix = prefix(level);\n          args[0] = prefix + args[0];\n        }\n\n        if (console) {\n          var realMethod = console[normalizedLevel] ? console[normalizedLevel] : console.log;\n\n          if (typeof realMethod === 'function') {\n            realMethod.apply(console, args);\n          }\n        }\n      }\n    });\n  };\n\n  return LoggingService;\n}();\n\nmodule.exports = LoggingService;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/common/logging-service.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/common/ndjson.js":
/*!***************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/common/ndjson.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar NDJSON =\n/*#__PURE__*/\nfunction () {\n  function NDJSON() {}\n\n  NDJSON.stringify = function stringify(object) {\n    return JSON.stringify(object) + '\\n';\n  };\n\n  return NDJSON;\n}();\n\nmodule.exports = NDJSON;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/common/ndjson.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/common/patching/fetch-patch.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/common/patching/fetch-patch.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar _require = __webpack_require__(/*! ./patch-utils */ \"./node_modules/elastic-apm-js-core/src/common/patching/patch-utils.js\"),\n    globalState = _require.globalState;\n\nvar _require2 = __webpack_require__(/*! ../constants */ \"./node_modules/elastic-apm-js-core/src/common/constants.js\"),\n    SCHEDULE = _require2.SCHEDULE,\n    INVOKE = _require2.INVOKE,\n    FETCH_SOURCE = _require2.FETCH_SOURCE;\n\nvar alreadyPatched = false;\n\nfunction patchFetch(callback) {\n  if (alreadyPatched) {\n    return;\n  }\n\n  alreadyPatched = true;\n\n  if (!window.fetch || !window.Request) {\n    return;\n  }\n\n  function scheduleTask(task) {\n    task.state = SCHEDULE;\n    callback(SCHEDULE, task);\n  }\n\n  function invokeTask(task) {\n    task.state = INVOKE;\n    callback(INVOKE, task);\n  }\n\n  var nativeFetch = window.fetch;\n\n  window.fetch = function (input, init) {\n    var fetchSelf = this;\n    var args = arguments;\n    var request, url;\n\n    if (typeof input === 'string') {\n      request = new Request(input, init);\n      url = input;\n    } else if (input) {\n      request = input;\n      url = request.url;\n    } else {\n      return nativeFetch.apply(fetchSelf, args);\n    }\n\n    var task = {\n      source: FETCH_SOURCE,\n      state: '',\n      type: 'macroTask',\n      data: {\n        target: request,\n        method: request.method,\n        sync: false,\n        url: url,\n        args: arguments,\n        aborted: false\n      }\n    };\n    return new Promise(function (resolve, reject) {\n      globalState.fetchInProgress = true;\n      scheduleTask(task);\n      var promise;\n\n      try {\n        promise = nativeFetch.apply(fetchSelf, [request]);\n      } catch (error) {\n        reject(error);\n        task.data.error = error;\n        invokeTask(task);\n        globalState.fetchInProgress = false;\n        return;\n      }\n\n      promise.then(function (response) {\n        resolve(response);\n        task.data.response = response;\n        invokeTask(task);\n      }, function (error) {\n        reject(error);\n        task.data.error = error;\n        invokeTask(task);\n      });\n      globalState.fetchInProgress = false;\n    });\n  };\n}\n\nmodule.exports = {\n  patchFetch: patchFetch\n};\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/common/patching/fetch-patch.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/common/patching/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/common/patching/index.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar patchXMLHttpRequest = __webpack_require__(/*! ./xhr-patch */ \"./node_modules/elastic-apm-js-core/src/common/patching/xhr-patch.js\").patchXMLHttpRequest;\n\nvar patchFetch = __webpack_require__(/*! ./fetch-patch */ \"./node_modules/elastic-apm-js-core/src/common/patching/fetch-patch.js\").patchFetch;\n\nvar Subscription = __webpack_require__(/*! ../subscription */ \"./node_modules/elastic-apm-js-core/src/common/subscription.js\");\n\nvar subscription = new Subscription();\nvar alreadyPatched = false;\n\nfunction patchAll() {\n  if (!alreadyPatched) {\n    alreadyPatched = true;\n    patchXMLHttpRequest(function (event, task) {\n      subscription.applyAll(this, [event, task]);\n    });\n    patchFetch(function (event, task) {\n      subscription.applyAll(this, [event, task]);\n    });\n  }\n\n  return subscription;\n}\n\nmodule.exports = {\n  patchAll: patchAll,\n  subscription: subscription\n};\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/common/patching/index.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/common/patching/patch-utils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/common/patching/patch-utils.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar globalState = {\n  fetchInProgress: false\n};\n\nfunction apmSymbol(name) {\n  return '__apm_symbol__' + name;\n}\n\nfunction isPropertyWritable(propertyDesc) {\n  if (!propertyDesc) {\n    return true;\n  }\n\n  if (propertyDesc.writable === false) {\n    return false;\n  }\n\n  return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\n\nfunction attachOriginToPatched(patched, original) {\n  patched[apmSymbol('OriginalDelegate')] = original;\n}\n\nfunction patchMethod(target, name, patchFn) {\n  var proto = target;\n\n  while (proto && !proto.hasOwnProperty(name)) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  if (!proto && target[name]) {\n    // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n    proto = target;\n  }\n\n  var delegateName = apmSymbol(name);\n  var delegate;\n\n  if (proto && !(delegate = proto[delegateName])) {\n    delegate = proto[delegateName] = proto[name]; // check whether proto[name] is writable\n    // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n\n    var desc = proto && Object.getOwnPropertyDescriptor(proto, name);\n\n    if (isPropertyWritable(desc)) {\n      var patchDelegate = patchFn(delegate, delegateName, name);\n\n      proto[name] = function () {\n        return patchDelegate(this, arguments);\n      };\n\n      attachOriginToPatched(proto[name], delegate);\n    }\n  }\n\n  return delegate;\n}\n\nmodule.exports = {\n  apmSymbol: apmSymbol,\n  patchMethod: patchMethod,\n  globalState: globalState,\n  XHR_IGNORE: apmSymbol('xhrIgnore'),\n  XHR_SYNC: apmSymbol('xhrSync'),\n  XHR_URL: apmSymbol('xhrURL'),\n  XHR_METHOD: apmSymbol('xhrMethod')\n};\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/common/patching/patch-utils.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/common/patching/xhr-patch.js":
/*!***************************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/common/patching/xhr-patch.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar _require = __webpack_require__(/*! ./patch-utils */ \"./node_modules/elastic-apm-js-core/src/common/patching/patch-utils.js\"),\n    apmSymbol = _require.apmSymbol,\n    patchMethod = _require.patchMethod,\n    XHR_SYNC = _require.XHR_SYNC,\n    XHR_URL = _require.XHR_URL,\n    XHR_METHOD = _require.XHR_METHOD,\n    XHR_IGNORE = _require.XHR_IGNORE;\n\nvar _require2 = __webpack_require__(/*! ../constants */ \"./node_modules/elastic-apm-js-core/src/common/constants.js\"),\n    SCHEDULE = _require2.SCHEDULE,\n    INVOKE = _require2.INVOKE,\n    CLEAR = _require2.CLEAR,\n    XMLHTTPREQUEST_SOURCE = _require2.XMLHTTPREQUEST_SOURCE,\n    ADD_EVENT_LISTENER_STR = _require2.ADD_EVENT_LISTENER_STR,\n    REMOVE_EVENT_LISTENER_STR = _require2.REMOVE_EVENT_LISTENER_STR;\n\nvar XHR_TASK = apmSymbol('xhrTask');\nvar XHR_LISTENER = apmSymbol('xhrListener');\nvar XHR_SCHEDULED = apmSymbol('xhrScheduled');\nvar alreadyPatched = false;\n\nfunction patchXMLHttpRequest(callback) {\n  if (alreadyPatched) {\n    return;\n  }\n\n  alreadyPatched = true;\n  var XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n  var oriAddListener = XMLHttpRequestPrototype[ADD_EVENT_LISTENER_STR];\n  var oriRemoveListener = XMLHttpRequestPrototype[REMOVE_EVENT_LISTENER_STR];\n\n  if (!oriAddListener) {\n    var XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n\n    if (XMLHttpRequestEventTarget) {\n      var XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n      oriAddListener = XMLHttpRequestEventTargetPrototype[ADD_EVENT_LISTENER_STR];\n      oriRemoveListener = XMLHttpRequestEventTargetPrototype[REMOVE_EVENT_LISTENER_STR];\n    }\n  }\n\n  var READY_STATE_CHANGE = 'readystatechange';\n\n  function invokeTask(task) {\n    task.state = INVOKE;\n\n    if (!task.ignore) {\n      callback(INVOKE, task);\n    }\n  }\n\n  function scheduleTask(task) {\n    XMLHttpRequest[XHR_SCHEDULED] = false;\n    task.state = SCHEDULE;\n\n    if (!task.ignore) {\n      callback(SCHEDULE, task);\n    }\n\n    var data = task.data;\n    var target = data.target; // remove existing event listener\n\n    var listener = target[XHR_LISTENER];\n\n    if (!oriAddListener) {\n      oriAddListener = target[ADD_EVENT_LISTENER_STR];\n      oriRemoveListener = target[REMOVE_EVENT_LISTENER_STR];\n    }\n\n    if (listener) {\n      oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n    }\n\n    var newListener = target[XHR_LISTENER] = function () {\n      if (target.readyState === target.DONE) {\n        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n        // readyState=4 multiple times, so we need to check task state here\n        if (!data.aborted && XMLHttpRequest[XHR_SCHEDULED] && task.state === SCHEDULE) {\n          invokeTask(task);\n        }\n      }\n    };\n\n    oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n    var storedTask = target[XHR_TASK];\n\n    if (!storedTask) {\n      target[XHR_TASK] = task;\n    }\n\n    var result = sendNative.apply(target, data.args);\n    XMLHttpRequest[XHR_SCHEDULED] = true;\n    return result;\n  }\n\n  function clearTask(task) {\n    task.state = CLEAR;\n    callback(CLEAR, task);\n    var data = task.data; // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n    // to prevent it from firing. So instead, we store info for the event listener.\n\n    data.aborted = true;\n  }\n\n  var openNative = patchMethod(XMLHttpRequestPrototype, 'open', function () {\n    return function (self, args) {\n      self[XHR_METHOD] = args[0];\n      self[XHR_URL] = args[1];\n      self[XHR_SYNC] = args[2] === false;\n      return openNative.apply(self, args);\n    };\n  });\n  var sendNative = patchMethod(XMLHttpRequestPrototype, 'send', function () {\n    return function (self, args) {\n      var task = {\n        source: XMLHTTPREQUEST_SOURCE,\n        state: '',\n        type: 'macroTask',\n        ignore: self[XHR_IGNORE],\n        data: {\n          target: self,\n          method: self[XHR_METHOD],\n          sync: self[XHR_SYNC],\n          url: self[XHR_URL],\n          args: args,\n          aborted: false\n        }\n      };\n      var result = scheduleTask(task);\n\n      if (self[XHR_SYNC]) {\n        invokeTask(task);\n      }\n\n      return result;\n    };\n  });\n  var abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', function () {\n    return function (self, args) {\n      var task = self[XHR_TASK];\n\n      if (task && typeof task.type === 'string') {\n        // If the XHR has already been aborted, do nothing.\n        if (task.data && task.data.aborted) {\n          return;\n        }\n\n        clearTask(task);\n      }\n\n      return abortNative.apply(self, args);\n    };\n  });\n}\n\nmodule.exports = {\n  patchXMLHttpRequest: patchXMLHttpRequest\n};\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/common/patching/xhr-patch.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/common/queue.js":
/*!**************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/common/queue.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar Queue =\n/*#__PURE__*/\nfunction () {\n  function Queue(onFlush, opts) {\n    if (!opts) opts = {};\n    this.onFlush = onFlush;\n    this.items = [];\n    this.queueLimit = opts.queueLimit || -1;\n    this.flushInterval = opts.flushInterval || 0;\n    this.timeoutId = undefined;\n  }\n\n  var _proto = Queue.prototype;\n\n  _proto._setTimer = function _setTimer() {\n    var _this = this;\n\n    this.timeoutId = setTimeout(function () {\n      _this.flush();\n    }, this.flushInterval);\n  };\n\n  _proto.flush = function flush() {\n    this.onFlush(this.items);\n\n    this._clear();\n  };\n\n  _proto._clear = function _clear() {\n    if (typeof this.timeoutId !== 'undefined') {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = undefined;\n    }\n\n    this.items = [];\n  };\n\n  _proto.add = function add(item) {\n    this.items.push(item);\n\n    if (this.queueLimit !== -1 && this.items.length >= this.queueLimit) {\n      this.flush();\n    } else {\n      if (typeof this.timeoutId === 'undefined') {\n        this._setTimer();\n      }\n    }\n  };\n\n  return Queue;\n}();\n\nmodule.exports = Queue;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/common/queue.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/common/service-factory.js":
/*!************************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/common/service-factory.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar ApmServer = __webpack_require__(/*! ./apm-server */ \"./node_modules/elastic-apm-js-core/src/common/apm-server.js\");\n\nvar ConfigService = __webpack_require__(/*! ./config-service */ \"./node_modules/elastic-apm-js-core/src/common/config-service.js\");\n\nvar LoggingService = __webpack_require__(/*! ./logging-service */ \"./node_modules/elastic-apm-js-core/src/common/logging-service.js\");\n\nvar patchUtils = __webpack_require__(/*! ./patching/patch-utils */ \"./node_modules/elastic-apm-js-core/src/common/patching/patch-utils.js\");\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/elastic-apm-js-core/src/common/utils.js\");\n\nvar ServiceFactory =\n/*#__PURE__*/\nfunction () {\n  function ServiceFactory() {\n    this._serviceCreators = {};\n    this._serviceInstances = {};\n    this.initialized = false;\n  }\n\n  var _proto = ServiceFactory.prototype;\n\n  _proto.registerCoreServices = function registerCoreServices() {\n    var serviceFactory = this;\n    this.registerServiceCreator('ConfigService', function () {\n      return new ConfigService();\n    });\n    this.registerServiceCreator('LoggingService', function () {\n      return new LoggingService();\n    });\n    this.registerServiceCreator('ApmServer', function () {\n      return new ApmServer(serviceFactory.getService('ConfigService'), serviceFactory.getService('LoggingService'));\n    });\n    this.registerServiceInstance('PatchUtils', patchUtils);\n    this.registerServiceInstance('Utils', utils);\n  };\n\n  _proto.init = function init() {\n    if (this.initialized) {\n      return;\n    }\n\n    this.initialized = true;\n    var serviceFactory = this;\n    var configService = serviceFactory.getService('ConfigService');\n    configService.init();\n    var loggingService = serviceFactory.getService('LoggingService');\n\n    function setLogLevel(loggingService, configService) {\n      if (configService.get('debug') === true && configService.config.logLevel !== 'trace') {\n        loggingService.setLevel('debug', false);\n      } else {\n        loggingService.setLevel(configService.get('logLevel'), false);\n      }\n    }\n\n    setLogLevel(loggingService, configService);\n    configService.subscribeToChange(function () {\n      setLogLevel(loggingService, configService);\n    });\n    var apmServer = serviceFactory.getService('ApmServer');\n    apmServer.init();\n  };\n\n  _proto.registerServiceCreator = function registerServiceCreator(name, creator) {\n    this._serviceCreators[name] = creator;\n  };\n\n  _proto.registerServiceInstance = function registerServiceInstance(name, instance) {\n    this._serviceInstances[name] = instance;\n  };\n\n  _proto.getService = function getService(name) {\n    if (!this._serviceInstances[name]) {\n      if (typeof this._serviceCreators[name] === 'function') {\n        this._serviceInstances[name] = this._serviceCreators[name](this);\n      } else {\n        throw new Error('Can not get service, No creator for: ' + name);\n      }\n    }\n\n    return this._serviceInstances[name];\n  };\n\n  return ServiceFactory;\n}();\n\nmodule.exports = ServiceFactory;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/common/service-factory.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/common/subscription.js":
/*!*********************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/common/subscription.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription() {\n    this.subscriptions = [];\n  }\n\n  var _proto = Subscription.prototype;\n\n  _proto.subscribe = function subscribe(fn) {\n    var _this = this;\n\n    this.subscriptions.push(fn);\n    return function () {\n      var index = _this.subscriptions.indexOf(fn);\n\n      if (index > -1) {\n        _this.subscriptions.splice(index, 1);\n      }\n    };\n  };\n\n  _proto.applyAll = function applyAll(applyTo, applyWith) {\n    this.subscriptions.forEach(function (fn) {\n      try {\n        fn.apply(applyTo, applyWith);\n      } catch (error) {\n        console.log(error, error.stack);\n      }\n    }, this);\n  };\n\n  return Subscription;\n}();\n\nmodule.exports = Subscription;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/common/subscription.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/common/throttle.js":
/*!*****************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/common/throttle.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nfunction throttle(fn, onThrottle, opts) {\n  var context = opts.context || this;\n  var limit = opts.limit;\n  var interval = opts.interval;\n\n  var countFn = opts.countFn || function () {};\n\n  var counter = 0;\n  var timeoutId;\n  return function () {\n    var count = typeof countFn === 'function' && countFn.apply(context, arguments);\n\n    if (typeof count !== 'number') {\n      count = 1;\n    }\n\n    counter = counter + count;\n\n    if (typeof timeoutId === 'undefined') {\n      timeoutId = setTimeout(function () {\n        counter = 0;\n        timeoutId = undefined;\n      }, interval);\n    }\n\n    if (counter > limit) {\n      if (typeof onThrottle === 'function') {\n        return onThrottle.apply(context, arguments);\n      }\n    } else {\n      return fn.apply(context, arguments);\n    }\n  };\n}\n\nmodule.exports = throttle;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/common/throttle.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/common/url.js":
/*!************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/common/url.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\n/**\n * Bare miniaml URL parser that is not compatible with URL Api\n * in the browser\n *\n * Does not support\n * - URLSearchParams\n * - Unicode chars, Punycode\n *\n * {\n *    hash: '',\n *    host: '',\n *    origin: '',\n *    path: ''\n *    protocol: '',\n *    query: '',\n * }\n *\n * Based on code from url-parser!\n * https://github.com/unshiftio/url-parse/blob/master/index.js\n *\n */\nvar RULES = [['#', 'hash'], ['?', 'query'], ['/', 'path'], [NaN, 'host', 1] //\n];\nvar PROTOCOL_REGEX = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i;\n\nvar Url =\n/*#__PURE__*/\nfunction () {\n  function Url(url) {\n    var _this$extractProtocol = this.extractProtocol(url || ''),\n        protocol = _this$extractProtocol.protocol,\n        address = _this$extractProtocol.address,\n        slashes = _this$extractProtocol.slashes;\n\n    var relative = !protocol && !slashes;\n    var location = this.getLocation();\n    var instructions = RULES.slice(); // Sanitize what is left of the address\n\n    address = address.replace('\\\\', '/');\n    var index;\n\n    for (var i = 0; i < instructions.length; i++) {\n      var instruction = instructions[i];\n      var parse = instruction[0];\n      var key = instruction[1];\n\n      if (typeof parse === 'string') {\n        index = address.indexOf(parse);\n\n        if (~index) {\n          this[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      } else {\n        /** NaN condition */\n        this[key] = address;\n      }\n      /**\n       * Default values for all keys from location if url is relative\n       */\n\n\n      this[key] = this[key] || (relative && instruction[2] ? location[key] || '' : '');\n      /**\n       * host should be lowercased so they can be used to\n       * create a proper `origin`.\n       */\n\n      if (instruction[2]) this[key] = this[key].toLowerCase();\n    }\n\n    this.protocol = protocol || location.protocol || '';\n    this.origin = this.protocol && this.host && this.protocol !== 'file:' ? this.protocol + '//' + this.host : 'null';\n  }\n\n  var _proto = Url.prototype;\n\n  _proto.getLocation = function getLocation() {\n    var globalVar = {};\n\n    if (typeof window !== 'undefined') {\n      globalVar = window;\n    }\n\n    return globalVar.location;\n  };\n\n  _proto.extractProtocol = function extractProtocol(url) {\n    var match = PROTOCOL_REGEX.exec(url);\n    return {\n      protocol: match[1] ? match[1].toLowerCase() : '',\n      slashes: !!match[2],\n      address: match[3]\n    };\n  };\n\n  return Url;\n}();\n\nmodule.exports = Url;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/common/url.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/common/utils.js":
/*!**************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/common/utils.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar constants = __webpack_require__(/*! ./constants */ \"./node_modules/elastic-apm-js-core/src/common/constants.js\");\n\nvar slice = [].slice;\n\nvar Url = __webpack_require__(/*! ../common/url */ \"./node_modules/elastic-apm-js-core/src/common/url.js\");\n\nvar rng = __webpack_require__(/*! uuid/lib/rng-browser */ \"./node_modules/uuid/lib/rng-browser.js\");\n\nfunction isCORSSupported() {\n  var xhr = new window.XMLHttpRequest();\n  return 'withCredentials' in xhr;\n}\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToHex(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nfunction getDtHeaderValue(span) {\n  var dtVersion = '00';\n  var dtUnSampledFlags = '00'; // 00000001 ->  '01' -> recorded\n\n  var dtSampledFlags = '01';\n\n  if (span && span.traceId && span.id && span.parentId) {\n    var flags = span.sampled ? dtSampledFlags : dtUnSampledFlags;\n    /**\n     * In the case of unsampled traces, propagate transaction id (parentId)\n     * instead of span id to the downstream\n     */\n\n    var id = span.sampled ? span.id : span.parentId;\n    return dtVersion + '-' + span.traceId + '-' + id + '-' + flags;\n  }\n}\n\nfunction parseDtHeaderValue(value) {\n  var parsed = /^([\\da-f]{2})-([\\da-f]{32})-([\\da-f]{16})-([\\da-f]{2})$/.exec(value);\n\n  if (parsed) {\n    var flags = parsed[4];\n    var sampled = flags !== '00';\n    return {\n      traceId: parsed[2],\n      id: parsed[3],\n      sampled: sampled\n    };\n  }\n}\n\nfunction isDtHeaderValid(header) {\n  return /^[\\da-f]{2}-[\\da-f]{32}-[\\da-f]{16}-[\\da-f]{2}$/.test(header) && header.slice(3, 35) !== '00000000000000000000000000000000' && header.slice(36, 52) !== '0000000000000000';\n}\n\nfunction checkSameOrigin(source, target) {\n  var isSame = false;\n\n  if (typeof target === 'string') {\n    var src = new Url(source);\n    var tar = new Url(target);\n    isSame = src.origin === tar.origin;\n  } else if (Array.isArray(target)) {\n    target.forEach(function (t) {\n      if (!isSame) {\n        isSame = checkSameOrigin(source, t);\n      }\n    });\n  }\n\n  return isSame;\n}\n\nfunction generateRandomId(length) {\n  var id = bytesToHex(rng());\n  return id.substr(0, length);\n}\n\nfunction isPlatformSupported() {\n  return typeof window !== 'undefined' && typeof Array.prototype.forEach === 'function' && typeof JSON.stringify === 'function' && typeof Function.bind === 'function' && window.performance && typeof window.performance.now === 'function' && isCORSSupported();\n}\n\nfunction sanitizeString(value, limit, required, placeholder) {\n  if (typeof value === 'number') {\n    value = String(value);\n  }\n\n  if (required && !value) {\n    value = placeholder || 'NA';\n  }\n\n  if (value) {\n    return String(value).substr(0, limit);\n  } else {\n    return value;\n  }\n}\n\nfunction setTag(key, value, obj) {\n  if (!obj || !key) return;\n  var skey = removeInvalidChars(key);\n  obj[skey] = sanitizeString(value, constants.serverStringLimit);\n  return obj;\n}\n\nfunction sanitizeObjectStrings(obj, limit, required, placeholder) {\n  if (!obj) return obj;\n\n  if (typeof obj === 'string') {\n    return sanitizeString(obj, limit, required, placeholder);\n  }\n\n  var keys = Object.keys(obj);\n  keys.forEach(function (k) {\n    var value = obj[k];\n\n    if (typeof value === 'string') {\n      value = sanitizeString(obj[k], limit, required, placeholder);\n    } else if (typeof value === 'object') {\n      value = sanitizeObjectStrings(value, limit, required, placeholder);\n    }\n\n    obj[k] = value;\n  });\n  return obj;\n}\n\nvar navigationTimingKeys = ['fetchStart', 'domainLookupStart', 'domainLookupEnd', 'connectStart', 'connectEnd', 'secureConnectionStart', 'requestStart', 'responseStart', 'responseEnd', 'domLoading', 'domInteractive', 'domContentLoadedEventStart', 'domContentLoadedEventEnd', 'domComplete', 'loadEventStart', 'loadEventEnd'];\n\nfunction getNavigationTimingMarks() {\n  var timing = window.performance.timing;\n  var fetchStart = timing.fetchStart;\n  var marks = {};\n  navigationTimingKeys.forEach(function (timingKey) {\n    var m = timing[timingKey];\n\n    if (m && m >= fetchStart) {\n      marks[timingKey] = m - fetchStart;\n    }\n  });\n  return marks;\n}\n/**\n * Paint Timing Metrics that is available during page load\n * https://www.w3.org/TR/paint-timing/\n */\n\n\nfunction getPaintTimingMarks() {\n  var paints = {};\n  var perf = window.performance;\n\n  if (perf.getEntriesByType) {\n    var entries = perf.getEntriesByType('paint');\n\n    if (entries.length > 0) {\n      var timings = perf.timing;\n      /**\n       * To avoid capturing the unload event handler effect in paint timings\n       */\n\n      var unloadDiff = timings.fetchStart - timings.navigationStart;\n\n      for (var i = 0; i < entries.length; i++) {\n        var data = entries[i];\n        var calcPaintTime = unloadDiff >= 0 ? data.startTime - unloadDiff : data.startTime;\n        paints[data.name] = calcPaintTime;\n      }\n    }\n  }\n\n  return paints;\n}\n\nfunction getTimeOrigin() {\n  return window.performance.timing.fetchStart;\n}\n\nfunction getPageMetadata() {\n  return {\n    page: {\n      referer: document.referrer,\n      url: window.location.href\n    }\n  };\n}\n\nfunction stripQueryStringFromUrl(url) {\n  return url && url.split('?')[0];\n}\n\nfunction isObject(value) {\n  // http://jsperf.com/isobject4\n  return value !== null && typeof value === 'object';\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction baseExtend(dst, objs, deep) {\n  for (var i = 0, ii = objs.length; i < ii; ++i) {\n    var obj = objs[i];\n    if (!isObject(obj) && !isFunction(obj)) continue;\n    var keys = Object.keys(obj);\n\n    for (var j = 0, jj = keys.length; j < jj; j++) {\n      var key = keys[j];\n      var src = obj[key];\n\n      if (deep && isObject(src)) {\n        if (!isObject(dst[key])) dst[key] = Array.isArray(src) ? [] : {};\n        baseExtend(dst[key], [src], false); // only one level of deep merge\n      } else {\n        dst[key] = src;\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction getElasticScript() {\n  if (typeof document !== 'undefined') {\n    var scripts = document.getElementsByTagName('script');\n\n    for (var i = 0, l = scripts.length; i < l; i++) {\n      var sc = scripts[i];\n\n      if (sc.src.indexOf('elastic') > 0) {\n        return sc;\n      }\n    }\n  }\n}\n\nfunction getCurrentScript() {\n  if (typeof document !== 'undefined') {\n    // Source http://www.2ality.com/2014/05/current-script.html\n    var currentScript = document.currentScript;\n\n    if (!currentScript) {\n      return getElasticScript();\n    }\n\n    return currentScript;\n  }\n}\n\nfunction extend(dst) {\n  return baseExtend(dst, slice.call(arguments, 1), false);\n}\n\nfunction merge(dst) {\n  return baseExtend(dst, slice.call(arguments, 1), true);\n}\n\nfunction isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\n\nfunction noop() {}\n\nfunction find(array, predicate, thisArg) {\n  // Source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n  if (array == null) {\n    throw new TypeError('array is null or not defined');\n  }\n\n  var o = Object(array);\n  var len = o.length >>> 0;\n\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate must be a function');\n  }\n\n  var k = 0;\n\n  while (k < len) {\n    var kValue = o[k];\n\n    if (predicate.call(thisArg, kValue, k, o)) {\n      return kValue;\n    }\n\n    k++;\n  }\n\n  return undefined;\n}\n\nfunction removeInvalidChars(key) {\n  return key.replace(/[.*\"]/g, '_');\n}\n\nmodule.exports = {\n  extend: extend,\n  merge: merge,\n  isUndefined: isUndefined,\n  noop: noop,\n  baseExtend: baseExtend,\n  bytesToHex: bytesToHex,\n  isCORSSupported: isCORSSupported,\n  isObject: isObject,\n  isFunction: isFunction,\n  isPlatformSupported: isPlatformSupported,\n  isDtHeaderValid: isDtHeaderValid,\n  parseDtHeaderValue: parseDtHeaderValue,\n  getNavigationTimingMarks: getNavigationTimingMarks,\n  getPaintTimingMarks: getPaintTimingMarks,\n  getDtHeaderValue: getDtHeaderValue,\n  getPageMetadata: getPageMetadata,\n  getCurrentScript: getCurrentScript,\n  getElasticScript: getElasticScript,\n  getTimeOrigin: getTimeOrigin,\n  generateRandomId: generateRandomId,\n  rng: rng,\n  checkSameOrigin: checkSameOrigin,\n  sanitizeString: sanitizeString,\n  sanitizeObjectStrings: sanitizeObjectStrings,\n  setTag: setTag,\n  stripQueryStringFromUrl: stripQueryStringFromUrl,\n  find: find,\n  removeInvalidChars: removeInvalidChars\n};\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/common/utils.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/error-logging/error-logging.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/error-logging/error-logging.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar StackTraceService = __webpack_require__(/*! ./stack-trace-service */ \"./node_modules/elastic-apm-js-core/src/error-logging/stack-trace-service.js\");\n\nvar utils = __webpack_require__(/*! ../common/utils */ \"./node_modules/elastic-apm-js-core/src/common/utils.js\");\n\nvar ErrorLogging =\n/*#__PURE__*/\nfunction () {\n  function ErrorLogging(apmServer, configService, loggingService, transactionService) {\n    this._apmServer = apmServer;\n    this._configService = configService;\n    this._loggingService = loggingService;\n    this._transactionService = transactionService;\n    this._stackTraceService = new StackTraceService(configService, loggingService);\n  } // errorEvent = {message, filename, lineno, colno, error}\n\n\n  var _proto = ErrorLogging.prototype;\n\n  _proto.createErrorDataModel = function createErrorDataModel(errorEvent) {\n    var filePath = this._stackTraceService.cleanFilePath(errorEvent.filename);\n\n    var fileName = this._stackTraceService.filePathToFileName(filePath);\n\n    var culprit;\n\n    var frames = this._stackTraceService.createStackTraces(errorEvent);\n\n    frames = this._stackTraceService.filterInvalidFrames(frames);\n\n    if (!fileName && frames.length) {\n      var lastFrame = frames[frames.length - 1];\n\n      if (lastFrame.filename) {\n        fileName = lastFrame.filename;\n      } else {\n        // If filename empty, assume inline script\n        fileName = '(inline script)';\n      }\n    }\n\n    if (this._stackTraceService.isFileInline(filePath)) {\n      culprit = '(inline script)';\n    } else {\n      culprit = fileName;\n    }\n\n    var message = errorEvent.message || errorEvent.error && errorEvent.error.message;\n    var errorType = errorEvent.error ? errorEvent.error.name : undefined;\n\n    if (!errorType) {\n      /**\n       * Try to extract type from message formatted like\n       * 'ReferenceError: Can't find variable: initHighlighting'\n       */\n      if (message && message.indexOf(':') > -1) {\n        errorType = message.split(':')[0];\n      } else {\n        errorType = '';\n      }\n    }\n\n    var configContext = this._configService.get('context');\n\n    var stringLimit = this._configService.get('serverStringLimit');\n\n    var errorContext;\n\n    if (errorEvent.error && typeof errorEvent.error === 'object') {\n      errorContext = this._getErrorProperties(errorEvent.error);\n    }\n\n    var browserMetadata = utils.getPageMetadata();\n    var context = utils.merge({}, browserMetadata, configContext, errorContext);\n    var errorObject = {\n      id: utils.generateRandomId(),\n      culprit: utils.sanitizeString(culprit),\n      exception: {\n        message: utils.sanitizeString(message, undefined, true),\n        stacktrace: frames,\n        type: utils.sanitizeString(errorType, stringLimit, false)\n      },\n      context: context\n    };\n\n    var currentTransaction = this._transactionService.getCurrentTransaction();\n\n    if (currentTransaction) {\n      errorObject.trace_id = currentTransaction.traceId;\n      errorObject.parent_id = currentTransaction.id;\n      errorObject.transaction_id = currentTransaction.id;\n      errorObject.transaction = {\n        type: currentTransaction.type,\n        sampled: currentTransaction.sampled\n      };\n    }\n\n    return errorObject;\n  };\n\n  _proto.logErrorEvent = function logErrorEvent(errorEvent, sendImmediately) {\n    if (this._configService.isActive()) {\n      if (typeof errorEvent === 'undefined') {\n        return;\n      }\n\n      var errorObject = this.createErrorDataModel(errorEvent);\n\n      if (typeof errorObject.exception.message === 'undefined') {\n        return;\n      }\n\n      if (sendImmediately) {\n        return this._apmServer.sendErrors([errorObject]);\n      } else {\n        return this._apmServer.addError(errorObject);\n      }\n    }\n  };\n\n  _proto.registerGlobalEventListener = function registerGlobalEventListener() {\n    var errorLogging = this;\n\n    window.onerror = function (messageOrEvent, source, lineno, colno, error) {\n      var errorEvent;\n\n      if (typeof messageOrEvent !== 'undefined' && typeof messageOrEvent !== 'string') {\n        errorEvent = messageOrEvent;\n      } else {\n        errorEvent = {\n          message: messageOrEvent,\n          filename: source,\n          lineno: lineno,\n          colno: colno,\n          error: error\n        };\n      }\n\n      errorLogging.logErrorEvent(errorEvent);\n    };\n  };\n\n  _proto.logError = function logError(messageOrError) {\n    var errorEvent = {};\n\n    if (typeof messageOrError === 'string') {\n      errorEvent.message = messageOrError;\n    } else {\n      errorEvent.error = messageOrError;\n    }\n\n    return this.logErrorEvent(errorEvent);\n  };\n\n  _proto._getErrorProperties = function _getErrorProperties(error) {\n    var properties = {};\n    Object.keys(error).forEach(function (key) {\n      if (key === 'stack') return;\n      var val = error[key];\n      if (val === null) return; // null is typeof object and well break the switch below\n\n      switch (typeof val) {\n        case 'function':\n          return;\n\n        case 'object':\n          // ignore all objects except Dates\n          if (typeof val.toISOString !== 'function') return;\n          val = val.toISOString();\n      }\n\n      properties[key] = val;\n    });\n    return properties;\n  };\n\n  return ErrorLogging;\n}();\n\nmodule.exports = ErrorLogging;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/error-logging/error-logging.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/error-logging/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/error-logging/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar ErrorLogging = __webpack_require__(/*! ./error-logging */ \"./node_modules/elastic-apm-js-core/src/error-logging/error-logging.js\");\n\nmodule.exports = {\n  ErrorLogging: ErrorLogging,\n  registerServices: function registerServices(serviceFactory) {\n    serviceFactory.registerServiceCreator('ErrorLogging', function () {\n      var apmService = serviceFactory.getService('ApmServer');\n      var configService = serviceFactory.getService('ConfigService');\n      var loggingService = serviceFactory.getService('LoggingService');\n      var transactionService = serviceFactory.getService('TransactionService');\n      return new ErrorLogging(apmService, configService, loggingService, transactionService);\n    });\n  }\n};\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/error-logging/index.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/error-logging/stack-trace-service.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/error-logging/stack-trace-service.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar errorStackParser = __webpack_require__(/*! error-stack-parser */ \"./node_modules/error-stack-parser/error-stack-parser.js\");\n\nvar StackTraceService =\n/*#__PURE__*/\nfunction () {\n  function StackTraceService(configService, loggingService) {\n    this._configService = configService;\n    this._loggingService = loggingService;\n  }\n\n  var _proto = StackTraceService.prototype;\n\n  _proto.createStackTraces = function createStackTraces(errorEvent) {\n    var stackTraceService = this;\n    var error = errorEvent.error;\n    var stackTraces;\n\n    if (error) {\n      try {\n        stackTraces = errorStackParser.parse(error);\n      } catch (e) {\n        this._loggingService.debug('Parsing error stack failed!', e);\n      }\n    }\n\n    if (!stackTraces || stackTraces.length === 0) {\n      stackTraces = [{\n        fileName: errorEvent.filename,\n        lineNumber: errorEvent.lineno,\n        columnNumber: errorEvent.colno\n      }];\n    }\n\n    stackTraces = ErrorStackNormalizer(stackTraces);\n    stackTraces = stackTraces.map(function (stack) {\n      if (!stack.fileName && !stack.lineNumber) {\n        return {};\n      }\n\n      if (!stack.columnNumber && !stack.lineNumber) {\n        return {};\n      }\n\n      var filePath = stackTraceService.cleanFilePath(stack.fileName);\n      var fileName = stackTraceService.filePathToFileName(filePath);\n\n      if (stackTraceService.isFileInline(filePath)) {\n        fileName = '(inline script)';\n      }\n\n      return {\n        abs_path: stack.fileName,\n        filename: fileName,\n        function: stack.functionName || '<anonymous>',\n        lineno: stack.lineNumber,\n        colno: stack.columnNumber\n      };\n    });\n    return stackTraces;\n  };\n\n  _proto.filterInvalidFrames = function filterInvalidFrames(frames) {\n    var result = [];\n\n    if (Array.isArray(frames)) {\n      result = frames.filter(function (f) {\n        return typeof f['filename'] !== 'undefined' && typeof f['lineno'] !== 'undefined';\n      });\n    }\n\n    return result;\n  };\n\n  _proto.filePathToFileName = function filePathToFileName(fileUrl) {\n    var origin = window.location.origin || window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n\n    if (fileUrl.indexOf(origin) > -1) {\n      fileUrl = fileUrl.replace(origin + '/', '');\n    }\n\n    return fileUrl;\n  };\n\n  _proto.cleanFilePath = function cleanFilePath(filePath) {\n    if (!filePath) {\n      filePath = '';\n    }\n\n    if (filePath === '<anonymous>') {\n      filePath = '';\n    }\n\n    return filePath;\n  };\n\n  _proto.isFileInline = function isFileInline(fileUrl) {\n    if (fileUrl) {\n      return window.location.href.indexOf(fileUrl) === 0;\n    } else {\n      return false;\n    }\n  };\n\n  return StackTraceService;\n}();\n\nfunction ErrorStackNormalizer(stackFrames) {\n  return stackFrames.map(function (frame) {\n    if (frame.functionName) {\n      frame.functionName = normalizeFunctionName(frame.functionName);\n    }\n\n    return frame;\n  });\n}\n\nfunction normalizeFunctionName(fnName) {\n  // SpinderMonkey name convetion (https://developer.mozilla.org/en-US/docs/Tools/Debugger-API/Debugger.Object#Accessor_Properties_of_the_Debugger.Object_prototype)\n  // We use a/b to refer to the b defined within a\n  var parts = fnName.split('/');\n\n  if (parts.length > 1) {\n    fnName = ['Object', parts[parts.length - 1]].join('.');\n  } else {\n    fnName = parts[0];\n  } // a< to refer to a function that occurs somewhere within an expression that is assigned to a.\n\n\n  fnName = fnName.replace(/.<$/gi, '.<anonymous>'); // Normalize IE's 'Anonymous function'\n\n  fnName = fnName.replace(/^Anonymous function$/, '<anonymous>'); // Always use the last part\n\n  parts = fnName.split('.');\n\n  if (parts.length > 1) {\n    fnName = parts[parts.length - 1];\n  } else {\n    fnName = parts[0];\n  }\n\n  return fnName;\n}\n\nmodule.exports = StackTraceService;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/error-logging/stack-trace-service.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n// export public core APIs.\nvar ErrorLogging = __webpack_require__(/*! ./error-logging */ \"./node_modules/elastic-apm-js-core/src/error-logging/index.js\");\n\nvar PerformanceMonitoring = __webpack_require__(/*! ./performance-monitoring */ \"./node_modules/elastic-apm-js-core/src/performance-monitoring/index.js\");\n\nvar ServiceFactory = __webpack_require__(/*! ./common/service-factory */ \"./node_modules/elastic-apm-js-core/src/common/service-factory.js\");\n\nvar utils = __webpack_require__(/*! ./common/utils */ \"./node_modules/elastic-apm-js-core/src/common/utils.js\");\n\nvar patching = __webpack_require__(/*! ./common/patching */ \"./node_modules/elastic-apm-js-core/src/common/patching/index.js\");\n\nmodule.exports = {\n  createServiceFactory: function createServiceFactory() {\n    var serviceFactory = new ServiceFactory();\n    serviceFactory.registerCoreServices();\n    ErrorLogging.registerServices(serviceFactory);\n    PerformanceMonitoring.registerServices(serviceFactory);\n    return serviceFactory;\n  },\n  ServiceFactory: ServiceFactory,\n  patching: patching,\n  utils: utils\n};\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/index.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/opentracing/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/opentracing/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar Tracer = __webpack_require__(/*! ./tracer */ \"./node_modules/elastic-apm-js-core/src/opentracing/tracer.js\");\n\nvar Span = __webpack_require__(/*! ./span */ \"./node_modules/elastic-apm-js-core/src/opentracing/span.js\");\n\nfunction createTracer(serviceFactory) {\n  var performanceMonitoring = serviceFactory.getService('PerformanceMonitoring');\n  var transactionService = serviceFactory.getService('TransactionService');\n  var errorLogging = serviceFactory.getService('ErrorLogging');\n  var loggingService = serviceFactory.getService('LoggingService');\n  return new Tracer(performanceMonitoring, transactionService, loggingService, errorLogging);\n}\n\nmodule.exports = {\n  Span: Span,\n  Tracer: Tracer,\n  createTracer: createTracer\n};\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/opentracing/index.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/opentracing/span.js":
/*!******************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/opentracing/span.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar _require = __webpack_require__(/*! opentracing/lib/span */ \"./node_modules/opentracing/lib/span.js\"),\n    otSpan = _require.Span;\n\nvar _require2 = __webpack_require__(/*! ../common/utils */ \"./node_modules/elastic-apm-js-core/src/common/utils.js\"),\n    extend = _require2.extend,\n    getTimeOrigin = _require2.getTimeOrigin;\n\nvar Transaction = __webpack_require__(/*! ../performance-monitoring/transaction */ \"./node_modules/elastic-apm-js-core/src/performance-monitoring/transaction.js\");\n\nvar Span =\n/*#__PURE__*/\nfunction (_otSpan) {\n  _inheritsLoose(Span, _otSpan);\n\n  function Span(tracer, span) {\n    var _this;\n\n    _this = _otSpan.call(this) || this;\n    _this.__tracer = tracer;\n    _this.span = span;\n    _this.isTransaction = span instanceof Transaction;\n    _this.spanContext = {\n      id: span.id,\n      traceId: span.traceId,\n      sampled: span.sampled\n    };\n    return _this;\n  }\n\n  var _proto = Span.prototype;\n\n  _proto._context = function _context() {\n    return this.spanContext;\n  };\n\n  _proto._tracer = function _tracer() {\n    return this.__tracer;\n  };\n\n  _proto._setOperationName = function _setOperationName(name) {\n    this.span.name = name;\n  };\n\n  _proto._addTags = function _addTags(keyValuePairs) {\n    var tags = extend({}, keyValuePairs);\n\n    if (tags.type) {\n      this.span.type = tags.type;\n      delete tags.type;\n    }\n\n    if (this.isTransaction) {\n      var userId = tags['user.id'];\n      var username = tags['user.username'];\n      var email = tags['user.email'];\n\n      if (userId || username || email) {\n        this.span.addContext({\n          user: {\n            id: userId,\n            username: username,\n            email: email\n          }\n        });\n        delete tags['user.id'];\n        delete tags['user.username'];\n        delete tags['user.email'];\n      }\n    }\n\n    this.span.addTags(tags);\n  } // eslint-disable-next-line\n  ;\n\n  _proto._log = function _log(log, timestamp) {\n    if (log.event === 'error') {\n      if (log['error.object']) {\n        this.__tracer.errorLogging.logError(log['error.object']);\n      } else if (log.message) {\n        this.__tracer.errorLogging.logError(log.message);\n      }\n    }\n  };\n\n  _proto._finish = function _finish(finishTime) {\n    this.span.end();\n\n    if (finishTime) {\n      this.span._end = finishTime - getTimeOrigin();\n    }\n  };\n\n  return Span;\n}(otSpan);\n\nmodule.exports = Span;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/opentracing/span.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/opentracing/tracer.js":
/*!********************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/opentracing/tracer.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar _require = __webpack_require__(/*! opentracing/lib/tracer */ \"./node_modules/opentracing/lib/tracer.js\"),\n    otTracer = _require.Tracer;\n\nvar _require2 = __webpack_require__(/*! opentracing/lib/constants */ \"./node_modules/opentracing/lib/constants.js\"),\n    REFERENCE_CHILD_OF = _require2.REFERENCE_CHILD_OF,\n    FORMAT_TEXT_MAP = _require2.FORMAT_TEXT_MAP,\n    FORMAT_HTTP_HEADERS = _require2.FORMAT_HTTP_HEADERS,\n    FORMAT_BINARY = _require2.FORMAT_BINARY;\n\nvar _require3 = __webpack_require__(/*! opentracing/lib/span */ \"./node_modules/opentracing/lib/span.js\"),\n    NoopSpan = _require3.Span;\n\nvar _require4 = __webpack_require__(/*! ../common/utils */ \"./node_modules/elastic-apm-js-core/src/common/utils.js\"),\n    getTimeOrigin = _require4.getTimeOrigin,\n    find = _require4.find;\n\nvar Span = __webpack_require__(/*! ./span */ \"./node_modules/elastic-apm-js-core/src/opentracing/span.js\");\n\nvar Tracer =\n/*#__PURE__*/\nfunction (_otTracer) {\n  _inheritsLoose(Tracer, _otTracer);\n\n  function Tracer(performanceMonitoring, transactionService, loggingService, errorLogging) {\n    var _this;\n\n    _this = _otTracer.call(this) || this;\n    _this.performanceMonitoring = performanceMonitoring;\n    _this.transactionService = transactionService;\n    _this.loggingService = loggingService;\n    _this.errorLogging = errorLogging;\n    return _this;\n  }\n\n  var _proto = Tracer.prototype;\n\n  _proto._startSpan = function _startSpan(name, options) {\n    var spanOptions = {};\n\n    if (options) {\n      spanOptions.timestamp = options.startTime;\n\n      if (options.childOf) {\n        spanOptions.parentId = options.childOf.id;\n      } else if (options.references && options.references.length > 0) {\n        if (options.references.length > 1) {\n          this.loggingService.debug('Elastic APM OpenTracing: Unsupported number of references, only the first childOf reference will be recorded.');\n        }\n\n        var childRef = find(options.references, function (ref) {\n          return ref.type() === REFERENCE_CHILD_OF;\n        });\n\n        if (childRef) {\n          spanOptions.parentId = childRef.referencedContext().id;\n        }\n      }\n    }\n\n    var span;\n    var currentTransaction = this.transactionService.getCurrentTransaction();\n\n    if (currentTransaction && !currentTransaction.ended) {\n      span = this.transactionService.startSpan(name, undefined, spanOptions);\n    } else {\n      span = this.transactionService.startTransaction(name, undefined, spanOptions);\n    }\n\n    if (!span) {\n      return new NoopSpan();\n    }\n\n    if (spanOptions.timestamp) {\n      span._start = spanOptions.timestamp - getTimeOrigin();\n    }\n\n    var otSpan = new Span(this, span);\n\n    if (options && options.tags) {\n      otSpan.addTags(options.tags);\n    }\n\n    return otSpan;\n  };\n\n  _proto._inject = function _inject(spanContext, format, carrier) {\n    switch (format) {\n      case FORMAT_TEXT_MAP:\n      case FORMAT_HTTP_HEADERS:\n        this.performanceMonitoring.injectDtHeader(spanContext, carrier);\n        break;\n\n      case FORMAT_BINARY:\n        this.loggingService.debug('Elastic APM OpenTracing: binary carrier format is not supported.');\n        break;\n    }\n  };\n\n  _proto._extract = function _extract(format, carrier) {\n    var ctx;\n\n    switch (format) {\n      case FORMAT_TEXT_MAP:\n      case FORMAT_HTTP_HEADERS:\n        ctx = this.performanceMonitoring.extractDtHeader(carrier);\n        break;\n\n      case FORMAT_BINARY:\n        this.loggingService.debug('Elastic APM OpenTracing: binary carrier format is not supported.');\n        break;\n    }\n\n    if (!ctx) {\n      ctx = null;\n    }\n\n    return ctx;\n  };\n\n  return Tracer;\n}(otTracer);\n\nmodule.exports = Tracer;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/opentracing/tracer.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/performance-monitoring/capture-hard-navigation.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/performance-monitoring/capture-hard-navigation.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar Span = __webpack_require__(/*! ./span */ \"./node_modules/elastic-apm-js-core/src/performance-monitoring/span.js\");\n\nvar Url = __webpack_require__(/*! ../common/url */ \"./node_modules/elastic-apm-js-core/src/common/url.js\");\n\nvar eventPairs = [['domainLookupStart', 'domainLookupEnd', 'Domain lookup'], ['connectStart', 'connectEnd', 'Making a connection to the server'], ['requestStart', 'responseEnd', 'Requesting and receiving the document'], ['domLoading', 'domInteractive', 'Parsing the document, executing sync. scripts'], ['domContentLoadedEventStart', 'domContentLoadedEventEnd', 'Fire \"DOMContentLoaded\" event'], ['loadEventStart', 'loadEventEnd', 'Fire \"load\" event']];\nvar spanThreshold = 5 * 60 * 1000;\n\nfunction isValidSpan(transaction, span) {\n  var d = span.duration();\n  return d < spanThreshold && d > 0 && span._start <= transaction._end && span._end <= transaction._end;\n}\n\nfunction createNavigationTimingSpans(timings, baseTime) {\n  var spans = [];\n\n  for (var i = 0; i < eventPairs.length; i++) {\n    var start = timings[eventPairs[i][0]];\n    var end = timings[eventPairs[i][1]];\n\n    if (baseTime && start && end && end > start && start >= baseTime && end - start < spanThreshold && start - baseTime < spanThreshold && end - baseTime < spanThreshold) {\n      var span = new Span(eventPairs[i][2], 'hard-navigation.browser-timing');\n\n      if (eventPairs[i][0] === 'requestStart') {\n        span.pageResponse = true;\n      }\n\n      span._start = start - baseTime;\n      span.ended = true;\n      span._end = end - baseTime;\n      spans.push(span);\n    }\n  }\n\n  return spans;\n}\n\nfunction createResourceTimingSpans(entries, filterUrls) {\n  var spans = [];\n\n  for (var i = 0; i < entries.length; i++) {\n    var entry = entries[i];\n\n    if (entry.initiatorType && entry.initiatorType === 'xmlhttprequest' || !entry.name) {\n      continue;\n    } else if (entry.initiatorType !== 'css' && entry.initiatorType !== 'img' && entry.initiatorType !== 'script' && entry.initiatorType !== 'link') {\n      // is web request? test for css/img before the expensive operation\n      var foundAjaxReq = false;\n\n      for (var j = 0; j < filterUrls.length; j++) {\n        // entry.name.endsWith(ajaxUrls[j])\n        var idx = entry.name.lastIndexOf(filterUrls[j]);\n\n        if (idx > -1 && idx === entry.name.length - filterUrls[j].length) {\n          foundAjaxReq = true;\n          break;\n        }\n      }\n\n      if (foundAjaxReq) {\n        continue;\n      }\n    } else {\n      var kind = 'resource';\n\n      if (entry.initiatorType) {\n        kind += '.' + entry.initiatorType;\n      }\n\n      var start = entry.startTime;\n      var end = entry.responseEnd;\n\n      if (typeof start === 'number' && typeof end === 'number' && start >= 0 && end > start && end - start < spanThreshold && start < spanThreshold && end < spanThreshold) {\n        var parsedUrl = new Url(entry.name);\n        var spanName = parsedUrl.origin + parsedUrl.path;\n        var span = new Span(spanName || entry.name, kind);\n        span.addContext({\n          http: {\n            url: entry.name\n          }\n        });\n        span._start = start;\n        span.ended = true;\n        span._end = end;\n        spans.push(span);\n      }\n    }\n  }\n\n  return spans;\n}\n\nfunction captureHardNavigation(transaction) {\n  if (transaction.isHardNavigation && window.performance && window.performance.timing) {\n    var timings = window.performance.timing;\n    var baseTime = timings.fetchStart; // must be zero otherwise the calculated relative _start time would be wrong\n\n    transaction._start = 0;\n    transaction.type = 'page-load';\n    createNavigationTimingSpans(timings, baseTime).forEach(function (span) {\n      if (isValidSpan(transaction, span)) {\n        span.traceId = transaction.traceId;\n        span.sampled = transaction.sampled;\n\n        if (transaction.options.pageLoadSpanId && span.pageResponse) {\n          span.id = transaction.options.pageLoadSpanId;\n        }\n\n        transaction.spans.push(span);\n      }\n    });\n\n    if (window.performance.getEntriesByType) {\n      var entries = window.performance.getEntriesByType('resource');\n      var ajaxUrls = transaction.spans.filter(function (span) {\n        return span.type === 'external' && span.subType === 'http';\n      }).map(function (span) {\n        return span.name.split(' ')[1];\n      });\n      createResourceTimingSpans(entries, ajaxUrls).forEach(function (span) {\n        if (isValidSpan(transaction, span)) {\n          transaction.spans.push(span);\n        }\n      });\n    }\n\n    transaction._adjustStartToEarliestSpan();\n\n    transaction._adjustEndToLatestSpan();\n\n    transaction.addNavigationTimingMarks();\n  }\n}\n\nmodule.exports = {\n  captureHardNavigation: captureHardNavigation,\n  createNavigationTimingSpans: createNavigationTimingSpans,\n  createResourceTimingSpans: createResourceTimingSpans\n};\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/performance-monitoring/capture-hard-navigation.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/performance-monitoring/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/performance-monitoring/index.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar PerformanceMonitoring = __webpack_require__(/*! ./performance-monitoring */ \"./node_modules/elastic-apm-js-core/src/performance-monitoring/performance-monitoring.js\");\n\nvar TransactionService = __webpack_require__(/*! ./transaction-service */ \"./node_modules/elastic-apm-js-core/src/performance-monitoring/transaction-service.js\");\n\nmodule.exports = {\n  PerformanceMonitoring: PerformanceMonitoring,\n  registerServices: function registerServices(serviceFactory) {\n    serviceFactory.registerServiceCreator('TransactionService', function () {\n      var configService = serviceFactory.getService('ConfigService');\n      var loggingService = serviceFactory.getService('LoggingService');\n      return new TransactionService(loggingService, configService);\n    });\n    serviceFactory.registerServiceCreator('PerformanceMonitoring', function () {\n      var configService = serviceFactory.getService('ConfigService');\n      var loggingService = serviceFactory.getService('LoggingService');\n      var apmService = serviceFactory.getService('ApmServer');\n      var transactionService = serviceFactory.getService('TransactionService');\n      return new PerformanceMonitoring(apmService, configService, loggingService, transactionService);\n    });\n  }\n};\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/performance-monitoring/index.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/performance-monitoring/performance-monitoring.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/performance-monitoring/performance-monitoring.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar _require = __webpack_require__(/*! ../common/utils */ \"./node_modules/elastic-apm-js-core/src/common/utils.js\"),\n    sanitizeObjectStrings = _require.sanitizeObjectStrings,\n    sanitizeString = _require.sanitizeString,\n    checkSameOrigin = _require.checkSameOrigin,\n    isDtHeaderValid = _require.isDtHeaderValid,\n    getDtHeaderValue = _require.getDtHeaderValue,\n    merge = _require.merge,\n    stripQueryStringFromUrl = _require.stripQueryStringFromUrl,\n    parseDtHeaderValue = _require.parseDtHeaderValue;\n\nvar patchingSub = __webpack_require__(/*! ../common/patching */ \"./node_modules/elastic-apm-js-core/src/common/patching/index.js\").subscription;\n\nvar _require2 = __webpack_require__(/*! ../common/patching/patch-utils */ \"./node_modules/elastic-apm-js-core/src/common/patching/patch-utils.js\"),\n    globalState = _require2.globalState;\n\nvar _require3 = __webpack_require__(/*! ../common/constants */ \"./node_modules/elastic-apm-js-core/src/common/constants.js\"),\n    SCHEDULE = _require3.SCHEDULE,\n    INVOKE = _require3.INVOKE,\n    XMLHTTPREQUEST_SOURCE = _require3.XMLHTTPREQUEST_SOURCE,\n    FETCH_SOURCE = _require3.FETCH_SOURCE;\n\nvar PerformanceMonitoring =\n/*#__PURE__*/\nfunction () {\n  function PerformanceMonitoring(apmServer, configService, loggingService, transactionService) {\n    this._apmServer = apmServer;\n    this._configService = configService;\n    this._logginService = loggingService;\n    this._transactionService = transactionService;\n  }\n\n  var _proto = PerformanceMonitoring.prototype;\n\n  _proto.init = function init() {\n    var performanceMonitoring = this;\n\n    this._transactionService.subscribe(function (tr) {\n      var payload = performanceMonitoring.createTransactionPayload(tr);\n\n      if (payload) {\n        performanceMonitoring._apmServer.addTransaction(payload);\n      }\n    });\n\n    var patchSubFn = this.getXhrPatchSubFn(this._configService, this._transactionService);\n    this.cancelPatchSub = patchingSub.subscribe(patchSubFn);\n  };\n\n  _proto.getXhrPatchSubFn = function getXhrPatchSubFn() {\n    var configService = this._configService;\n    var transactionService = this._transactionService;\n    var pm = this;\n    return function (event, task) {\n      if (task.source === XMLHTTPREQUEST_SOURCE && !globalState.fetchInProgress || task.source === FETCH_SOURCE) {\n        if (event === SCHEDULE && task.data) {\n          var spanName = task.data.method + ' ' + stripQueryStringFromUrl(task.data.url);\n          var span = transactionService.startSpan(spanName, 'external.http');\n\n          if (span) {\n            var isDtEnabled = configService.get('distributedTracing');\n            var origins = configService.get('distributedTracingOrigins');\n            var isSameOrigin = checkSameOrigin(task.data.url, window.location.href) || checkSameOrigin(task.data.url, origins);\n            var target = task.data.target;\n\n            if (isDtEnabled && isSameOrigin && target) {\n              pm.injectDtHeader(span, target);\n            }\n\n            span.addContext({\n              http: {\n                method: task.data.method,\n                url: task.data.url\n              }\n            });\n            span.sync = task.data.sync;\n            task.data.span = span;\n          }\n        } else if (event === INVOKE && task.data && task.data.span) {\n          if (typeof task.data.target.status !== 'undefined') {\n            task.data.span.addContext({\n              http: {\n                status_code: task.data.target.status\n              }\n            });\n          } else if (task.data.response) {\n            task.data.span.addContext({\n              http: {\n                status_code: task.data.response.status\n              }\n            });\n          }\n\n          task.data.span.end();\n        }\n      }\n    };\n  };\n\n  _proto.injectDtHeader = function injectDtHeader(span, target) {\n    var configService = this._configService;\n    var headerName = configService.get('distributedTracingHeaderName');\n    var headerValueCallback = configService.get('distributedTracingHeaderValueCallback');\n\n    if (typeof headerValueCallback !== 'function') {\n      headerValueCallback = getDtHeaderValue;\n    }\n\n    var headerValue = headerValueCallback(span);\n    var isHeaderValid = isDtHeaderValid(headerValue);\n\n    if (headerName && headerValue && isHeaderValid) {\n      if (typeof target.setRequestHeader === 'function') {\n        target.setRequestHeader(headerName, headerValue);\n      } else if (target.headers && typeof target.headers.append === 'function') {\n        target.headers.append(headerName, headerValue);\n      } else {\n        target[headerName] = headerValue;\n      }\n    }\n  };\n\n  _proto.extractDtHeader = function extractDtHeader(target) {\n    var configService = this._configService;\n    var headerName = configService.get('distributedTracingHeaderName');\n\n    if (target) {\n      return parseDtHeaderValue(target[headerName]);\n    }\n  };\n\n  _proto.setTransactionContext = function setTransactionContext(transaction) {\n    var context = this._configService.get('context');\n\n    if (context) {\n      transaction.addContext(context);\n    }\n  };\n\n  _proto.filterTransaction = function filterTransaction(tr) {\n    var performanceMonitoring = this;\n\n    var transactionDurationThreshold = this._configService.get('transactionDurationThreshold');\n\n    var duration = tr.duration();\n\n    if (!duration || duration > transactionDurationThreshold || !tr.spans.length) {\n      return false;\n    }\n    /**\n     * In case of unsampled transaction, send only the transaction to apm server\n     *  without any spans to reduce the payload size\n     */\n\n\n    if (!tr.sampled) {\n      tr.resetSpans();\n    }\n\n    var browserResponsivenessInterval = this._configService.get('browserResponsivenessInterval');\n\n    var checkBrowserResponsiveness = this._configService.get('checkBrowserResponsiveness');\n\n    if (checkBrowserResponsiveness && !tr.isHardNavigation) {\n      var buffer = performanceMonitoring._configService.get('browserResponsivenessBuffer');\n\n      var wasBrowserResponsive = performanceMonitoring.checkBrowserResponsiveness(tr, browserResponsivenessInterval, buffer);\n\n      if (!wasBrowserResponsive) {\n        performanceMonitoring._logginService.debug('Transaction was discarded! browser was not responsive enough during the transaction.', ' duration:', duration, ' browserResponsivenessCounter:', tr.browserResponsivenessCounter, 'interval:', browserResponsivenessInterval);\n\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  _proto.prepareTransaction = function prepareTransaction(transaction) {\n    transaction.spans.sort(function (spanA, spanB) {\n      return spanA._start - spanB._start;\n    });\n\n    if (this._configService.get('groupSimilarSpans')) {\n      var similarSpanThreshold = this._configService.get('similarSpanThreshold');\n\n      transaction.spans = this.groupSmallContinuouslySimilarSpans(transaction, similarSpanThreshold);\n    }\n\n    transaction.spans = transaction.spans.filter(function (span) {\n      return span.duration() > 0 && span._start >= transaction._start && span._end > transaction._start && span._start < transaction._end && span._end <= transaction._end;\n    });\n    this.setTransactionContext(transaction);\n  };\n\n  _proto.createTransactionDataModel = function createTransactionDataModel(transaction) {\n    var configContext = this._configService.get('context');\n\n    var stringLimit = this._configService.get('serverStringLimit');\n\n    var transactionStart = transaction._start;\n    var spans = transaction.spans.map(function (span) {\n      var context;\n\n      if (span.context) {\n        context = sanitizeObjectStrings(span.context, stringLimit);\n      }\n\n      return {\n        id: span.id,\n        transaction_id: transaction.id,\n        parent_id: span.parentId || transaction.id,\n        trace_id: transaction.traceId,\n        name: sanitizeString(span.name, stringLimit, true),\n        type: sanitizeString(span.type, stringLimit, true),\n        subType: sanitizeString(span.subType, stringLimit, true),\n        action: sanitizeString(span.action, stringLimit, true),\n        sync: span.sync,\n        start: span._start - transactionStart,\n        duration: span.duration(),\n        context: context\n      };\n    });\n    var context = merge({}, configContext, transaction.context);\n    return {\n      id: transaction.id,\n      trace_id: transaction.traceId,\n      name: sanitizeString(transaction.name, stringLimit, false),\n      type: sanitizeString(transaction.type, stringLimit, true),\n      duration: transaction.duration(),\n      spans: spans,\n      context: context,\n      marks: transaction.marks,\n      span_count: {\n        started: spans.length\n      },\n      sampled: transaction.sampled\n    };\n  };\n\n  _proto.createTransactionPayload = function createTransactionPayload(transaction) {\n    this.prepareTransaction(transaction);\n    var filtered = this.filterTransaction(transaction);\n\n    if (filtered) {\n      return this.createTransactionDataModel(transaction);\n    }\n  };\n\n  _proto.sendTransactions = function sendTransactions(transactions) {\n    var payload = transactions.map(this.createTransactionPayload.bind(this)).filter(function (tr) {\n      return tr;\n    });\n\n    this._logginService.debug('Sending Transactions to apm server.', transactions.length); // todo: check if transactions are already being sent\n\n\n    var promise = this._apmServer.sendTransactions(payload);\n\n    return promise;\n  };\n\n  _proto.convertTransactionsToServerModel = function convertTransactionsToServerModel(transactions) {\n    return transactions.map(this.createTransactionDataModel.bind(this));\n  };\n\n  _proto.groupSmallContinuouslySimilarSpans = function groupSmallContinuouslySimilarSpans(transaction, threshold) {\n    var transDuration = transaction.duration();\n    var spans = [];\n    var lastCount = 1;\n    transaction.spans.forEach(function (span, index) {\n      if (spans.length === 0) {\n        spans.push(span);\n      } else {\n        var lastSpan = spans[spans.length - 1];\n        var isContinuouslySimilar = lastSpan.type === span.type && lastSpan.subType === span.subType && lastSpan.action === span.action && lastSpan.name === span.name && span.duration() / transDuration < threshold && (span._start - lastSpan._end) / transDuration < threshold;\n        var isLastSpan = transaction.spans.length === index + 1;\n\n        if (isContinuouslySimilar) {\n          lastCount++;\n          lastSpan._end = span._end;\n        }\n\n        if (lastCount > 1 && (!isContinuouslySimilar || isLastSpan)) {\n          lastSpan.name = lastCount + 'x ' + lastSpan.name;\n          lastCount = 1;\n        }\n\n        if (!isContinuouslySimilar) {\n          spans.push(span);\n        }\n      }\n    });\n    return spans;\n  };\n\n  _proto.checkBrowserResponsiveness = function checkBrowserResponsiveness(transaction, interval, buffer) {\n    var counter = transaction.browserResponsivenessCounter;\n\n    if (typeof interval === 'undefined' || typeof counter === 'undefined') {\n      return true;\n    }\n\n    var duration = transaction.duration();\n    var expectedCount = Math.floor(duration / interval);\n    var wasBrowserResponsive = counter + buffer >= expectedCount;\n    return wasBrowserResponsive;\n  };\n\n  return PerformanceMonitoring;\n}();\n\nmodule.exports = PerformanceMonitoring;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/performance-monitoring/performance-monitoring.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/performance-monitoring/span-base.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/performance-monitoring/span-base.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar _require = __webpack_require__(/*! ../common/utils */ \"./node_modules/elastic-apm-js-core/src/common/utils.js\"),\n    isUndefined = _require.isUndefined,\n    generateRandomId = _require.generateRandomId,\n    setTag = _require.setTag,\n    merge = _require.merge;\n\nvar SpanBase =\n/*#__PURE__*/\nfunction () {\n  // context\n  function SpanBase(name, type, options) {\n    this.options = options || {};\n    this.name = name || this.options.name || 'Unknown';\n    this.type = type || this.options.type || 'custom';\n    this.id = this.options.id || generateRandomId(16);\n    this.traceId = this.options.traceId;\n    this.sampled = this.options.sampled;\n    this.timestamp = this.options.timestamp || Date.now();\n    this.ended = false;\n    this._start = window.performance.now();\n    this._end = undefined;\n    this.onEnd = this.options.onEnd;\n  }\n\n  var _proto = SpanBase.prototype;\n\n  _proto.ensureContext = function ensureContext() {\n    if (!this.context) {\n      this.context = {};\n    }\n  };\n\n  _proto.addTags = function addTags(tags) {\n    this.ensureContext();\n    var ctx = this.context;\n\n    if (!ctx.tags) {\n      ctx.tags = {};\n    }\n\n    var keys = Object.keys(tags);\n    keys.forEach(function (k) {\n      setTag(k, tags[k], ctx.tags);\n    });\n  };\n\n  _proto.addContext = function addContext(context) {\n    if (!context) return;\n    this.ensureContext();\n    merge(this.context, context);\n  };\n\n  _proto.end = function end() {\n    if (this.ended) {\n      return;\n    }\n\n    this.ended = true;\n    this._end = window.performance.now();\n    this.callOnEnd();\n  };\n\n  _proto.callOnEnd = function callOnEnd() {\n    if (typeof this.onEnd === 'function') {\n      this.onEnd(this);\n    }\n  };\n\n  _proto.duration = function duration() {\n    if (isUndefined(this._end) || isUndefined(this._start)) {\n      return null;\n    }\n\n    var diff = this._end - this._start;\n    return parseFloat(diff);\n  };\n\n  return SpanBase;\n}();\n\nmodule.exports = SpanBase;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/performance-monitoring/span-base.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/performance-monitoring/span.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/performance-monitoring/span.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar BaseSpan = __webpack_require__(/*! ./span-base */ \"./node_modules/elastic-apm-js-core/src/performance-monitoring/span-base.js\");\n\nvar Span =\n/*#__PURE__*/\nfunction (_BaseSpan) {\n  _inheritsLoose(Span, _BaseSpan);\n\n  function Span(name, type, options) {\n    var _this;\n\n    _this = _BaseSpan.call(this, name, type, options) || this;\n    _this.parentId = _this.options.parentId;\n    _this.subType = undefined;\n    _this.action = undefined;\n\n    if (_this.type.indexOf('.') !== -1) {\n      var fields = _this.type.split('.', 3);\n\n      _this.type = fields[0];\n      _this.subType = fields[1];\n      _this.action = fields[2];\n    }\n\n    _this.sync = _this.options.sync;\n    return _this;\n  }\n\n  return Span;\n}(BaseSpan);\n\nmodule.exports = Span;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/performance-monitoring/span.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/performance-monitoring/transaction-service.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/performance-monitoring/transaction-service.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar Transaction = __webpack_require__(/*! ./transaction */ \"./node_modules/elastic-apm-js-core/src/performance-monitoring/transaction.js\");\n\nvar utils = __webpack_require__(/*! ../common/utils */ \"./node_modules/elastic-apm-js-core/src/common/utils.js\");\n\nvar Subscription = __webpack_require__(/*! ../common/subscription */ \"./node_modules/elastic-apm-js-core/src/common/subscription.js\");\n\nvar captureHardNavigation = __webpack_require__(/*! ./capture-hard-navigation */ \"./node_modules/elastic-apm-js-core/src/performance-monitoring/capture-hard-navigation.js\").captureHardNavigation;\n\nvar TransactionService =\n/*#__PURE__*/\nfunction () {\n  function TransactionService(logger, config) {\n    if (typeof config === 'undefined') {\n      logger.debug('TransactionService: config is not provided');\n    }\n\n    this._config = config;\n    this._logger = logger;\n    this.marks = {};\n    this.currentTransaction = undefined;\n    this._subscription = new Subscription();\n    this._alreadyCapturedPageLoad = false;\n  }\n\n  var _proto = TransactionService.prototype;\n\n  _proto.shouldCreateTransaction = function shouldCreateTransaction() {\n    return this._config.isActive();\n  };\n\n  _proto.getOrCreateCurrentTransaction = function getOrCreateCurrentTransaction() {\n    if (!this.shouldCreateTransaction()) {\n      return;\n    }\n\n    var tr = this.getCurrentTransaction();\n\n    if (!utils.isUndefined(tr) && !tr.ended) {\n      return tr;\n    }\n\n    return this.createZoneTransaction();\n  };\n\n  _proto.getCurrentTransaction = function getCurrentTransaction() {\n    return this.currentTransaction;\n  };\n\n  _proto.setCurrentTransaction = function setCurrentTransaction(value) {\n    this.currentTransaction = value;\n  };\n\n  _proto.createTransaction = function createTransaction(name, type, options) {\n    var perfOptions = options;\n\n    if (utils.isUndefined(perfOptions)) {\n      perfOptions = this._config.config;\n    }\n\n    if (!this.shouldCreateTransaction()) {\n      return;\n    }\n\n    var tr = new Transaction(name, type, perfOptions);\n    this.setCurrentTransaction(tr);\n\n    if (perfOptions.checkBrowserResponsiveness) {\n      this.startCounter(tr);\n    }\n\n    return tr;\n  };\n\n  _proto.createZoneTransaction = function createZoneTransaction() {\n    return this.createTransaction('ZoneTransaction', 'transaction');\n  };\n\n  _proto.startCounter = function startCounter(transaction) {\n    transaction.browserResponsivenessCounter = 0;\n\n    var interval = this._config.get('browserResponsivenessInterval');\n\n    if (typeof interval === 'undefined') {\n      this._logger.debug('browserResponsivenessInterval is undefined!');\n\n      return;\n    }\n\n    this.runOuter(function () {\n      var id = setInterval(function () {\n        if (transaction.ended) {\n          window.clearInterval(id);\n        } else {\n          transaction.browserResponsivenessCounter++;\n        }\n      }, interval);\n    });\n  };\n\n  _proto.sendPageLoadMetrics = function sendPageLoadMetrics(name) {\n    var tr = this.startTransaction(name, 'page-load');\n    tr.detectFinish();\n    return tr;\n  };\n\n  _proto.capturePageLoadMetrics = function capturePageLoadMetrics(tr) {\n    var self = this;\n\n    var capturePageLoad = self._config.get('capturePageLoad');\n\n    if (capturePageLoad && !self._alreadyCapturedPageLoad && tr.isHardNavigation) {\n      tr.addMarks(self.marks);\n      captureHardNavigation(tr);\n      self._alreadyCapturedPageLoad = true;\n      return true;\n    }\n  };\n\n  _proto.startTransaction = function startTransaction(name, type, options) {\n    var self = this;\n    var config = self._config.config;\n    var perfOptions = utils.extend({\n      pageLoadTraceId: config.pageLoadTraceId,\n      pageLoadSampled: config.pageLoadSampled,\n      pageLoadSpanId: config.pageLoadSpanId,\n      pageLoadTransactionName: config.pageLoadTransactionName,\n      transactionSampleRate: config.transactionSampleRate\n    }, options);\n\n    if (!type) {\n      type = 'custom';\n    }\n\n    if (!name) {\n      name = 'Unknown';\n    } // this will create a zone transaction if possible\n\n\n    var tr = this.getOrCreateCurrentTransaction();\n\n    if (tr) {\n      if (tr.name === 'ZoneTransaction') {\n        tr.redefine(name, type, perfOptions);\n      } else {\n        this._logger.debug('Ending old transaction', tr);\n\n        tr.end();\n        tr = this.createTransaction(name, type, perfOptions);\n      }\n    } else {\n      return;\n    }\n\n    if (type === 'page-load') {\n      tr.isHardNavigation = true;\n\n      if (perfOptions.pageLoadTraceId) {\n        tr.traceId = perfOptions.pageLoadTraceId;\n      }\n\n      if (typeof perfOptions.pageLoadSampled !== 'undefined') {\n        tr.sampled = perfOptions.pageLoadSampled;\n      }\n\n      if (tr.name === 'Unknown' && config.pageLoadTransactionName) {\n        tr.name = config.pageLoadTransactionName;\n      }\n    }\n\n    this._logger.debug('TransactionService.startTransaction', tr);\n\n    tr.onEnd = function () {\n      self.applyAsync(function () {\n        self._logger.debug('TransactionService transaction finished', tr);\n\n        if (!self.shouldIgnoreTransaction(tr.name)) {\n          if (type === 'page-load') {\n            if (tr.name === 'Unknown' && self._config.get('pageLoadTransactionName')) {\n              tr.name = self._config.get('pageLoadTransactionName');\n            }\n\n            var captured = self.capturePageLoadMetrics(tr);\n\n            if (captured) {\n              self.add(tr);\n            }\n          } else {\n            self.add(tr);\n          }\n        }\n      });\n    };\n\n    return tr;\n  };\n\n  _proto.applyAsync = function applyAsync(fn, applyThis, applyArgs) {\n    return this.runOuter(function () {\n      return Promise.resolve().then(function () {\n        return fn.apply(applyThis, applyArgs);\n      }, function (reason) {\n        console.log(reason);\n      });\n    });\n  };\n\n  _proto.shouldIgnoreTransaction = function shouldIgnoreTransaction(transactionName) {\n    var ignoreList = this._config.get('ignoreTransactions');\n\n    for (var i = 0; i < ignoreList.length; i++) {\n      var element = ignoreList[i];\n\n      if (typeof element.test === 'function') {\n        if (element.test(transactionName)) {\n          return true;\n        }\n      } else if (element === transactionName) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  _proto.startSpan = function startSpan(name, type, options) {\n    var trans = this.getOrCreateCurrentTransaction();\n\n    if (trans) {\n      this._logger.debug('TransactionService.startSpan', name, type);\n\n      var span = trans.startSpan(name, type, options);\n      return span;\n    }\n  };\n\n  _proto.add = function add(transaction) {\n    if (!this._config.isActive()) {\n      return;\n    }\n\n    this._subscription.applyAll(this, [transaction]);\n\n    this._logger.debug('TransactionService.add', transaction);\n  };\n\n  _proto.subscribe = function subscribe(fn) {\n    return this._subscription.subscribe(fn);\n  };\n\n  _proto.addTask = function addTask(taskId) {\n    var tr = this.getOrCreateCurrentTransaction();\n\n    if (tr) {\n      tr.addTask(taskId);\n\n      this._logger.debug('TransactionService.addTask', taskId);\n    }\n\n    return taskId;\n  };\n\n  _proto.removeTask = function removeTask(taskId) {\n    var tr = this.getCurrentTransaction();\n\n    if (!utils.isUndefined(tr) && !tr.ended) {\n      tr.removeTask(taskId);\n\n      this._logger.debug('TransactionService.removeTask', taskId);\n    }\n  };\n\n  _proto.detectFinish = function detectFinish() {\n    var tr = this.getCurrentTransaction();\n\n    if (!utils.isUndefined(tr) && !tr.ended) {\n      tr.detectFinish();\n\n      this._logger.debug('TransactionService.detectFinish');\n    }\n  };\n\n  _proto.runOuter = function runOuter(fn, applyThis, applyArgs) {\n    return fn.apply(applyThis, applyArgs);\n  };\n\n  return TransactionService;\n}();\n\nmodule.exports = TransactionService;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/performance-monitoring/transaction-service.js?");

/***/ }),

/***/ "./node_modules/elastic-apm-js-core/src/performance-monitoring/transaction.js":
/*!************************************************************************************!*\
  !*** ./node_modules/elastic-apm-js-core/src/performance-monitoring/transaction.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar Span = __webpack_require__(/*! ./span */ \"./node_modules/elastic-apm-js-core/src/performance-monitoring/span.js\");\n\nvar SpanBase = __webpack_require__(/*! ./span-base */ \"./node_modules/elastic-apm-js-core/src/performance-monitoring/span-base.js\");\n\nvar _require = __webpack_require__(/*! ../common/utils */ \"./node_modules/elastic-apm-js-core/src/common/utils.js\"),\n    generateRandomId = _require.generateRandomId,\n    getNavigationTimingMarks = _require.getNavigationTimingMarks,\n    getPaintTimingMarks = _require.getPaintTimingMarks,\n    merge = _require.merge,\n    extend = _require.extend,\n    getPageMetadata = _require.getPageMetadata,\n    removeInvalidChars = _require.removeInvalidChars;\n\nvar Transaction =\n/*#__PURE__*/\nfunction (_SpanBase) {\n  _inheritsLoose(Transaction, _SpanBase);\n\n  function Transaction(name, type, options) {\n    var _this;\n\n    _this = _SpanBase.call(this, name, type, options) || this;\n    _this.traceId = generateRandomId();\n    _this.marks = undefined;\n    _this.spans = [];\n    _this._activeSpans = {};\n    _this._scheduledTasks = {};\n    _this.nextAutoTaskId = 0;\n    _this.isHardNavigation = false;\n    _this.sampled = Math.random() <= _this.options.transactionSampleRate;\n    return _this;\n  }\n\n  var _proto = Transaction.prototype;\n\n  _proto.addNavigationTimingMarks = function addNavigationTimingMarks() {\n    var marks = getNavigationTimingMarks();\n    var paintMarks = getPaintTimingMarks();\n\n    if (marks) {\n      var agent = {\n        timeToFirstByte: marks.responseStart,\n        domInteractive: marks.domInteractive,\n        domComplete: marks.domComplete\n      };\n\n      if (paintMarks['first-contentful-paint']) {\n        agent.firstContentfulPaint = paintMarks['first-contentful-paint'];\n      }\n\n      this.addMarks({\n        navigationTiming: marks,\n        agent: agent\n      });\n    }\n  };\n\n  _proto.addMarks = function addMarks(obj) {\n    this.marks = merge(this.marks || {}, obj);\n  };\n\n  _proto.mark = function mark(key) {\n    var skey = removeInvalidChars(key);\n\n    var now = window.performance.now() - this._start;\n\n    var custom = {};\n    custom[skey] = now;\n    this.addMarks({\n      custom: custom\n    });\n  };\n\n  _proto.redefine = function redefine(name, type, options) {\n    this.name = name;\n    this.type = type;\n    this.options = options;\n  };\n\n  _proto.startSpan = function startSpan(name, type, options) {\n    if (this.ended) {\n      return;\n    }\n\n    var transaction = this;\n    var opts = extend({}, options);\n\n    opts.onEnd = function (trc) {\n      transaction._onSpanEnd(trc);\n    };\n\n    opts.traceId = this.traceId;\n    opts.sampled = this.sampled;\n\n    if (!opts.parentId) {\n      opts.parentId = this.id;\n    }\n\n    var span = new Span(name, type, opts);\n    this._activeSpans[span.id] = span;\n    return span;\n  };\n\n  _proto.isFinished = function isFinished() {\n    var scheduledTasks = Object.keys(this._scheduledTasks);\n    return scheduledTasks.length === 0;\n  };\n\n  _proto.detectFinish = function detectFinish() {\n    if (this.isFinished()) this.end();\n  };\n\n  _proto.end = function end() {\n    if (this.ended) {\n      return;\n    }\n\n    this.ended = true;\n    this._end = window.performance.now(); // truncate active spans\n\n    for (var sid in this._activeSpans) {\n      var span = this._activeSpans[sid];\n      span.type = span.type + '.truncated';\n      span.end();\n    }\n\n    var metadata = getPageMetadata();\n    this.addContext(metadata);\n\n    this._adjustStartToEarliestSpan();\n\n    this._adjustEndToLatestSpan();\n\n    this.callOnEnd();\n  };\n\n  _proto.addTask = function addTask(taskId) {\n    // todo: should not accept more tasks if the transaction is alreadyFinished]\n    if (typeof taskId === 'undefined') {\n      taskId = 'autoId' + this.nextAutoTaskId++;\n    }\n\n    this._scheduledTasks[taskId] = taskId;\n    return taskId;\n  };\n\n  _proto.removeTask = function removeTask(taskId) {\n    delete this._scheduledTasks[taskId];\n    this.detectFinish();\n  };\n\n  _proto.addEndedSpans = function addEndedSpans(existingSpans) {\n    this.spans = this.spans.concat(existingSpans);\n  };\n\n  _proto.resetSpans = function resetSpans() {\n    this.spans = [];\n  };\n\n  _proto._onSpanEnd = function _onSpanEnd(span) {\n    this.spans.push(span); // Remove span from _activeSpans\n\n    delete this._activeSpans[span.id];\n  };\n\n  _proto._adjustEndToLatestSpan = function _adjustEndToLatestSpan() {\n    var latestSpan = findLatestNonXHRSpan(this.spans);\n\n    if (latestSpan) {\n      this._end = latestSpan._end; // set all spans that now are longer than the transaction to\n      // be truncated spans\n\n      for (var i = 0; i < this.spans.length; i++) {\n        var span = this.spans[i];\n\n        if (span._end > this._end) {\n          span._end = this._end;\n          span.type = span.type + '.truncated';\n        }\n\n        if (span._start > this._end) {\n          span._start = this._end;\n        }\n      }\n    }\n  };\n\n  _proto._adjustStartToEarliestSpan = function _adjustStartToEarliestSpan() {\n    var span = getEarliestSpan(this.spans);\n\n    if (span && span._start < this._start) {\n      this._start = span._start;\n    }\n  };\n\n  return Transaction;\n}(SpanBase);\n\nfunction findLatestNonXHRSpan(spans) {\n  var latestSpan = null;\n\n  for (var i = 0; i < spans.length; i++) {\n    var span = spans[i];\n\n    if (span.type && span.type.indexOf('ext') === -1 && span.type !== 'transaction' && (!latestSpan || latestSpan._end < span._end)) {\n      latestSpan = span;\n    }\n  }\n\n  return latestSpan;\n}\n\nfunction getEarliestSpan(spans) {\n  var earliestSpan = null;\n  spans.forEach(function (span) {\n    if (!earliestSpan) {\n      earliestSpan = span;\n    }\n\n    if (earliestSpan && earliestSpan._start > span._start) {\n      earliestSpan = span;\n    }\n  });\n  return earliestSpan;\n}\n\nmodule.exports = Transaction;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/elastic-apm-js-core/src/performance-monitoring/transaction.js?");

/***/ }),

/***/ "./node_modules/error-stack-parser/error-stack-parser.js":
/*!***************************************************************!*\
  !*** ./node_modules/error-stack-parser/error-stack-parser.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n  'use strict'; // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n  /* istanbul ignore next */\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! stackframe */ \"./node_modules/stackframe/stackframe.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(this, function ErrorStackParser(StackFrame) {\n  'use strict';\n\n  var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n  var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n  var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n  function _map(array, fn, thisArg) {\n    if (typeof Array.prototype.map === 'function') {\n      return array.map(fn, thisArg);\n    } else {\n      var output = new Array(array.length);\n\n      for (var i = 0; i < array.length; i++) {\n        output[i] = fn.call(thisArg, array[i]);\n      }\n\n      return output;\n    }\n  }\n\n  function _filter(array, fn, thisArg) {\n    if (typeof Array.prototype.filter === 'function') {\n      return array.filter(fn, thisArg);\n    } else {\n      var output = [];\n\n      for (var i = 0; i < array.length; i++) {\n        if (fn.call(thisArg, array[i])) {\n          output.push(array[i]);\n        }\n      }\n\n      return output;\n    }\n  }\n\n  function _indexOf(array, target) {\n    if (typeof Array.prototype.indexOf === 'function') {\n      return array.indexOf(target);\n    } else {\n      for (var i = 0; i < array.length; i++) {\n        if (array[i] === target) {\n          return i;\n        }\n      }\n\n      return -1;\n    }\n  }\n\n  return {\n    /**\n     * Given an Error object, extract the most information from it.\n     *\n     * @param {Error} error object\n     * @return {Array} of StackFrames\n     */\n    parse: function ErrorStackParser$$parse(error) {\n      if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n        return this.parseOpera(error);\n      } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n        return this.parseV8OrIE(error);\n      } else if (error.stack) {\n        return this.parseFFOrSafari(error);\n      } else {\n        throw new Error('Cannot parse given Error object');\n      }\n    },\n    // Separate line and column numbers from a string of the form: (URI:Line:Column)\n    extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n      // Fail-fast but return locations like \"(native)\"\n      if (urlLike.indexOf(':') === -1) {\n        return [urlLike];\n      }\n\n      var regExp = /(.+?)(?:\\:(\\d+))?(?:\\:(\\d+))?$/;\n      var parts = regExp.exec(urlLike.replace(/[\\(\\)]/g, ''));\n      return [parts[1], parts[2] || undefined, parts[3] || undefined];\n    },\n    parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n      var filtered = _filter(error.stack.split('\\n'), function (line) {\n        return !!line.match(CHROME_IE_STACK_REGEXP);\n      }, this);\n\n      return _map(filtered, function (line) {\n        if (line.indexOf('(eval ') > -1) {\n          // Throw away eval information until we implement stacktrace.js/stackframe#8\n          line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n        }\n\n        var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n        var locationParts = this.extractLocation(tokens.pop());\n        var functionName = tokens.join(' ') || undefined;\n        var fileName = _indexOf(['eval', '<anonymous>'], locationParts[0]) > -1 ? undefined : locationParts[0];\n        return new StackFrame(functionName, undefined, fileName, locationParts[1], locationParts[2], line);\n      }, this);\n    },\n    parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n      var filtered = _filter(error.stack.split('\\n'), function (line) {\n        return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n      }, this);\n\n      return _map(filtered, function (line) {\n        // Throw away eval information until we implement stacktrace.js/stackframe#8\n        if (line.indexOf(' > eval') > -1) {\n          line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n        }\n\n        if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n          // Safari eval frames only have function names and nothing else\n          return new StackFrame(line);\n        } else {\n          var tokens = line.split('@');\n          var locationParts = this.extractLocation(tokens.pop());\n          var functionName = tokens.join('@') || undefined;\n          return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2], line);\n        }\n      }, this);\n    },\n    parseOpera: function ErrorStackParser$$parseOpera(e) {\n      if (!e.stacktrace || e.message.indexOf('\\n') > -1 && e.message.split('\\n').length > e.stacktrace.split('\\n').length) {\n        return this.parseOpera9(e);\n      } else if (!e.stack) {\n        return this.parseOpera10(e);\n      } else {\n        return this.parseOpera11(e);\n      }\n    },\n    parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n      var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n      var lines = e.message.split('\\n');\n      var result = [];\n\n      for (var i = 2, len = lines.length; i < len; i += 2) {\n        var match = lineRE.exec(lines[i]);\n\n        if (match) {\n          result.push(new StackFrame(undefined, undefined, match[2], match[1], undefined, lines[i]));\n        }\n      }\n\n      return result;\n    },\n    parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n      var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n      var lines = e.stacktrace.split('\\n');\n      var result = [];\n\n      for (var i = 0, len = lines.length; i < len; i += 2) {\n        var match = lineRE.exec(lines[i]);\n\n        if (match) {\n          result.push(new StackFrame(match[3] || undefined, undefined, match[2], match[1], undefined, lines[i]));\n        }\n      }\n\n      return result;\n    },\n    // Opera 10.65+ Error.stack very similar to FF/Safari\n    parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n      var filtered = _filter(error.stack.split('\\n'), function (line) {\n        return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n      }, this);\n\n      return _map(filtered, function (line) {\n        var tokens = line.split('@');\n        var locationParts = this.extractLocation(tokens.pop());\n        var functionCall = tokens.shift() || '';\n        var functionName = functionCall.replace(/<anonymous function(: (\\w+))?>/, '$2').replace(/\\([^\\)]*\\)/g, '') || undefined;\n        var argsRaw;\n\n        if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n          argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n        }\n\n        var args = argsRaw === undefined || argsRaw === '[arguments not available]' ? undefined : argsRaw.split(',');\n        return new StackFrame(functionName, args, locationParts[0], locationParts[1], locationParts[2], line);\n      }, this);\n    }\n  };\n});\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/error-stack-parser/error-stack-parser.js?");

/***/ }),

/***/ "./node_modules/es6-promise/auto.js":
/*!******************************************!*\
  !*** ./node_modules/es6-promise/auto.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// This file can be required in Browserify and Node.js for automatic polyfill\n// To use it:  require('es6-promise/auto');\n\n\nmodule.exports = __webpack_require__(/*! ./ */ \"./node_modules/es6-promise/dist/es6-promise.js\").polyfill();\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/es6-promise/auto.js?");

/***/ }),

/***/ "./node_modules/es6-promise/dist/es6-promise.js":
/*!******************************************************!*\
  !*** ./node_modules/es6-promise/dist/es6-promise.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.5+7f2b526d\n */\n(function (global, factory) {\n   true ? module.exports = factory() : undefined;\n})(this, function () {\n  'use strict';\n\n  function objectOrFunction(x) {\n    var type = typeof x;\n    return x !== null && (type === 'object' || type === 'function');\n  }\n\n  function isFunction(x) {\n    return typeof x === 'function';\n  }\n\n  var _isArray = void 0;\n\n  if (Array.isArray) {\n    _isArray = Array.isArray;\n  } else {\n    _isArray = function _isArray(x) {\n      return Object.prototype.toString.call(x) === '[object Array]';\n    };\n  }\n\n  var isArray = _isArray;\n  var len = 0;\n  var vertxNext = void 0;\n  var customSchedulerFn = void 0;\n\n  var asap = function asap(callback, arg) {\n    queue[len] = callback;\n    queue[len + 1] = arg;\n    len += 2;\n\n    if (len === 2) {\n      // If len is 2, that means that we need to schedule an async flush.\n      // If additional callbacks are queued before the queue is flushed, they\n      // will be processed by this flush that we are scheduling.\n      if (customSchedulerFn) {\n        customSchedulerFn(flush);\n      } else {\n        scheduleFlush();\n      }\n    }\n  };\n\n  function setScheduler(scheduleFn) {\n    customSchedulerFn = scheduleFn;\n  }\n\n  function setAsap(asapFn) {\n    asap = asapFn;\n  }\n\n  var browserWindow = typeof window !== 'undefined' ? window : undefined;\n  var browserGlobal = browserWindow || {};\n  var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\n  var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]'; // test for web worker but not in IE10\n\n  var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined'; // node\n\n  function useNextTick() {\n    // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n    // see https://github.com/cujojs/when/issues/410 for details\n    return function () {\n      return process.nextTick(flush);\n    };\n  } // vertx\n\n\n  function useVertxTimer() {\n    if (typeof vertxNext !== 'undefined') {\n      return function () {\n        vertxNext(flush);\n      };\n    }\n\n    return useSetTimeout();\n  }\n\n  function useMutationObserver() {\n    var iterations = 0;\n    var observer = new BrowserMutationObserver(flush);\n    var node = document.createTextNode('');\n    observer.observe(node, {\n      characterData: true\n    });\n    return function () {\n      node.data = iterations = ++iterations % 2;\n    };\n  } // web worker\n\n\n  function useMessageChannel() {\n    var channel = new MessageChannel();\n    channel.port1.onmessage = flush;\n    return function () {\n      return channel.port2.postMessage(0);\n    };\n  }\n\n  function useSetTimeout() {\n    // Store setTimeout reference so es6-promise will be unaffected by\n    // other code modifying setTimeout (like sinon.useFakeTimers())\n    var globalSetTimeout = setTimeout;\n    return function () {\n      return globalSetTimeout(flush, 1);\n    };\n  }\n\n  var queue = new Array(1000);\n\n  function flush() {\n    for (var i = 0; i < len; i += 2) {\n      var callback = queue[i];\n      var arg = queue[i + 1];\n      callback(arg);\n      queue[i] = undefined;\n      queue[i + 1] = undefined;\n    }\n\n    len = 0;\n  }\n\n  function attemptVertx() {\n    try {\n      var vertx = Function('return this')().require('vertx');\n\n      vertxNext = vertx.runOnLoop || vertx.runOnContext;\n      return useVertxTimer();\n    } catch (e) {\n      return useSetTimeout();\n    }\n  }\n\n  var scheduleFlush = void 0; // Decide what async method to use to triggering processing of queued callbacks:\n\n  if (isNode) {\n    scheduleFlush = useNextTick();\n  } else if (BrowserMutationObserver) {\n    scheduleFlush = useMutationObserver();\n  } else if (isWorker) {\n    scheduleFlush = useMessageChannel();\n  } else if (browserWindow === undefined && \"function\" === 'function') {\n    scheduleFlush = attemptVertx();\n  } else {\n    scheduleFlush = useSetTimeout();\n  }\n\n  function then(onFulfillment, onRejection) {\n    var parent = this;\n    var child = new this.constructor(noop);\n\n    if (child[PROMISE_ID] === undefined) {\n      makePromise(child);\n    }\n\n    var _state = parent._state;\n\n    if (_state) {\n      var callback = arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    } else {\n      subscribe(parent, child, onFulfillment, onRejection);\n    }\n\n    return child;\n  }\n  /**\n    `Promise.resolve` returns a promise that will become resolved with the\n    passed `value`. It is shorthand for the following:\n  \n    ```javascript\n    let promise = new Promise(function(resolve, reject){\n      resolve(1);\n    });\n  \n    promise.then(function(value){\n      // value === 1\n    });\n    ```\n  \n    Instead of writing the above, your code now simply becomes the following:\n  \n    ```javascript\n    let promise = Promise.resolve(1);\n  \n    promise.then(function(value){\n      // value === 1\n    });\n    ```\n  \n    @method resolve\n    @static\n    @param {Any} value value that the returned promise will be resolved with\n    Useful for tooling.\n    @return {Promise} a promise that will become fulfilled with the given\n    `value`\n  */\n\n\n  function resolve$1(object) {\n    /*jshint validthis:true */\n    var Constructor = this;\n\n    if (object && typeof object === 'object' && object.constructor === Constructor) {\n      return object;\n    }\n\n    var promise = new Constructor(noop);\n    resolve(promise, object);\n    return promise;\n  }\n\n  var PROMISE_ID = Math.random().toString(36).substring(2);\n\n  function noop() {}\n\n  var PENDING = void 0;\n  var FULFILLED = 1;\n  var REJECTED = 2;\n  var TRY_CATCH_ERROR = {\n    error: null\n  };\n\n  function selfFulfillment() {\n    return new TypeError(\"You cannot resolve a promise with itself\");\n  }\n\n  function cannotReturnOwn() {\n    return new TypeError('A promises callback cannot return that same promise.');\n  }\n\n  function getThen(promise) {\n    try {\n      return promise.then;\n    } catch (error) {\n      TRY_CATCH_ERROR.error = error;\n      return TRY_CATCH_ERROR;\n    }\n  }\n\n  function tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n    try {\n      then$$1.call(value, fulfillmentHandler, rejectionHandler);\n    } catch (e) {\n      return e;\n    }\n  }\n\n  function handleForeignThenable(promise, thenable, then$$1) {\n    asap(function (promise) {\n      var sealed = false;\n      var error = tryThen(then$$1, thenable, function (value) {\n        if (sealed) {\n          return;\n        }\n\n        sealed = true;\n\n        if (thenable !== value) {\n          resolve(promise, value);\n        } else {\n          fulfill(promise, value);\n        }\n      }, function (reason) {\n        if (sealed) {\n          return;\n        }\n\n        sealed = true;\n        reject(promise, reason);\n      }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n      if (!sealed && error) {\n        sealed = true;\n        reject(promise, error);\n      }\n    }, promise);\n  }\n\n  function handleOwnThenable(promise, thenable) {\n    if (thenable._state === FULFILLED) {\n      fulfill(promise, thenable._result);\n    } else if (thenable._state === REJECTED) {\n      reject(promise, thenable._result);\n    } else {\n      subscribe(thenable, undefined, function (value) {\n        return resolve(promise, value);\n      }, function (reason) {\n        return reject(promise, reason);\n      });\n    }\n  }\n\n  function handleMaybeThenable(promise, maybeThenable, then$$1) {\n    if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n      handleOwnThenable(promise, maybeThenable);\n    } else {\n      if (then$$1 === TRY_CATCH_ERROR) {\n        reject(promise, TRY_CATCH_ERROR.error);\n        TRY_CATCH_ERROR.error = null;\n      } else if (then$$1 === undefined) {\n        fulfill(promise, maybeThenable);\n      } else if (isFunction(then$$1)) {\n        handleForeignThenable(promise, maybeThenable, then$$1);\n      } else {\n        fulfill(promise, maybeThenable);\n      }\n    }\n  }\n\n  function resolve(promise, value) {\n    if (promise === value) {\n      reject(promise, selfFulfillment());\n    } else if (objectOrFunction(value)) {\n      handleMaybeThenable(promise, value, getThen(value));\n    } else {\n      fulfill(promise, value);\n    }\n  }\n\n  function publishRejection(promise) {\n    if (promise._onerror) {\n      promise._onerror(promise._result);\n    }\n\n    publish(promise);\n  }\n\n  function fulfill(promise, value) {\n    if (promise._state !== PENDING) {\n      return;\n    }\n\n    promise._result = value;\n    promise._state = FULFILLED;\n\n    if (promise._subscribers.length !== 0) {\n      asap(publish, promise);\n    }\n  }\n\n  function reject(promise, reason) {\n    if (promise._state !== PENDING) {\n      return;\n    }\n\n    promise._state = REJECTED;\n    promise._result = reason;\n    asap(publishRejection, promise);\n  }\n\n  function subscribe(parent, child, onFulfillment, onRejection) {\n    var _subscribers = parent._subscribers;\n    var length = _subscribers.length;\n    parent._onerror = null;\n    _subscribers[length] = child;\n    _subscribers[length + FULFILLED] = onFulfillment;\n    _subscribers[length + REJECTED] = onRejection;\n\n    if (length === 0 && parent._state) {\n      asap(publish, parent);\n    }\n  }\n\n  function publish(promise) {\n    var subscribers = promise._subscribers;\n    var settled = promise._state;\n\n    if (subscribers.length === 0) {\n      return;\n    }\n\n    var child = void 0,\n        callback = void 0,\n        detail = promise._result;\n\n    for (var i = 0; i < subscribers.length; i += 3) {\n      child = subscribers[i];\n      callback = subscribers[i + settled];\n\n      if (child) {\n        invokeCallback(settled, child, callback, detail);\n      } else {\n        callback(detail);\n      }\n    }\n\n    promise._subscribers.length = 0;\n  }\n\n  function tryCatch(callback, detail) {\n    try {\n      return callback(detail);\n    } catch (e) {\n      TRY_CATCH_ERROR.error = e;\n      return TRY_CATCH_ERROR;\n    }\n  }\n\n  function invokeCallback(settled, promise, callback, detail) {\n    var hasCallback = isFunction(callback),\n        value = void 0,\n        error = void 0,\n        succeeded = void 0,\n        failed = void 0;\n\n    if (hasCallback) {\n      value = tryCatch(callback, detail);\n\n      if (value === TRY_CATCH_ERROR) {\n        failed = true;\n        error = value.error;\n        value.error = null;\n      } else {\n        succeeded = true;\n      }\n\n      if (promise === value) {\n        reject(promise, cannotReturnOwn());\n        return;\n      }\n    } else {\n      value = detail;\n      succeeded = true;\n    }\n\n    if (promise._state !== PENDING) {// noop\n    } else if (hasCallback && succeeded) {\n      resolve(promise, value);\n    } else if (failed) {\n      reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      reject(promise, value);\n    }\n  }\n\n  function initializePromise(promise, resolver) {\n    try {\n      resolver(function resolvePromise(value) {\n        resolve(promise, value);\n      }, function rejectPromise(reason) {\n        reject(promise, reason);\n      });\n    } catch (e) {\n      reject(promise, e);\n    }\n  }\n\n  var id = 0;\n\n  function nextId() {\n    return id++;\n  }\n\n  function makePromise(promise) {\n    promise[PROMISE_ID] = id++;\n    promise._state = undefined;\n    promise._result = undefined;\n    promise._subscribers = [];\n  }\n\n  function validationError() {\n    return new Error('Array Methods must be provided an Array');\n  }\n\n  var Enumerator = function () {\n    function Enumerator(Constructor, input) {\n      this._instanceConstructor = Constructor;\n      this.promise = new Constructor(noop);\n\n      if (!this.promise[PROMISE_ID]) {\n        makePromise(this.promise);\n      }\n\n      if (isArray(input)) {\n        this.length = input.length;\n        this._remaining = input.length;\n        this._result = new Array(this.length);\n\n        if (this.length === 0) {\n          fulfill(this.promise, this._result);\n        } else {\n          this.length = this.length || 0;\n\n          this._enumerate(input);\n\n          if (this._remaining === 0) {\n            fulfill(this.promise, this._result);\n          }\n        }\n      } else {\n        reject(this.promise, validationError());\n      }\n    }\n\n    Enumerator.prototype._enumerate = function _enumerate(input) {\n      for (var i = 0; this._state === PENDING && i < input.length; i++) {\n        this._eachEntry(input[i], i);\n      }\n    };\n\n    Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n      var c = this._instanceConstructor;\n      var resolve$$1 = c.resolve;\n\n      if (resolve$$1 === resolve$1) {\n        var _then = getThen(entry);\n\n        if (_then === then && entry._state !== PENDING) {\n          this._settledAt(entry._state, i, entry._result);\n        } else if (typeof _then !== 'function') {\n          this._remaining--;\n          this._result[i] = entry;\n        } else if (c === Promise$1) {\n          var promise = new c(noop);\n          handleMaybeThenable(promise, entry, _then);\n\n          this._willSettleAt(promise, i);\n        } else {\n          this._willSettleAt(new c(function (resolve$$1) {\n            return resolve$$1(entry);\n          }), i);\n        }\n      } else {\n        this._willSettleAt(resolve$$1(entry), i);\n      }\n    };\n\n    Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n      var promise = this.promise;\n\n      if (promise._state === PENDING) {\n        this._remaining--;\n\n        if (state === REJECTED) {\n          reject(promise, value);\n        } else {\n          this._result[i] = value;\n        }\n      }\n\n      if (this._remaining === 0) {\n        fulfill(promise, this._result);\n      }\n    };\n\n    Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n      var enumerator = this;\n      subscribe(promise, undefined, function (value) {\n        return enumerator._settledAt(FULFILLED, i, value);\n      }, function (reason) {\n        return enumerator._settledAt(REJECTED, i, reason);\n      });\n    };\n\n    return Enumerator;\n  }();\n  /**\n    `Promise.all` accepts an array of promises, and returns a new promise which\n    is fulfilled with an array of fulfillment values for the passed promises, or\n    rejected with the reason of the first passed promise to be rejected. It casts all\n    elements of the passed iterable to promises as it runs this algorithm.\n  \n    Example:\n  \n    ```javascript\n    let promise1 = resolve(1);\n    let promise2 = resolve(2);\n    let promise3 = resolve(3);\n    let promises = [ promise1, promise2, promise3 ];\n  \n    Promise.all(promises).then(function(array){\n      // The array here would be [ 1, 2, 3 ];\n    });\n    ```\n  \n    If any of the `promises` given to `all` are rejected, the first promise\n    that is rejected will be given as an argument to the returned promises's\n    rejection handler. For example:\n  \n    Example:\n  \n    ```javascript\n    let promise1 = resolve(1);\n    let promise2 = reject(new Error(\"2\"));\n    let promise3 = reject(new Error(\"3\"));\n    let promises = [ promise1, promise2, promise3 ];\n  \n    Promise.all(promises).then(function(array){\n      // Code here never runs because there are rejected promises!\n    }, function(error) {\n      // error.message === \"2\"\n    });\n    ```\n  \n    @method all\n    @static\n    @param {Array} entries array of promises\n    @param {String} label optional string for labeling the promise.\n    Useful for tooling.\n    @return {Promise} promise that is fulfilled when all `promises` have been\n    fulfilled, or rejected if any of them become rejected.\n    @static\n  */\n\n\n  function all(entries) {\n    return new Enumerator(this, entries).promise;\n  }\n  /**\n    `Promise.race` returns a new promise which is settled in the same way as the\n    first passed promise to settle.\n  \n    Example:\n  \n    ```javascript\n    let promise1 = new Promise(function(resolve, reject){\n      setTimeout(function(){\n        resolve('promise 1');\n      }, 200);\n    });\n  \n    let promise2 = new Promise(function(resolve, reject){\n      setTimeout(function(){\n        resolve('promise 2');\n      }, 100);\n    });\n  \n    Promise.race([promise1, promise2]).then(function(result){\n      // result === 'promise 2' because it was resolved before promise1\n      // was resolved.\n    });\n    ```\n  \n    `Promise.race` is deterministic in that only the state of the first\n    settled promise matters. For example, even if other promises given to the\n    `promises` array argument are resolved, but the first settled promise has\n    become rejected before the other promises became fulfilled, the returned\n    promise will become rejected:\n  \n    ```javascript\n    let promise1 = new Promise(function(resolve, reject){\n      setTimeout(function(){\n        resolve('promise 1');\n      }, 200);\n    });\n  \n    let promise2 = new Promise(function(resolve, reject){\n      setTimeout(function(){\n        reject(new Error('promise 2'));\n      }, 100);\n    });\n  \n    Promise.race([promise1, promise2]).then(function(result){\n      // Code here never runs\n    }, function(reason){\n      // reason.message === 'promise 2' because promise 2 became rejected before\n      // promise 1 became fulfilled\n    });\n    ```\n  \n    An example real-world use case is implementing timeouts:\n  \n    ```javascript\n    Promise.race([ajax('foo.json'), timeout(5000)])\n    ```\n  \n    @method race\n    @static\n    @param {Array} promises array of promises to observe\n    Useful for tooling.\n    @return {Promise} a promise which settles in the same way as the first passed\n    promise to settle.\n  */\n\n\n  function race(entries) {\n    /*jshint validthis:true */\n    var Constructor = this;\n\n    if (!isArray(entries)) {\n      return new Constructor(function (_, reject) {\n        return reject(new TypeError('You must pass an array to race.'));\n      });\n    } else {\n      return new Constructor(function (resolve, reject) {\n        var length = entries.length;\n\n        for (var i = 0; i < length; i++) {\n          Constructor.resolve(entries[i]).then(resolve, reject);\n        }\n      });\n    }\n  }\n  /**\n    `Promise.reject` returns a promise rejected with the passed `reason`.\n    It is shorthand for the following:\n  \n    ```javascript\n    let promise = new Promise(function(resolve, reject){\n      reject(new Error('WHOOPS'));\n    });\n  \n    promise.then(function(value){\n      // Code here doesn't run because the promise is rejected!\n    }, function(reason){\n      // reason.message === 'WHOOPS'\n    });\n    ```\n  \n    Instead of writing the above, your code now simply becomes the following:\n  \n    ```javascript\n    let promise = Promise.reject(new Error('WHOOPS'));\n  \n    promise.then(function(value){\n      // Code here doesn't run because the promise is rejected!\n    }, function(reason){\n      // reason.message === 'WHOOPS'\n    });\n    ```\n  \n    @method reject\n    @static\n    @param {Any} reason value that the returned promise will be rejected with.\n    Useful for tooling.\n    @return {Promise} a promise rejected with the given `reason`.\n  */\n\n\n  function reject$1(reason) {\n    /*jshint validthis:true */\n    var Constructor = this;\n    var promise = new Constructor(noop);\n    reject(promise, reason);\n    return promise;\n  }\n\n  function needsResolver() {\n    throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n  }\n\n  function needsNew() {\n    throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n  }\n  /**\n    Promise objects represent the eventual result of an asynchronous operation. The\n    primary way of interacting with a promise is through its `then` method, which\n    registers callbacks to receive either a promise's eventual value or the reason\n    why the promise cannot be fulfilled.\n  \n    Terminology\n    -----------\n  \n    - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n    - `thenable` is an object or function that defines a `then` method.\n    - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n    - `exception` is a value that is thrown using the throw statement.\n    - `reason` is a value that indicates why a promise was rejected.\n    - `settled` the final resting state of a promise, fulfilled or rejected.\n  \n    A promise can be in one of three states: pending, fulfilled, or rejected.\n  \n    Promises that are fulfilled have a fulfillment value and are in the fulfilled\n    state.  Promises that are rejected have a rejection reason and are in the\n    rejected state.  A fulfillment value is never a thenable.\n  \n    Promises can also be said to *resolve* a value.  If this value is also a\n    promise, then the original promise's settled state will match the value's\n    settled state.  So a promise that *resolves* a promise that rejects will\n    itself reject, and a promise that *resolves* a promise that fulfills will\n    itself fulfill.\n  \n  \n    Basic Usage:\n    ------------\n  \n    ```js\n    let promise = new Promise(function(resolve, reject) {\n      // on success\n      resolve(value);\n  \n      // on failure\n      reject(reason);\n    });\n  \n    promise.then(function(value) {\n      // on fulfillment\n    }, function(reason) {\n      // on rejection\n    });\n    ```\n  \n    Advanced Usage:\n    ---------------\n  \n    Promises shine when abstracting away asynchronous interactions such as\n    `XMLHttpRequest`s.\n  \n    ```js\n    function getJSON(url) {\n      return new Promise(function(resolve, reject){\n        let xhr = new XMLHttpRequest();\n  \n        xhr.open('GET', url);\n        xhr.onreadystatechange = handler;\n        xhr.responseType = 'json';\n        xhr.setRequestHeader('Accept', 'application/json');\n        xhr.send();\n  \n        function handler() {\n          if (this.readyState === this.DONE) {\n            if (this.status === 200) {\n              resolve(this.response);\n            } else {\n              reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n            }\n          }\n        };\n      });\n    }\n  \n    getJSON('/posts.json').then(function(json) {\n      // on fulfillment\n    }, function(reason) {\n      // on rejection\n    });\n    ```\n  \n    Unlike callbacks, promises are great composable primitives.\n  \n    ```js\n    Promise.all([\n      getJSON('/posts'),\n      getJSON('/comments')\n    ]).then(function(values){\n      values[0] // => postsJSON\n      values[1] // => commentsJSON\n  \n      return values;\n    });\n    ```\n  \n    @class Promise\n    @param {Function} resolver\n    Useful for tooling.\n    @constructor\n  */\n\n\n  var Promise$1 = function () {\n    function Promise(resolver) {\n      this[PROMISE_ID] = nextId();\n      this._result = this._state = undefined;\n      this._subscribers = [];\n\n      if (noop !== resolver) {\n        typeof resolver !== 'function' && needsResolver();\n        this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n      }\n    }\n    /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n     ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n     Chaining\n    --------\n     The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n     ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n     findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n     ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n     Assimilation\n    ------------\n     Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n     ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n     If the assimliated promise rejects, then the downstream promise will also reject.\n     ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n     Simple Example\n    --------------\n     Synchronous Example\n     ```javascript\n    let result;\n     try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n     Errback Example\n     ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n     Promise Example;\n     ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n     Advanced Example\n    --------------\n     Synchronous Example\n     ```javascript\n    let author, books;\n     try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n     Errback Example\n     ```js\n     function foundBooks(books) {\n     }\n     function failure(reason) {\n     }\n     findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n     Promise Example;\n     ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n     @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n    */\n\n    /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n    ```js\n    function findAuthor(){\n    throw new Error('couldn't find that author');\n    }\n    // synchronous\n    try {\n    findAuthor();\n    } catch(reason) {\n    // something went wrong\n    }\n    // async with promises\n    findAuthor().catch(function(reason){\n    // something went wrong\n    });\n    ```\n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n    */\n\n\n    Promise.prototype.catch = function _catch(onRejection) {\n      return this.then(null, onRejection);\n    };\n    /**\n      `finally` will be invoked regardless of the promise's fate just as native\n      try/catch/finally behaves\n    \n      Synchronous example:\n    \n      ```js\n      findAuthor() {\n        if (Math.random() > 0.5) {\n          throw new Error();\n        }\n        return new Author();\n      }\n    \n      try {\n        return findAuthor(); // succeed or fail\n      } catch(error) {\n        return findOtherAuther();\n      } finally {\n        // always runs\n        // doesn't affect the return value\n      }\n      ```\n    \n      Asynchronous example:\n    \n      ```js\n      findAuthor().catch(function(reason){\n        return findOtherAuther();\n      }).finally(function(){\n        // author was either found, or not\n      });\n      ```\n    \n      @method finally\n      @param {Function} callback\n      @return {Promise}\n    */\n\n\n    Promise.prototype.finally = function _finally(callback) {\n      var promise = this;\n      var constructor = promise.constructor;\n\n      if (isFunction(callback)) {\n        return promise.then(function (value) {\n          return constructor.resolve(callback()).then(function () {\n            return value;\n          });\n        }, function (reason) {\n          return constructor.resolve(callback()).then(function () {\n            throw reason;\n          });\n        });\n      }\n\n      return promise.then(callback, callback);\n    };\n\n    return Promise;\n  }();\n\n  Promise$1.prototype.then = then;\n  Promise$1.all = all;\n  Promise$1.race = race;\n  Promise$1.resolve = resolve$1;\n  Promise$1.reject = reject$1;\n  Promise$1._setScheduler = setScheduler;\n  Promise$1._setAsap = setAsap;\n  Promise$1._asap = asap;\n  /*global self*/\n\n  function polyfill() {\n    var local = void 0;\n\n    if (typeof global !== 'undefined') {\n      local = global;\n    } else if (typeof self !== 'undefined') {\n      local = self;\n    } else {\n      try {\n        local = Function('return this')();\n      } catch (e) {\n        throw new Error('polyfill failed because global object is unavailable in this environment');\n      }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n      var promiseToString = null;\n\n      try {\n        promiseToString = Object.prototype.toString.call(P.resolve());\n      } catch (e) {// silently ignored\n      }\n\n      if (promiseToString === '[object Promise]' && !P.cast) {\n        return;\n      }\n    }\n\n    local.Promise = Promise$1;\n  } // Strange compat..\n\n\n  Promise$1.polyfill = polyfill;\n  Promise$1.Promise = Promise$1;\n  return Promise$1;\n});\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/es6-promise/dist/es6-promise.js?");

/***/ }),

/***/ "./node_modules/opentracing/lib/constants.js":
/*!***************************************************!*\
  !*** ./node_modules/opentracing/lib/constants.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * The FORMAT_BINARY format represents SpanContexts in an opaque binary\n * carrier.\n *\n * Tracer.inject() will set the buffer field to an Array-like (Array,\n * ArrayBuffer, or TypedBuffer) object containing the injected binary data.\n * Any valid Object can be used as long as the buffer field of the object\n * can be set.\n *\n * Tracer.extract() will look for `carrier.buffer`, and that field is\n * expected to be an Array-like object (Array, ArrayBuffer, or\n * TypedBuffer).\n */\n\nexports.FORMAT_BINARY = 'binary';\n/**\n * The FORMAT_TEXT_MAP format represents SpanContexts using a\n * string->string map (backed by a Javascript Object) as a carrier.\n *\n * NOTE: Unlike FORMAT_HTTP_HEADERS, FORMAT_TEXT_MAP places no restrictions\n * on the characters used in either the keys or the values of the map\n * entries.\n *\n * The FORMAT_TEXT_MAP carrier map may contain unrelated data (e.g.,\n * arbitrary gRPC metadata); as such, the Tracer implementation should use\n * a prefix or other convention to distinguish Tracer-specific key:value\n * pairs.\n */\n\nexports.FORMAT_TEXT_MAP = 'text_map';\n/**\n * The FORMAT_HTTP_HEADERS format represents SpanContexts using a\n * character-restricted string->string map (backed by a Javascript Object)\n * as a carrier.\n *\n * Keys and values in the FORMAT_HTTP_HEADERS carrier must be suitable for\n * use as HTTP headers (without modification or further escaping). That is,\n * the keys have a greatly restricted character set, casing for the keys\n * may not be preserved by various intermediaries, and the values should be\n * URL-escaped.\n *\n * The FORMAT_HTTP_HEADERS carrier map may contain unrelated data (e.g.,\n * arbitrary HTTP headers); as such, the Tracer implementation should use a\n * prefix or other convention to distinguish Tracer-specific key:value\n * pairs.\n */\n\nexports.FORMAT_HTTP_HEADERS = 'http_headers';\n/**\n * A Span may be the \"child of\" a parent Span. In a “child of” reference,\n * the parent Span depends on the child Span in some capacity.\n *\n * See more about reference types at https://github.com/opentracing/specification\n */\n\nexports.REFERENCE_CHILD_OF = 'child_of';\n/**\n * Some parent Spans do not depend in any way on the result of their child\n * Spans. In these cases, we say merely that the child Span “follows from”\n * the parent Span in a causal sense.\n *\n * See more about reference types at https://github.com/opentracing/specification\n */\n\nexports.REFERENCE_FOLLOWS_FROM = 'follows_from';\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/opentracing/lib/constants.js?");

/***/ }),

/***/ "./node_modules/opentracing/lib/functions.js":
/*!***************************************************!*\
  !*** ./node_modules/opentracing/lib/functions.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Constants = __webpack_require__(/*! ./constants */ \"./node_modules/opentracing/lib/constants.js\");\n\nvar reference_1 = __webpack_require__(/*! ./reference */ \"./node_modules/opentracing/lib/reference.js\");\n\nvar span_1 = __webpack_require__(/*! ./span */ \"./node_modules/opentracing/lib/span.js\");\n/**\n * Return a new REFERENCE_CHILD_OF reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_CHILD_OF reference pointing to `spanContext`\n */\n\n\nfunction childOf(spanContext) {\n  // Allow the user to pass a Span instead of a SpanContext\n  if (spanContext instanceof span_1.default) {\n    spanContext = spanContext.context();\n  }\n\n  return new reference_1.default(Constants.REFERENCE_CHILD_OF, spanContext);\n}\n\nexports.childOf = childOf;\n/**\n * Return a new REFERENCE_FOLLOWS_FROM reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_FOLLOWS_FROM reference pointing to `spanContext`\n */\n\nfunction followsFrom(spanContext) {\n  // Allow the user to pass a Span instead of a SpanContext\n  if (spanContext instanceof span_1.default) {\n    spanContext = spanContext.context();\n  }\n\n  return new reference_1.default(Constants.REFERENCE_FOLLOWS_FROM, spanContext);\n}\n\nexports.followsFrom = followsFrom;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/opentracing/lib/functions.js?");

/***/ }),

/***/ "./node_modules/opentracing/lib/noop.js":
/*!**********************************************!*\
  !*** ./node_modules/opentracing/lib/noop.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar span_1 = __webpack_require__(/*! ./span */ \"./node_modules/opentracing/lib/span.js\");\n\nvar span_context_1 = __webpack_require__(/*! ./span_context */ \"./node_modules/opentracing/lib/span_context.js\");\n\nvar tracer_1 = __webpack_require__(/*! ./tracer */ \"./node_modules/opentracing/lib/tracer.js\");\n\nexports.tracer = null;\nexports.spanContext = null;\nexports.span = null; // Deferred initialization to avoid a dependency cycle where Tracer depends on\n// Span which depends on the noop tracer.\n\nfunction initialize() {\n  exports.tracer = new tracer_1.default();\n  exports.span = new span_1.default();\n  exports.spanContext = new span_context_1.default();\n}\n\nexports.initialize = initialize;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/opentracing/lib/noop.js?");

/***/ }),

/***/ "./node_modules/opentracing/lib/reference.js":
/*!***************************************************!*\
  !*** ./node_modules/opentracing/lib/reference.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar span_1 = __webpack_require__(/*! ./span */ \"./node_modules/opentracing/lib/span.js\");\n/**\n * Reference pairs a reference type constant (e.g., REFERENCE_CHILD_OF or\n * REFERENCE_FOLLOWS_FROM) with the SpanContext it points to.\n *\n * See the exported childOf() and followsFrom() functions at the package level.\n */\n\n\nvar Reference =\n/** @class */\nfunction () {\n  /**\n   * Initialize a new Reference instance.\n   *\n   * @param {string} type - the Reference type constant (e.g.,\n   *        REFERENCE_CHILD_OF or REFERENCE_FOLLOWS_FROM).\n   * @param {SpanContext} referencedContext - the SpanContext being referred\n   *        to. As a convenience, a Span instance may be passed in instead\n   *        (in which case its .context() is used here).\n   */\n  function Reference(type, referencedContext) {\n    this._type = type;\n    this._referencedContext = referencedContext instanceof span_1.default ? referencedContext.context() : referencedContext;\n  }\n  /**\n   * @return {string} The Reference type (e.g., REFERENCE_CHILD_OF or\n   *         REFERENCE_FOLLOWS_FROM).\n   */\n\n\n  Reference.prototype.type = function () {\n    return this._type;\n  };\n  /**\n   * @return {SpanContext} The SpanContext being referred to (e.g., the\n   *         parent in a REFERENCE_CHILD_OF Reference).\n   */\n\n\n  Reference.prototype.referencedContext = function () {\n    return this._referencedContext;\n  };\n\n  return Reference;\n}();\n\nexports.default = Reference;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/opentracing/lib/reference.js?");

/***/ }),

/***/ "./node_modules/opentracing/lib/span.js":
/*!**********************************************!*\
  !*** ./node_modules/opentracing/lib/span.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar noop = __webpack_require__(/*! ./noop */ \"./node_modules/opentracing/lib/noop.js\");\n/**\n * Span represents a logical unit of work as part of a broader Trace. Examples\n * of span might include remote procedure calls or a in-process function calls\n * to sub-components. A Trace has a single, top-level \"root\" Span that in turn\n * may have zero or more child Spans, which in turn may have children.\n */\n\n\nvar Span =\n/** @class */\nfunction () {\n  function Span() {} // ---------------------------------------------------------------------- //\n  // OpenTracing API methods\n  // ---------------------------------------------------------------------- //\n\n  /**\n   * Returns the SpanContext object associated with this Span.\n   *\n   * @return {SpanContext}\n   */\n\n\n  Span.prototype.context = function () {\n    return this._context();\n  };\n  /**\n   * Returns the Tracer object used to create this Span.\n   *\n   * @return {Tracer}\n   */\n\n\n  Span.prototype.tracer = function () {\n    return this._tracer();\n  };\n  /**\n   * Sets the string name for the logical operation this span represents.\n   *\n   * @param {string} name\n   */\n\n\n  Span.prototype.setOperationName = function (name) {\n    this._setOperationName(name);\n\n    return this;\n  };\n  /**\n   * Sets a key:value pair on this Span that also propagates to future\n   * children of the associated Span.\n   *\n   * setBaggageItem() enables powerful functionality given a full-stack\n   * opentracing integration (e.g., arbitrary application data from a web\n   * client can make it, transparently, all the way into the depths of a\n   * storage system), and with it some powerful costs: use this feature with\n   * care.\n   *\n   * IMPORTANT NOTE #1: setBaggageItem() will only propagate baggage items to\n   * *future* causal descendants of the associated Span.\n   *\n   * IMPORTANT NOTE #2: Use this thoughtfully and with care. Every key and\n   * value is copied into every local *and remote* child of the associated\n   * Span, and that can add up to a lot of network and cpu overhead.\n   *\n   * @param {string} key\n   * @param {string} value\n   */\n\n\n  Span.prototype.setBaggageItem = function (key, value) {\n    this._setBaggageItem(key, value);\n\n    return this;\n  };\n  /**\n   * Returns the value for a baggage item given its key.\n   *\n   * @param  {string} key\n   *         The key for the given trace attribute.\n   * @return {string}\n   *         String value for the given key, or undefined if the key does not\n   *         correspond to a set trace attribute.\n   */\n\n\n  Span.prototype.getBaggageItem = function (key) {\n    return this._getBaggageItem(key);\n  };\n  /**\n   * Adds a single tag to the span.  See `addTags()` for details.\n   *\n   * @param {string} key\n   * @param {any} value\n   */\n\n\n  Span.prototype.setTag = function (key, value) {\n    // NOTE: the call is normalized to a call to _addTags()\n    this._addTags((_a = {}, _a[key] = value, _a));\n\n    return this;\n\n    var _a;\n  };\n  /**\n   * Adds the given key value pairs to the set of span tags.\n   *\n   * Multiple calls to addTags() results in the tags being the superset of\n   * all calls.\n   *\n   * The behavior of setting the same key multiple times on the same span\n   * is undefined.\n   *\n   * The supported type of the values is implementation-dependent.\n   * Implementations are expected to safely handle all types of values but\n   * may choose to ignore unrecognized / unhandle-able values (e.g. objects\n   * with cyclic references, function objects).\n   *\n   * @return {[type]} [description]\n   */\n\n\n  Span.prototype.addTags = function (keyValueMap) {\n    this._addTags(keyValueMap);\n\n    return this;\n  };\n  /**\n   * Add a log record to this Span, optionally at a user-provided timestamp.\n   *\n   * For example:\n   *\n   *     span.log({\n   *         size: rpc.size(),  // numeric value\n   *         URI: rpc.URI(),  // string value\n   *         payload: rpc.payload(),  // Object value\n   *         \"keys can be arbitrary strings\": rpc.foo(),\n   *     });\n   *\n   *     span.log({\n   *         \"error.description\": someError.description(),\n   *     }, someError.timestampMillis());\n   *\n   * @param {object} keyValuePairs\n   *        An object mapping string keys to arbitrary value types. All\n   *        Tracer implementations should support bool, string, and numeric\n   *        value types, and some may also support Object values.\n   * @param {number} timestamp\n   *        An optional parameter specifying the timestamp in milliseconds\n   *        since the Unix epoch. Fractional values are allowed so that\n   *        timestamps with sub-millisecond accuracy can be represented. If\n   *        not specified, the implementation is expected to use its notion\n   *        of the current time of the call.\n   */\n\n\n  Span.prototype.log = function (keyValuePairs, timestamp) {\n    this._log(keyValuePairs, timestamp);\n\n    return this;\n  };\n  /**\n   * DEPRECATED\n   */\n\n\n  Span.prototype.logEvent = function (eventName, payload) {\n    return this._log({\n      event: eventName,\n      payload: payload\n    });\n  };\n  /**\n   * Sets the end timestamp and finalizes Span state.\n   *\n   * With the exception of calls to Span.context() (which are always allowed),\n   * finish() must be the last call made to any span instance, and to do\n   * otherwise leads to undefined behavior.\n   *\n   * @param  {number} finishTime\n   *         Optional finish time in milliseconds as a Unix timestamp. Decimal\n   *         values are supported for timestamps with sub-millisecond accuracy.\n   *         If not specified, the current time (as defined by the\n   *         implementation) will be used.\n   */\n\n\n  Span.prototype.finish = function (finishTime) {\n    this._finish(finishTime); // Do not return `this`. The Span generally should not be used after it\n    // is finished so chaining is not desired in this context.\n\n  }; // ---------------------------------------------------------------------- //\n  // Derived classes can choose to implement the below\n  // ---------------------------------------------------------------------- //\n  // By default returns a no-op SpanContext.\n\n\n  Span.prototype._context = function () {\n    return noop.spanContext;\n  }; // By default returns a no-op tracer.\n  //\n  // The base class could store the tracer that created it, but it does not\n  // in order to ensure the no-op span implementation has zero members,\n  // which allows V8 to aggressively optimize calls to such objects.\n\n\n  Span.prototype._tracer = function () {\n    return noop.tracer;\n  }; // By default does nothing\n\n\n  Span.prototype._setOperationName = function (name) {}; // By default does nothing\n\n\n  Span.prototype._setBaggageItem = function (key, value) {}; // By default does nothing\n\n\n  Span.prototype._getBaggageItem = function (key) {\n    return undefined;\n  }; // By default does nothing\n  //\n  // NOTE: both setTag() and addTags() map to this function. keyValuePairs\n  // will always be an associative array.\n\n\n  Span.prototype._addTags = function (keyValuePairs) {}; // By default does nothing\n\n\n  Span.prototype._log = function (keyValuePairs, timestamp) {}; // By default does nothing\n  //\n  // finishTime is expected to be either a number or undefined.\n\n\n  Span.prototype._finish = function (finishTime) {};\n\n  return Span;\n}();\n\nexports.Span = Span;\nexports.default = Span;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/opentracing/lib/span.js?");

/***/ }),

/***/ "./node_modules/opentracing/lib/span_context.js":
/*!******************************************************!*\
  !*** ./node_modules/opentracing/lib/span_context.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * SpanContext represents Span state that must propagate to descendant Spans\n * and across process boundaries.\n *\n * SpanContext is logically divided into two pieces: the user-level \"Baggage\"\n * (see setBaggageItem and getBaggageItem) that propagates across Span\n * boundaries and any Tracer-implementation-specific fields that are needed to\n * identify or otherwise contextualize the associated Span instance (e.g., a\n * <trace_id, span_id, sampled> tuple).\n */\n\nvar SpanContext =\n/** @class */\nfunction () {\n  function SpanContext() {}\n\n  return SpanContext;\n}();\n\nexports.SpanContext = SpanContext;\nexports.default = SpanContext;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/opentracing/lib/span_context.js?");

/***/ }),

/***/ "./node_modules/opentracing/lib/tracer.js":
/*!************************************************!*\
  !*** ./node_modules/opentracing/lib/tracer.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Functions = __webpack_require__(/*! ./functions */ \"./node_modules/opentracing/lib/functions.js\");\n\nvar Noop = __webpack_require__(/*! ./noop */ \"./node_modules/opentracing/lib/noop.js\");\n\nvar span_1 = __webpack_require__(/*! ./span */ \"./node_modules/opentracing/lib/span.js\");\n/**\n * Tracer is the entry-point between the instrumentation API and the tracing\n * implementation.\n *\n * The default object acts as a no-op implementation.\n *\n * Note to implementators: derived classes can choose to directly implement the\n * methods in the \"OpenTracing API methods\" section, or optionally the subset of\n * underscore-prefixed methods to pick up the argument checking and handling\n * automatically from the base class.\n */\n\n\nvar Tracer =\n/** @class */\nfunction () {\n  function Tracer() {} // ---------------------------------------------------------------------- //\n  // OpenTracing API methods\n  // ---------------------------------------------------------------------- //\n\n  /**\n   * Starts and returns a new Span representing a logical unit of work.\n   *\n   * For example:\n   *\n   *     // Start a new (parentless) root Span:\n   *     var parent = Tracer.startSpan('DoWork');\n   *\n   *     // Start a new (child) Span:\n   *     var child = Tracer.startSpan('load-from-db', {\n   *         childOf: parent.context(),\n   *     });\n   *\n   *     // Start a new async (FollowsFrom) Span:\n   *     var child = Tracer.startSpan('async-cache-write', {\n   *         references: [\n   *             opentracing.followsFrom(parent.context())\n   *         ],\n   *     });\n   *\n   * @param {string} name - the name of the operation (REQUIRED).\n   * @param {SpanOptions} [options] - options for the newly created span.\n   * @return {Span} - a new Span object.\n   */\n\n\n  Tracer.prototype.startSpan = function (name, options) {\n    if (options === void 0) {\n      options = {};\n    } // Convert options.childOf to fields.references as needed.\n\n\n    if (options.childOf) {\n      // Convert from a Span or a SpanContext into a Reference.\n      var childOf = Functions.childOf(options.childOf);\n\n      if (options.references) {\n        options.references.push(childOf);\n      } else {\n        options.references = [childOf];\n      }\n\n      delete options.childOf;\n    }\n\n    return this._startSpan(name, options);\n  };\n  /**\n   * Injects the given SpanContext instance for cross-process propagation\n   * within `carrier`. The expected type of `carrier` depends on the value of\n   * `format.\n   *\n   * OpenTracing defines a common set of `format` values (see\n   * FORMAT_TEXT_MAP, FORMAT_HTTP_HEADERS, and FORMAT_BINARY), and each has\n   * an expected carrier type.\n   *\n   * Consider this pseudocode example:\n   *\n   *     var clientSpan = ...;\n   *     ...\n   *     // Inject clientSpan into a text carrier.\n   *     var headersCarrier = {};\n   *     Tracer.inject(clientSpan.context(), Tracer.FORMAT_HTTP_HEADERS, headersCarrier);\n   *     // Incorporate the textCarrier into the outbound HTTP request header\n   *     // map.\n   *     Object.assign(outboundHTTPReq.headers, headersCarrier);\n   *     // ... send the httpReq\n   *\n   * @param  {SpanContext} spanContext - the SpanContext to inject into the\n   *         carrier object. As a convenience, a Span instance may be passed\n   *         in instead (in which case its .context() is used for the\n   *         inject()).\n   * @param  {string} format - the format of the carrier.\n   * @param  {any} carrier - see the documentation for the chosen `format`\n   *         for a description of the carrier object.\n   */\n\n\n  Tracer.prototype.inject = function (spanContext, format, carrier) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof span_1.default) {\n      spanContext = spanContext.context();\n    }\n\n    return this._inject(spanContext, format, carrier);\n  };\n  /**\n   * Returns a SpanContext instance extracted from `carrier` in the given\n   * `format`.\n   *\n   * OpenTracing defines a common set of `format` values (see\n   * FORMAT_TEXT_MAP, FORMAT_HTTP_HEADERS, and FORMAT_BINARY), and each has\n   * an expected carrier type.\n   *\n   * Consider this pseudocode example:\n   *\n   *     // Use the inbound HTTP request's headers as a text map carrier.\n   *     var headersCarrier = inboundHTTPReq.headers;\n   *     var wireCtx = Tracer.extract(Tracer.FORMAT_HTTP_HEADERS, headersCarrier);\n   *     var serverSpan = Tracer.startSpan('...', { childOf : wireCtx });\n   *\n   * @param  {string} format - the format of the carrier.\n   * @param  {any} carrier - the type of the carrier object is determined by\n   *         the format.\n   * @return {SpanContext}\n   *         The extracted SpanContext, or null if no such SpanContext could\n   *         be found in `carrier`\n   */\n\n\n  Tracer.prototype.extract = function (format, carrier) {\n    return this._extract(format, carrier);\n  }; // ---------------------------------------------------------------------- //\n  // Derived classes can choose to implement the below\n  // ---------------------------------------------------------------------- //\n  // NOTE: the input to this method is *always* an associative array. The\n  // public-facing startSpan() method normalizes the arguments so that\n  // all N implementations do not need to worry about variations in the call\n  // signature.\n  //\n  // The default behavior returns a no-op span.\n\n\n  Tracer.prototype._startSpan = function (name, fields) {\n    return Noop.span;\n  }; // The default behavior is a no-op.\n\n\n  Tracer.prototype._inject = function (spanContext, format, carrier) {}; // The default behavior is to return a no-op SpanContext.\n\n\n  Tracer.prototype._extract = function (format, carrier) {\n    return Noop.spanContext;\n  };\n\n  return Tracer;\n}();\n\nexports.Tracer = Tracer;\nexports.default = Tracer;\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/opentracing/lib/tracer.js?");

/***/ }),

/***/ "./node_modules/stackframe/stackframe.js":
/*!***********************************************!*\
  !*** ./node_modules/stackframe/stackframe.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n  'use strict'; // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n  /* istanbul ignore next */\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(this, function () {\n  'use strict';\n\n  function _isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {\n    if (functionName !== undefined) {\n      this.setFunctionName(functionName);\n    }\n\n    if (args !== undefined) {\n      this.setArgs(args);\n    }\n\n    if (fileName !== undefined) {\n      this.setFileName(fileName);\n    }\n\n    if (lineNumber !== undefined) {\n      this.setLineNumber(lineNumber);\n    }\n\n    if (columnNumber !== undefined) {\n      this.setColumnNumber(columnNumber);\n    }\n\n    if (source !== undefined) {\n      this.setSource(source);\n    }\n  }\n\n  StackFrame.prototype = {\n    getFunctionName: function getFunctionName() {\n      return this.functionName;\n    },\n    setFunctionName: function setFunctionName(v) {\n      this.functionName = String(v);\n    },\n    getArgs: function getArgs() {\n      return this.args;\n    },\n    setArgs: function setArgs(v) {\n      if (Object.prototype.toString.call(v) !== '[object Array]') {\n        throw new TypeError('Args must be an Array');\n      }\n\n      this.args = v;\n    },\n    // NOTE: Property name may be misleading as it includes the path,\n    // but it somewhat mirrors V8's JavaScriptStackTraceApi\n    // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n    // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n    getFileName: function getFileName() {\n      return this.fileName;\n    },\n    setFileName: function setFileName(v) {\n      this.fileName = String(v);\n    },\n    getLineNumber: function getLineNumber() {\n      return this.lineNumber;\n    },\n    setLineNumber: function setLineNumber(v) {\n      if (!_isNumber(v)) {\n        throw new TypeError('Line Number must be a Number');\n      }\n\n      this.lineNumber = Number(v);\n    },\n    getColumnNumber: function getColumnNumber() {\n      return this.columnNumber;\n    },\n    setColumnNumber: function setColumnNumber(v) {\n      if (!_isNumber(v)) {\n        throw new TypeError('Column Number must be a Number');\n      }\n\n      this.columnNumber = Number(v);\n    },\n    getSource: function getSource() {\n      return this.source;\n    },\n    setSource: function setSource(v) {\n      this.source = String(v);\n    },\n    toString: function toString() {\n      var functionName = this.getFunctionName() || '{anonymous}';\n      var args = '(' + (this.getArgs() || []).join(',') + ')';\n      var fileName = this.getFileName() ? '@' + this.getFileName() : '';\n      var lineNumber = _isNumber(this.getLineNumber()) ? ':' + this.getLineNumber() : '';\n      var columnNumber = _isNumber(this.getColumnNumber()) ? ':' + this.getColumnNumber() : '';\n      return functionName + args + fileName + lineNumber + columnNumber;\n    }\n  };\n  return StackFrame;\n});\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/stackframe/stackframe.js?");

/***/ }),

/***/ "./node_modules/uuid/lib/rng-browser.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/rng-browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/uuid/lib/rng-browser.js?");

/***/ }),

/***/ "./src/apm-base.js":
/*!*************************!*\
  !*** ./src/apm-base.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar ApmBase =\n/*#__PURE__*/\nfunction () {\n  function ApmBase(serviceFactory, disable) {\n    this._disable = disable;\n    this.serviceFactory = serviceFactory;\n    this._initialized = false;\n  }\n\n  var _proto = ApmBase.prototype;\n\n  _proto.init = function init(config) {\n    if (this.isEnabled() && !this._initialized) {\n      this._initialized = true;\n      var configService = this.serviceFactory.getService('ConfigService');\n      configService.setConfig({\n        agentName: 'js-base',\n        agentVersion: '3.0.0'\n      });\n      configService.setConfig(config);\n      this.serviceFactory.init();\n      var errorLogging = this.serviceFactory.getService('ErrorLogging');\n      errorLogging.registerGlobalEventListener();\n      var performanceMonitoring = this.serviceFactory.getService('PerformanceMonitoring');\n      performanceMonitoring.init();\n\n      if (configService.get('sendPageLoadTransaction')) {\n        this._sendPageLoadMetrics();\n      }\n    }\n\n    return this;\n  };\n\n  _proto._sendPageLoadMetrics = function _sendPageLoadMetrics() {\n    var transactionService = this.serviceFactory.getService('TransactionService');\n    var configService = this.serviceFactory.getService('ConfigService');\n    var tr = transactionService.startTransaction(configService.get('pageLoadTransactionName'), 'page-load');\n\n    var sendPageLoadMetrics = function sendPageLoadMetrics() {\n      // to make sure PerformanceTiming.loadEventEnd has a value\n      setTimeout(function () {\n        if (tr) {\n          tr.detectFinish();\n        }\n      });\n    };\n\n    if (document.readyState === 'complete') {\n      sendPageLoadMetrics();\n    } else {\n      window.addEventListener('load', sendPageLoadMetrics);\n    }\n  };\n\n  _proto.isEnabled = function isEnabled() {\n    return !this._disable;\n  };\n\n  _proto.config = function config(_config) {\n    var configService = this.serviceFactory.getService('ConfigService');\n    configService.setConfig(_config);\n  };\n\n  _proto.setUserContext = function setUserContext(userContext) {\n    var configService = this.serviceFactory.getService('ConfigService');\n    configService.setUserContext(userContext);\n  };\n\n  _proto.setCustomContext = function setCustomContext(customContext) {\n    var configService = this.serviceFactory.getService('ConfigService');\n    configService.setCustomContext(customContext);\n  };\n\n  _proto.addTags = function addTags(tags) {\n    var configService = this.serviceFactory.getService('ConfigService');\n    configService.addTags(tags);\n  } // Should call this method before 'load' event on window is fired\n  ;\n\n  _proto.setInitialPageLoadName = function setInitialPageLoadName(name) {\n    if (this.isEnabled()) {\n      var configService = this.serviceFactory.getService('ConfigService');\n      configService.setConfig({\n        pageLoadTransactionName: name\n      });\n    }\n  };\n\n  _proto.startTransaction = function startTransaction(name, type) {\n    if (this.isEnabled()) {\n      var transactionService = this.serviceFactory.getService('TransactionService');\n      return transactionService.startTransaction(name, type);\n    }\n  };\n\n  _proto.startSpan = function startSpan(name, type) {\n    if (this.isEnabled()) {\n      var transactionService = this.serviceFactory.getService('TransactionService');\n      return transactionService.startSpan(name, type);\n    }\n  };\n\n  _proto.getCurrentTransaction = function getCurrentTransaction() {\n    if (this.isEnabled()) {\n      var transactionService = this.serviceFactory.getService('TransactionService');\n      return transactionService.getCurrentTransaction();\n    }\n  };\n\n  _proto.getTransactionService = function getTransactionService() {\n    if (this.isEnabled()) {\n      var transactionService = this.serviceFactory.getService('TransactionService');\n      return transactionService;\n    }\n  };\n\n  _proto.captureError = function captureError(error) {\n    if (this.isEnabled()) {\n      var errorLogging = this.serviceFactory.getService('ErrorLogging');\n      return errorLogging.logError(error);\n    }\n  };\n\n  _proto.addFilter = function addFilter(fn) {\n    var configService = this.serviceFactory.getService('ConfigService');\n    configService.addFilter(fn);\n  };\n\n  return ApmBase;\n}();\n\nmodule.exports = ApmBase;\n\n//# sourceURL=webpack://%5Bname%5D/./src/apm-base.js?");

/***/ }),

/***/ "./src/bootstrap.js":
/*!**************************!*\
  !*** ./src/bootstrap.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar alreadyBootstrap = false;\nvar enabled = false;\n\nmodule.exports = function bootstrap() {\n  if (alreadyBootstrap) {\n    return enabled;\n  }\n\n  alreadyBootstrap = true;\n\n  var apmCore = __webpack_require__(/*! elastic-apm-js-core */ \"./node_modules/elastic-apm-js-core/src/index.js\");\n\n  if (apmCore.utils.isPlatformSupported()) {\n    __webpack_require__(/*! es6-promise/auto */ \"./node_modules/es6-promise/auto.js\");\n\n    apmCore.patching.patchAll();\n    enabled = true;\n  } else {\n    console.log('APM: Platform is not supported!');\n  }\n\n  return enabled;\n};\n\n//# sourceURL=webpack://%5Bname%5D/./src/bootstrap.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar bootstrap = __webpack_require__(/*! ./bootstrap */ \"./src/bootstrap.js\");\n\nvar enabled = bootstrap();\n\nvar apmCore = __webpack_require__(/*! elastic-apm-js-core */ \"./node_modules/elastic-apm-js-core/src/index.js\");\n\nvar ApmBase = __webpack_require__(/*! ./apm-base */ \"./src/apm-base.js\");\n\nvar serviceFactory = apmCore.createServiceFactory();\nvar apmBase = new ApmBase(serviceFactory, !enabled);\n\nif (typeof window !== 'undefined') {\n  window.elasticApm = apmBase;\n}\n\nvar exports = {\n  __esModule: true,\n  default: apmBase.init.bind(apmBase),\n  init: apmBase.init.bind(apmBase),\n  ApmBase: ApmBase,\n  apmBase: apmBase,\n  apm: apmBase\n};\nmodule.exports = exports;\n\n//# sourceURL=webpack://%5Bname%5D/./src/index.js?");

/***/ }),

/***/ "./src/opentracing-entry.js":
/*!**********************************!*\
  !*** ./src/opentracing-entry.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar indexExports = __webpack_require__(/*! ./index */ \"./src/index.js\");\n\nvar opentracing = __webpack_require__(/*! ./opentracing */ \"./src/opentracing/index.js\");\n\nvar _require = __webpack_require__(/*! elastic-apm-js-core/src/common/utils */ \"./node_modules/elastic-apm-js-core/src/common/utils.js\"),\n    extend = _require.extend;\n\nmodule.exports = extend({}, indexExports, opentracing);\n\n//# sourceURL=webpack://%5Bname%5D/./src/opentracing-entry.js?");

/***/ }),

/***/ "./src/opentracing/index.js":
/*!**********************************!*\
  !*** ./src/opentracing/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nvar _require = __webpack_require__(/*! elastic-apm-js-core/src/opentracing */ \"./node_modules/elastic-apm-js-core/src/opentracing/index.js\"),\n    createElasticTracer = _require.createTracer;\n\nfunction createTracer(apmBase) {\n  return createElasticTracer(apmBase.serviceFactory);\n}\n\nif (window && window.elasticApm) {\n  window.elasticApm.createTracer = createTracer.bind(window.elasticApm, window.elasticApm);\n}\n\nmodule.exports = {\n  __esModule: true,\n  default: createTracer,\n  createTracer: createTracer\n};\n\n//# sourceURL=webpack://%5Bname%5D/./src/opentracing/index.js?");

/***/ })

/******/ });
});