{"version":3,"file":"pdf.image_decoders.js","mappings":"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","sources":["webpack://pdfjs-dist/image_decoders/pdf.image_decoders/webpack/universalModuleDefinition","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/shared/util.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/shared/compatibility.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/shared/is_node.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/jbig2.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/core_utils.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/primitives.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/base_stream.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/arithmetic_decoder.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/ccitt.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/jpg.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/jpx.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/webpack/bootstrap","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/pdf.image_decoders.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/image_decoders/pdf.image_decoders\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/image_decoders/pdf.image_decoders\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/image_decoders/pdf.image_decoders\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  /** @deprecated unused */\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots && dots.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch (ex) {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      prop in obj,\n      `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n    );\n  }\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nfunction bytesToString(bytes) {\n  if (\n    typeof bytes !== \"object\" ||\n    bytes === null ||\n    bytes.length === undefined\n  ) {\n    unreachable(\"Invalid argument for bytesToString\");\n  }\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  if (typeof str !== \"string\") {\n    unreachable(\"Invalid argument for stringToBytes\");\n  }\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\n// eslint-disable-next-line consistent-return\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  if (arr.byteLength !== undefined) {\n    return arr.byteLength;\n  }\n  unreachable(\"Invalid argument for arrayByteLength\");\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] =\n        mt * mt * mt * x0 +\n        3 * mt * mt * t * x1 +\n        3 * mt * t * t * x2 +\n        t * t * t * x3;\n      bounds[1][j] =\n        mt * mt * mt * y0 +\n        3 * mt * mt * t * y1 +\n        3 * mt * t * t * y2 +\n        t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return [\n      Math.min(...bounds[0]),\n      Math.min(...bounds[1]),\n      Math.max(...bounds[0]),\n      Math.max(...bounds[1]),\n    ];\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(str);\n        return decoder.decode(buffer);\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n  // ISO Latin 1\n  const strBuf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const code = PDFStringTranslateTable[str.charCodeAt(i)];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationMode,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isSameOrigin,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  !globalThis._pdfjsCompatibilityChecked\n) {\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkDOMMatrix() {\n    if (globalThis.DOMMatrix || !isNodeJS) {\n      return;\n    }\n    globalThis.DOMMatrix = require(\"dommatrix/dist/dommatrix.js\");\n  })();\n\n  // Provides support for *recent* additions to the Promise specification,\n  // however basic Promise support is assumed to be available natively.\n  // Support: Firefox<71, Chrome<76, Safari<13, Node.js<12.9.0\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: Node.js\n  (function checkReadableStream() {\n    if (globalThis.ReadableStream || !isNodeJS) {\n      return;\n    }\n    globalThis.ReadableStream = __non_webpack_require__(\n      \"web-streams-polyfill/dist/ponyfill.js\"\n    ).ReadableStream;\n  })();\n\n  // Support: Firefox<94, Chrome<98, Safari<15.4, Node.js<17.0.0\n  (function checkStructuredClone() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `structuredClone`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.structuredClone) {\n      return;\n    }\n    require(\"core-js/web/structured-clone.js\");\n  })();\n}\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseException, shadow } from \"../shared/util.js\";\nimport { log2, readInt8, readUint16, readUint32 } from \"./core_utils.js\";\nimport { ArithmeticDecoder } from \"./arithmetic_decoder.js\";\nimport { CCITTFaxDecoder } from \"./ccitt.js\";\n\nclass Jbig2Error extends BaseException {\n  constructor(msg) {\n    super(`JBIG2 error: ${msg}`, \"Jbig2Error\");\n  }\n}\n\n// Utility data structures\nclass ContextCache {\n  getContexts(id) {\n    if (id in this) {\n      return this[id];\n    }\n    return (this[id] = new Int8Array(1 << 16));\n  }\n}\n\nclass DecodingContext {\n  constructor(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n\n  get decoder() {\n    const decoder = new ArithmeticDecoder(this.data, this.start, this.end);\n    return shadow(this, \"decoder\", decoder);\n  }\n\n  get contextCache() {\n    const cache = new ContextCache();\n    return shadow(this, \"contextCache\", cache);\n  }\n}\n\n// Annex A. Arithmetic Integer Decoding Procedure\n// A.2 Procedure for decoding values\nfunction decodeInteger(contextCache, procedure, decoder) {\n  const contexts = contextCache.getContexts(procedure);\n  let prev = 1;\n\n  function readBits(length) {\n    let v = 0;\n    for (let i = 0; i < length; i++) {\n      const bit = decoder.readBit(contexts, prev);\n      prev = prev < 256 ? (prev << 1) | bit : (((prev << 1) | bit) & 511) | 256;\n      v = (v << 1) | bit;\n    }\n    return v >>> 0;\n  }\n\n  const sign = readBits(1);\n  // prettier-ignore\n  /* eslint-disable no-nested-ternary */\n  const value = readBits(1) ?\n                  (readBits(1) ?\n                    (readBits(1) ?\n                      (readBits(1) ?\n                        (readBits(1) ?\n                          (readBits(32) + 4436) :\n                        readBits(12) + 340) :\n                      readBits(8) + 84) :\n                    readBits(6) + 20) :\n                  readBits(4) + 4) :\n                readBits(2);\n  /* eslint-enable no-nested-ternary */\n  if (sign === 0) {\n    return value;\n  } else if (value > 0) {\n    return -value;\n  }\n  return null;\n}\n\n// A.3 The IAID decoding procedure\nfunction decodeIAID(contextCache, decoder, codeLength) {\n  const contexts = contextCache.getContexts(\"IAID\");\n\n  let prev = 1;\n  for (let i = 0; i < codeLength; i++) {\n    const bit = decoder.readBit(contexts, prev);\n    prev = (prev << 1) | bit;\n  }\n  if (codeLength < 31) {\n    return prev & ((1 << codeLength) - 1);\n  }\n  return prev & 0x7fffffff;\n}\n\n// 7.3 Segment types\nconst SegmentTypes = [\n  \"SymbolDictionary\",\n  null,\n  null,\n  null,\n  \"IntermediateTextRegion\",\n  null,\n  \"ImmediateTextRegion\",\n  \"ImmediateLosslessTextRegion\",\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  \"PatternDictionary\",\n  null,\n  null,\n  null,\n  \"IntermediateHalftoneRegion\",\n  null,\n  \"ImmediateHalftoneRegion\",\n  \"ImmediateLosslessHalftoneRegion\",\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  \"IntermediateGenericRegion\",\n  null,\n  \"ImmediateGenericRegion\",\n  \"ImmediateLosslessGenericRegion\",\n  \"IntermediateGenericRefinementRegion\",\n  null,\n  \"ImmediateGenericRefinementRegion\",\n  \"ImmediateLosslessGenericRefinementRegion\",\n  null,\n  null,\n  null,\n  null,\n  \"PageInformation\",\n  \"EndOfPage\",\n  \"EndOfStripe\",\n  \"EndOfFile\",\n  \"Profiles\",\n  \"Tables\",\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  \"Extension\",\n];\n\nconst CodingTemplates = [\n  [\n    { x: -1, y: -2 },\n    { x: 0, y: -2 },\n    { x: 1, y: -2 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: 2, y: -1 },\n    { x: -4, y: 0 },\n    { x: -3, y: 0 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n  [\n    { x: -1, y: -2 },\n    { x: 0, y: -2 },\n    { x: 1, y: -2 },\n    { x: 2, y: -2 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: 2, y: -1 },\n    { x: -3, y: 0 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n  [\n    { x: -1, y: -2 },\n    { x: 0, y: -2 },\n    { x: 1, y: -2 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n  [\n    { x: -3, y: -1 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: -4, y: 0 },\n    { x: -3, y: 0 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n];\n\nconst RefinementTemplates = [\n  {\n    coding: [\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -1, y: 0 },\n    ],\n    reference: [\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -1, y: 0 },\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: -1, y: 1 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ],\n  },\n  {\n    coding: [\n      { x: -1, y: -1 },\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -1, y: 0 },\n    ],\n    reference: [\n      { x: 0, y: -1 },\n      { x: -1, y: 0 },\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ],\n  },\n];\n\n// See 6.2.5.7 Decoding the bitmap.\nconst ReusedContexts = [\n  0x9b25, // 10011 0110010 0101\n  0x0795, // 0011 110010 101\n  0x00e5, // 001 11001 01\n  0x0195, // 011001 0101\n];\n\nconst RefinementReusedContexts = [\n  0x0020, // '000' + '0' (coding) + '00010000' + '0' (reference)\n  0x0008, // '0000' + '001000'\n];\n\nfunction decodeBitmapTemplate0(width, height, decodingContext) {\n  const decoder = decodingContext.decoder;\n  const contexts = decodingContext.contextCache.getContexts(\"GB\");\n  const bitmap = [];\n  let contextLabel, i, j, pixel, row, row1, row2;\n\n  // ...ooooo....\n  // ..ooooooo... Context template for current pixel (X)\n  // .ooooX...... (concatenate values of 'o'-pixels to get contextLabel)\n  const OLD_PIXEL_MASK = 0x7bf7; // 01111 0111111 0111\n\n  for (i = 0; i < height; i++) {\n    row = bitmap[i] = new Uint8Array(width);\n    row1 = i < 1 ? row : bitmap[i - 1];\n    row2 = i < 2 ? row : bitmap[i - 2];\n\n    // At the beginning of each row:\n    // Fill contextLabel with pixels that are above/right of (X)\n    contextLabel =\n      (row2[0] << 13) |\n      (row2[1] << 12) |\n      (row2[2] << 11) |\n      (row1[0] << 7) |\n      (row1[1] << 6) |\n      (row1[2] << 5) |\n      (row1[3] << 4);\n\n    for (j = 0; j < width; j++) {\n      row[j] = pixel = decoder.readBit(contexts, contextLabel);\n\n      // At each pixel: Clear contextLabel pixels that are shifted\n      // out of the context, then add new ones.\n      contextLabel =\n        ((contextLabel & OLD_PIXEL_MASK) << 1) |\n        (j + 3 < width ? row2[j + 3] << 11 : 0) |\n        (j + 4 < width ? row1[j + 4] << 4 : 0) |\n        pixel;\n    }\n  }\n\n  return bitmap;\n}\n\n// 6.2 Generic Region Decoding Procedure\nfunction decodeBitmap(\n  mmr,\n  width,\n  height,\n  templateIndex,\n  prediction,\n  skip,\n  at,\n  decodingContext\n) {\n  if (mmr) {\n    const input = new Reader(\n      decodingContext.data,\n      decodingContext.start,\n      decodingContext.end\n    );\n    return decodeMMRBitmap(input, width, height, false);\n  }\n\n  // Use optimized version for the most common case\n  if (\n    templateIndex === 0 &&\n    !skip &&\n    !prediction &&\n    at.length === 4 &&\n    at[0].x === 3 &&\n    at[0].y === -1 &&\n    at[1].x === -3 &&\n    at[1].y === -1 &&\n    at[2].x === 2 &&\n    at[2].y === -2 &&\n    at[3].x === -2 &&\n    at[3].y === -2\n  ) {\n    return decodeBitmapTemplate0(width, height, decodingContext);\n  }\n\n  const useskip = !!skip;\n  const template = CodingTemplates[templateIndex].concat(at);\n\n  // Sorting is non-standard, and it is not required. But sorting increases\n  // the number of template bits that can be reused from the previous\n  // contextLabel in the main loop.\n  template.sort(function (a, b) {\n    return a.y - b.y || a.x - b.x;\n  });\n\n  const templateLength = template.length;\n  const templateX = new Int8Array(templateLength);\n  const templateY = new Int8Array(templateLength);\n  const changingTemplateEntries = [];\n  let reuseMask = 0,\n    minX = 0,\n    maxX = 0,\n    minY = 0;\n  let c, k;\n\n  for (k = 0; k < templateLength; k++) {\n    templateX[k] = template[k].x;\n    templateY[k] = template[k].y;\n    minX = Math.min(minX, template[k].x);\n    maxX = Math.max(maxX, template[k].x);\n    minY = Math.min(minY, template[k].y);\n    // Check if the template pixel appears in two consecutive context labels,\n    // so it can be reused. Otherwise, we add it to the list of changing\n    // template entries.\n    if (\n      k < templateLength - 1 &&\n      template[k].y === template[k + 1].y &&\n      template[k].x === template[k + 1].x - 1\n    ) {\n      reuseMask |= 1 << (templateLength - 1 - k);\n    } else {\n      changingTemplateEntries.push(k);\n    }\n  }\n  const changingEntriesLength = changingTemplateEntries.length;\n\n  const changingTemplateX = new Int8Array(changingEntriesLength);\n  const changingTemplateY = new Int8Array(changingEntriesLength);\n  const changingTemplateBit = new Uint16Array(changingEntriesLength);\n  for (c = 0; c < changingEntriesLength; c++) {\n    k = changingTemplateEntries[c];\n    changingTemplateX[c] = template[k].x;\n    changingTemplateY[c] = template[k].y;\n    changingTemplateBit[c] = 1 << (templateLength - 1 - k);\n  }\n\n  // Get the safe bounding box edges from the width, height, minX, maxX, minY\n  const sbb_left = -minX;\n  const sbb_top = -minY;\n  const sbb_right = width - maxX;\n\n  const pseudoPixelContext = ReusedContexts[templateIndex];\n  let row = new Uint8Array(width);\n  const bitmap = [];\n\n  const decoder = decodingContext.decoder;\n  const contexts = decodingContext.contextCache.getContexts(\"GB\");\n\n  let ltp = 0,\n    j,\n    i0,\n    j0,\n    contextLabel = 0,\n    bit,\n    shift;\n  for (let i = 0; i < height; i++) {\n    if (prediction) {\n      const sltp = decoder.readBit(contexts, pseudoPixelContext);\n      ltp ^= sltp;\n      if (ltp) {\n        bitmap.push(row); // duplicate previous row\n        continue;\n      }\n    }\n    row = new Uint8Array(row);\n    bitmap.push(row);\n    for (j = 0; j < width; j++) {\n      if (useskip && skip[i][j]) {\n        row[j] = 0;\n        continue;\n      }\n      // Are we in the middle of a scanline, so we can reuse contextLabel\n      // bits?\n      if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n        // If yes, we can just shift the bits that are reusable and only\n        // fetch the remaining ones.\n        contextLabel = (contextLabel << 1) & reuseMask;\n        for (k = 0; k < changingEntriesLength; k++) {\n          i0 = i + changingTemplateY[k];\n          j0 = j + changingTemplateX[k];\n          bit = bitmap[i0][j0];\n          if (bit) {\n            bit = changingTemplateBit[k];\n            contextLabel |= bit;\n          }\n        }\n      } else {\n        // compute the contextLabel from scratch\n        contextLabel = 0;\n        shift = templateLength - 1;\n        for (k = 0; k < templateLength; k++, shift--) {\n          j0 = j + templateX[k];\n          if (j0 >= 0 && j0 < width) {\n            i0 = i + templateY[k];\n            if (i0 >= 0) {\n              bit = bitmap[i0][j0];\n              if (bit) {\n                contextLabel |= bit << shift;\n              }\n            }\n          }\n        }\n      }\n      const pixel = decoder.readBit(contexts, contextLabel);\n      row[j] = pixel;\n    }\n  }\n  return bitmap;\n}\n\n// 6.3.2 Generic Refinement Region Decoding Procedure\nfunction decodeRefinement(\n  width,\n  height,\n  templateIndex,\n  referenceBitmap,\n  offsetX,\n  offsetY,\n  prediction,\n  at,\n  decodingContext\n) {\n  let codingTemplate = RefinementTemplates[templateIndex].coding;\n  if (templateIndex === 0) {\n    codingTemplate = codingTemplate.concat([at[0]]);\n  }\n  const codingTemplateLength = codingTemplate.length;\n  const codingTemplateX = new Int32Array(codingTemplateLength);\n  const codingTemplateY = new Int32Array(codingTemplateLength);\n  let k;\n  for (k = 0; k < codingTemplateLength; k++) {\n    codingTemplateX[k] = codingTemplate[k].x;\n    codingTemplateY[k] = codingTemplate[k].y;\n  }\n\n  let referenceTemplate = RefinementTemplates[templateIndex].reference;\n  if (templateIndex === 0) {\n    referenceTemplate = referenceTemplate.concat([at[1]]);\n  }\n  const referenceTemplateLength = referenceTemplate.length;\n  const referenceTemplateX = new Int32Array(referenceTemplateLength);\n  const referenceTemplateY = new Int32Array(referenceTemplateLength);\n  for (k = 0; k < referenceTemplateLength; k++) {\n    referenceTemplateX[k] = referenceTemplate[k].x;\n    referenceTemplateY[k] = referenceTemplate[k].y;\n  }\n  const referenceWidth = referenceBitmap[0].length;\n  const referenceHeight = referenceBitmap.length;\n\n  const pseudoPixelContext = RefinementReusedContexts[templateIndex];\n  const bitmap = [];\n\n  const decoder = decodingContext.decoder;\n  const contexts = decodingContext.contextCache.getContexts(\"GR\");\n\n  let ltp = 0;\n  for (let i = 0; i < height; i++) {\n    if (prediction) {\n      const sltp = decoder.readBit(contexts, pseudoPixelContext);\n      ltp ^= sltp;\n      if (ltp) {\n        throw new Jbig2Error(\"prediction is not supported\");\n      }\n    }\n    const row = new Uint8Array(width);\n    bitmap.push(row);\n    for (let j = 0; j < width; j++) {\n      let i0, j0;\n      let contextLabel = 0;\n      for (k = 0; k < codingTemplateLength; k++) {\n        i0 = i + codingTemplateY[k];\n        j0 = j + codingTemplateX[k];\n        if (i0 < 0 || j0 < 0 || j0 >= width) {\n          contextLabel <<= 1; // out of bound pixel\n        } else {\n          contextLabel = (contextLabel << 1) | bitmap[i0][j0];\n        }\n      }\n      for (k = 0; k < referenceTemplateLength; k++) {\n        i0 = i + referenceTemplateY[k] - offsetY;\n        j0 = j + referenceTemplateX[k] - offsetX;\n        if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n          contextLabel <<= 1; // out of bound pixel\n        } else {\n          contextLabel = (contextLabel << 1) | referenceBitmap[i0][j0];\n        }\n      }\n      const pixel = decoder.readBit(contexts, contextLabel);\n      row[j] = pixel;\n    }\n  }\n\n  return bitmap;\n}\n\n// 6.5.5 Decoding the symbol dictionary\nfunction decodeSymbolDictionary(\n  huffman,\n  refinement,\n  symbols,\n  numberOfNewSymbols,\n  numberOfExportedSymbols,\n  huffmanTables,\n  templateIndex,\n  at,\n  refinementTemplateIndex,\n  refinementAt,\n  decodingContext,\n  huffmanInput\n) {\n  if (huffman && refinement) {\n    throw new Jbig2Error(\"symbol refinement with Huffman is not supported\");\n  }\n\n  const newSymbols = [];\n  let currentHeight = 0;\n  let symbolCodeLength = log2(symbols.length + numberOfNewSymbols);\n\n  const decoder = decodingContext.decoder;\n  const contextCache = decodingContext.contextCache;\n  let tableB1, symbolWidths;\n  if (huffman) {\n    tableB1 = getStandardTable(1); // standard table B.1\n    symbolWidths = [];\n    symbolCodeLength = Math.max(symbolCodeLength, 1); // 6.5.8.2.3\n  }\n\n  while (newSymbols.length < numberOfNewSymbols) {\n    const deltaHeight = huffman\n      ? huffmanTables.tableDeltaHeight.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IADH\", decoder); // 6.5.6\n    currentHeight += deltaHeight;\n    let currentWidth = 0,\n      totalWidth = 0;\n    const firstSymbol = huffman ? symbolWidths.length : 0;\n    while (true) {\n      const deltaWidth = huffman\n        ? huffmanTables.tableDeltaWidth.decode(huffmanInput)\n        : decodeInteger(contextCache, \"IADW\", decoder); // 6.5.7\n      if (deltaWidth === null) {\n        break; // OOB\n      }\n      currentWidth += deltaWidth;\n      totalWidth += currentWidth;\n      let bitmap;\n      if (refinement) {\n        // 6.5.8.2 Refinement/aggregate-coded symbol bitmap\n        const numberOfInstances = decodeInteger(contextCache, \"IAAI\", decoder);\n        if (numberOfInstances > 1) {\n          bitmap = decodeTextRegion(\n            huffman,\n            refinement,\n            currentWidth,\n            currentHeight,\n            0,\n            numberOfInstances,\n            1, // strip size\n            symbols.concat(newSymbols),\n            symbolCodeLength,\n            0, // transposed\n            0, // ds offset\n            1, // top left 7.4.3.1.1\n            0, // OR operator\n            huffmanTables,\n            refinementTemplateIndex,\n            refinementAt,\n            decodingContext,\n            0,\n            huffmanInput\n          );\n        } else {\n          const symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n          const rdx = decodeInteger(contextCache, \"IARDX\", decoder); // 6.4.11.3\n          const rdy = decodeInteger(contextCache, \"IARDY\", decoder); // 6.4.11.4\n          const symbol =\n            symbolId < symbols.length\n              ? symbols[symbolId]\n              : newSymbols[symbolId - symbols.length];\n          bitmap = decodeRefinement(\n            currentWidth,\n            currentHeight,\n            refinementTemplateIndex,\n            symbol,\n            rdx,\n            rdy,\n            false,\n            refinementAt,\n            decodingContext\n          );\n        }\n        newSymbols.push(bitmap);\n      } else if (huffman) {\n        // Store only symbol width and decode a collective bitmap when the\n        // height class is done.\n        symbolWidths.push(currentWidth);\n      } else {\n        // 6.5.8.1 Direct-coded symbol bitmap\n        bitmap = decodeBitmap(\n          false,\n          currentWidth,\n          currentHeight,\n          templateIndex,\n          false,\n          null,\n          at,\n          decodingContext\n        );\n        newSymbols.push(bitmap);\n      }\n    }\n    if (huffman && !refinement) {\n      // 6.5.9 Height class collective bitmap\n      const bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n      huffmanInput.byteAlign();\n      let collectiveBitmap;\n      if (bitmapSize === 0) {\n        // Uncompressed collective bitmap\n        collectiveBitmap = readUncompressedBitmap(\n          huffmanInput,\n          totalWidth,\n          currentHeight\n        );\n      } else {\n        // MMR collective bitmap\n        const originalEnd = huffmanInput.end;\n        const bitmapEnd = huffmanInput.position + bitmapSize;\n        huffmanInput.end = bitmapEnd;\n        collectiveBitmap = decodeMMRBitmap(\n          huffmanInput,\n          totalWidth,\n          currentHeight,\n          false\n        );\n        huffmanInput.end = originalEnd;\n        huffmanInput.position = bitmapEnd;\n      }\n      const numberOfSymbolsDecoded = symbolWidths.length;\n      if (firstSymbol === numberOfSymbolsDecoded - 1) {\n        // collectiveBitmap is a single symbol.\n        newSymbols.push(collectiveBitmap);\n      } else {\n        // Divide collectiveBitmap into symbols.\n        let i,\n          y,\n          xMin = 0,\n          xMax,\n          bitmapWidth,\n          symbolBitmap;\n        for (i = firstSymbol; i < numberOfSymbolsDecoded; i++) {\n          bitmapWidth = symbolWidths[i];\n          xMax = xMin + bitmapWidth;\n          symbolBitmap = [];\n          for (y = 0; y < currentHeight; y++) {\n            symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n          }\n          newSymbols.push(symbolBitmap);\n          xMin = xMax;\n        }\n      }\n    }\n  }\n\n  // 6.5.10 Exported symbols\n  const exportedSymbols = [],\n    flags = [];\n  let currentFlag = false,\n    i,\n    ii;\n  const totalSymbolsLength = symbols.length + numberOfNewSymbols;\n  while (flags.length < totalSymbolsLength) {\n    let runLength = huffman\n      ? tableB1.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IAEX\", decoder);\n    while (runLength--) {\n      flags.push(currentFlag);\n    }\n    currentFlag = !currentFlag;\n  }\n  for (i = 0, ii = symbols.length; i < ii; i++) {\n    if (flags[i]) {\n      exportedSymbols.push(symbols[i]);\n    }\n  }\n  for (let j = 0; j < numberOfNewSymbols; i++, j++) {\n    if (flags[i]) {\n      exportedSymbols.push(newSymbols[j]);\n    }\n  }\n  return exportedSymbols;\n}\n\nfunction decodeTextRegion(\n  huffman,\n  refinement,\n  width,\n  height,\n  defaultPixelValue,\n  numberOfSymbolInstances,\n  stripSize,\n  inputSymbols,\n  symbolCodeLength,\n  transposed,\n  dsOffset,\n  referenceCorner,\n  combinationOperator,\n  huffmanTables,\n  refinementTemplateIndex,\n  refinementAt,\n  decodingContext,\n  logStripSize,\n  huffmanInput\n) {\n  if (huffman && refinement) {\n    throw new Jbig2Error(\"refinement with Huffman is not supported\");\n  }\n\n  // Prepare bitmap\n  const bitmap = [];\n  let i, row;\n  for (i = 0; i < height; i++) {\n    row = new Uint8Array(width);\n    if (defaultPixelValue) {\n      for (let j = 0; j < width; j++) {\n        row[j] = defaultPixelValue;\n      }\n    }\n    bitmap.push(row);\n  }\n\n  const decoder = decodingContext.decoder;\n  const contextCache = decodingContext.contextCache;\n\n  let stripT = huffman\n    ? -huffmanTables.tableDeltaT.decode(huffmanInput)\n    : -decodeInteger(contextCache, \"IADT\", decoder); // 6.4.6\n  let firstS = 0;\n  i = 0;\n  while (i < numberOfSymbolInstances) {\n    const deltaT = huffman\n      ? huffmanTables.tableDeltaT.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IADT\", decoder); // 6.4.6\n    stripT += deltaT;\n\n    const deltaFirstS = huffman\n      ? huffmanTables.tableFirstS.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IAFS\", decoder); // 6.4.7\n    firstS += deltaFirstS;\n    let currentS = firstS;\n    do {\n      let currentT = 0; // 6.4.9\n      if (stripSize > 1) {\n        currentT = huffman\n          ? huffmanInput.readBits(logStripSize)\n          : decodeInteger(contextCache, \"IAIT\", decoder);\n      }\n      const t = stripSize * stripT + currentT;\n      const symbolId = huffman\n        ? huffmanTables.symbolIDTable.decode(huffmanInput)\n        : decodeIAID(contextCache, decoder, symbolCodeLength);\n      const applyRefinement =\n        refinement &&\n        (huffman\n          ? huffmanInput.readBit()\n          : decodeInteger(contextCache, \"IARI\", decoder));\n      let symbolBitmap = inputSymbols[symbolId];\n      let symbolWidth = symbolBitmap[0].length;\n      let symbolHeight = symbolBitmap.length;\n      if (applyRefinement) {\n        const rdw = decodeInteger(contextCache, \"IARDW\", decoder); // 6.4.11.1\n        const rdh = decodeInteger(contextCache, \"IARDH\", decoder); // 6.4.11.2\n        const rdx = decodeInteger(contextCache, \"IARDX\", decoder); // 6.4.11.3\n        const rdy = decodeInteger(contextCache, \"IARDY\", decoder); // 6.4.11.4\n        symbolWidth += rdw;\n        symbolHeight += rdh;\n        symbolBitmap = decodeRefinement(\n          symbolWidth,\n          symbolHeight,\n          refinementTemplateIndex,\n          symbolBitmap,\n          (rdw >> 1) + rdx,\n          (rdh >> 1) + rdy,\n          false,\n          refinementAt,\n          decodingContext\n        );\n      }\n      const offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n      const offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n      let s2, t2, symbolRow;\n      if (transposed) {\n        // Place Symbol Bitmap from T1,S1\n        for (s2 = 0; s2 < symbolHeight; s2++) {\n          row = bitmap[offsetS + s2];\n          if (!row) {\n            continue;\n          }\n          symbolRow = symbolBitmap[s2];\n          // To ignore Parts of Symbol bitmap which goes\n          // outside bitmap region\n          const maxWidth = Math.min(width - offsetT, symbolWidth);\n          switch (combinationOperator) {\n            case 0: // OR\n              for (t2 = 0; t2 < maxWidth; t2++) {\n                row[offsetT + t2] |= symbolRow[t2];\n              }\n              break;\n            case 2: // XOR\n              for (t2 = 0; t2 < maxWidth; t2++) {\n                row[offsetT + t2] ^= symbolRow[t2];\n              }\n              break;\n            default:\n              throw new Jbig2Error(\n                `operator ${combinationOperator} is not supported`\n              );\n          }\n        }\n        currentS += symbolHeight - 1;\n      } else {\n        for (t2 = 0; t2 < symbolHeight; t2++) {\n          row = bitmap[offsetT + t2];\n          if (!row) {\n            continue;\n          }\n          symbolRow = symbolBitmap[t2];\n          switch (combinationOperator) {\n            case 0: // OR\n              for (s2 = 0; s2 < symbolWidth; s2++) {\n                row[offsetS + s2] |= symbolRow[s2];\n              }\n              break;\n            case 2: // XOR\n              for (s2 = 0; s2 < symbolWidth; s2++) {\n                row[offsetS + s2] ^= symbolRow[s2];\n              }\n              break;\n            default:\n              throw new Jbig2Error(\n                `operator ${combinationOperator} is not supported`\n              );\n          }\n        }\n        currentS += symbolWidth - 1;\n      }\n      i++;\n      const deltaS = huffman\n        ? huffmanTables.tableDeltaS.decode(huffmanInput)\n        : decodeInteger(contextCache, \"IADS\", decoder); // 6.4.8\n      if (deltaS === null) {\n        break; // OOB\n      }\n      currentS += deltaS + dsOffset;\n    } while (true);\n  }\n  return bitmap;\n}\n\nfunction decodePatternDictionary(\n  mmr,\n  patternWidth,\n  patternHeight,\n  maxPatternIndex,\n  template,\n  decodingContext\n) {\n  const at = [];\n  if (!mmr) {\n    at.push({\n      x: -patternWidth,\n      y: 0,\n    });\n    if (template === 0) {\n      at.push(\n        {\n          x: -3,\n          y: -1,\n        },\n        {\n          x: 2,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -2,\n        }\n      );\n    }\n  }\n  const collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n  const collectiveBitmap = decodeBitmap(\n    mmr,\n    collectiveWidth,\n    patternHeight,\n    template,\n    false,\n    null,\n    at,\n    decodingContext\n  );\n  // Divide collective bitmap into patterns.\n  const patterns = [];\n  for (let i = 0; i <= maxPatternIndex; i++) {\n    const patternBitmap = [];\n    const xMin = patternWidth * i;\n    const xMax = xMin + patternWidth;\n    for (let y = 0; y < patternHeight; y++) {\n      patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n    }\n    patterns.push(patternBitmap);\n  }\n  return patterns;\n}\n\nfunction decodeHalftoneRegion(\n  mmr,\n  patterns,\n  template,\n  regionWidth,\n  regionHeight,\n  defaultPixelValue,\n  enableSkip,\n  combinationOperator,\n  gridWidth,\n  gridHeight,\n  gridOffsetX,\n  gridOffsetY,\n  gridVectorX,\n  gridVectorY,\n  decodingContext\n) {\n  const skip = null;\n  if (enableSkip) {\n    throw new Jbig2Error(\"skip is not supported\");\n  }\n  if (combinationOperator !== 0) {\n    throw new Jbig2Error(\n      `operator \"${combinationOperator}\" is not supported in halftone region`\n    );\n  }\n\n  // Prepare bitmap.\n  const regionBitmap = [];\n  let i, j, row;\n  for (i = 0; i < regionHeight; i++) {\n    row = new Uint8Array(regionWidth);\n    if (defaultPixelValue) {\n      for (j = 0; j < regionWidth; j++) {\n        row[j] = defaultPixelValue;\n      }\n    }\n    regionBitmap.push(row);\n  }\n\n  const numberOfPatterns = patterns.length;\n  const pattern0 = patterns[0];\n  const patternWidth = pattern0[0].length,\n    patternHeight = pattern0.length;\n  const bitsPerValue = log2(numberOfPatterns);\n  const at = [];\n  if (!mmr) {\n    at.push({\n      x: template <= 1 ? 3 : 2,\n      y: -1,\n    });\n    if (template === 0) {\n      at.push(\n        {\n          x: -3,\n          y: -1,\n        },\n        {\n          x: 2,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -2,\n        }\n      );\n    }\n  }\n  // Annex C. Gray-scale Image Decoding Procedure.\n  const grayScaleBitPlanes = [];\n  let mmrInput, bitmap;\n  if (mmr) {\n    // MMR bit planes are in one continuous stream. Only EOFB codes indicate\n    // the end of each bitmap, so EOFBs must be decoded.\n    mmrInput = new Reader(\n      decodingContext.data,\n      decodingContext.start,\n      decodingContext.end\n    );\n  }\n  for (i = bitsPerValue - 1; i >= 0; i--) {\n    if (mmr) {\n      bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n    } else {\n      bitmap = decodeBitmap(\n        false,\n        gridWidth,\n        gridHeight,\n        template,\n        false,\n        skip,\n        at,\n        decodingContext\n      );\n    }\n    grayScaleBitPlanes[i] = bitmap;\n  }\n  // 6.6.5.2 Rendering the patterns.\n  let mg, ng, bit, patternIndex, patternBitmap, x, y, patternRow, regionRow;\n  for (mg = 0; mg < gridHeight; mg++) {\n    for (ng = 0; ng < gridWidth; ng++) {\n      bit = 0;\n      patternIndex = 0;\n      for (j = bitsPerValue - 1; j >= 0; j--) {\n        bit ^= grayScaleBitPlanes[j][mg][ng]; // Gray decoding\n        patternIndex |= bit << j;\n      }\n      patternBitmap = patterns[patternIndex];\n      x = (gridOffsetX + mg * gridVectorY + ng * gridVectorX) >> 8;\n      y = (gridOffsetY + mg * gridVectorX - ng * gridVectorY) >> 8;\n      // Draw patternBitmap at (x, y).\n      if (\n        x >= 0 &&\n        x + patternWidth <= regionWidth &&\n        y >= 0 &&\n        y + patternHeight <= regionHeight\n      ) {\n        for (i = 0; i < patternHeight; i++) {\n          regionRow = regionBitmap[y + i];\n          patternRow = patternBitmap[i];\n          for (j = 0; j < patternWidth; j++) {\n            regionRow[x + j] |= patternRow[j];\n          }\n        }\n      } else {\n        let regionX, regionY;\n        for (i = 0; i < patternHeight; i++) {\n          regionY = y + i;\n          if (regionY < 0 || regionY >= regionHeight) {\n            continue;\n          }\n          regionRow = regionBitmap[regionY];\n          patternRow = patternBitmap[i];\n          for (j = 0; j < patternWidth; j++) {\n            regionX = x + j;\n            if (regionX >= 0 && regionX < regionWidth) {\n              regionRow[regionX] |= patternRow[j];\n            }\n          }\n        }\n      }\n    }\n  }\n  return regionBitmap;\n}\n\nfunction readSegmentHeader(data, start) {\n  const segmentHeader = {};\n  segmentHeader.number = readUint32(data, start);\n  const flags = data[start + 4];\n  const segmentType = flags & 0x3f;\n  if (!SegmentTypes[segmentType]) {\n    throw new Jbig2Error(\"invalid segment type: \" + segmentType);\n  }\n  segmentHeader.type = segmentType;\n  segmentHeader.typeName = SegmentTypes[segmentType];\n  segmentHeader.deferredNonRetain = !!(flags & 0x80);\n\n  const pageAssociationFieldSize = !!(flags & 0x40);\n  const referredFlags = data[start + 5];\n  let referredToCount = (referredFlags >> 5) & 7;\n  const retainBits = [referredFlags & 31];\n  let position = start + 6;\n  if (referredFlags === 7) {\n    referredToCount = readUint32(data, position - 1) & 0x1fffffff;\n    position += 3;\n    let bytes = (referredToCount + 7) >> 3;\n    retainBits[0] = data[position++];\n    while (--bytes > 0) {\n      retainBits.push(data[position++]);\n    }\n  } else if (referredFlags === 5 || referredFlags === 6) {\n    throw new Jbig2Error(\"invalid referred-to flags\");\n  }\n\n  segmentHeader.retainBits = retainBits;\n\n  let referredToSegmentNumberSize = 4;\n  if (segmentHeader.number <= 256) {\n    referredToSegmentNumberSize = 1;\n  } else if (segmentHeader.number <= 65536) {\n    referredToSegmentNumberSize = 2;\n  }\n  const referredTo = [];\n  let i, ii;\n  for (i = 0; i < referredToCount; i++) {\n    let number;\n    if (referredToSegmentNumberSize === 1) {\n      number = data[position];\n    } else if (referredToSegmentNumberSize === 2) {\n      number = readUint16(data, position);\n    } else {\n      number = readUint32(data, position);\n    }\n    referredTo.push(number);\n    position += referredToSegmentNumberSize;\n  }\n  segmentHeader.referredTo = referredTo;\n  if (!pageAssociationFieldSize) {\n    segmentHeader.pageAssociation = data[position++];\n  } else {\n    segmentHeader.pageAssociation = readUint32(data, position);\n    position += 4;\n  }\n  segmentHeader.length = readUint32(data, position);\n  position += 4;\n\n  if (segmentHeader.length === 0xffffffff) {\n    // 7.2.7 Segment data length, unknown segment length\n    if (segmentType === 38) {\n      // ImmediateGenericRegion\n      const genericRegionInfo = readRegionSegmentInformation(data, position);\n      const genericRegionSegmentFlags =\n        data[position + RegionSegmentInformationFieldLength];\n      const genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n      // searching for the segment end\n      const searchPatternLength = 6;\n      const searchPattern = new Uint8Array(searchPatternLength);\n      if (!genericRegionMmr) {\n        searchPattern[0] = 0xff;\n        searchPattern[1] = 0xac;\n      }\n      searchPattern[2] = (genericRegionInfo.height >>> 24) & 0xff;\n      searchPattern[3] = (genericRegionInfo.height >> 16) & 0xff;\n      searchPattern[4] = (genericRegionInfo.height >> 8) & 0xff;\n      searchPattern[5] = genericRegionInfo.height & 0xff;\n      for (i = position, ii = data.length; i < ii; i++) {\n        let j = 0;\n        while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n          j++;\n        }\n        if (j === searchPatternLength) {\n          segmentHeader.length = i + searchPatternLength;\n          break;\n        }\n      }\n      if (segmentHeader.length === 0xffffffff) {\n        throw new Jbig2Error(\"segment end was not found\");\n      }\n    } else {\n      throw new Jbig2Error(\"invalid unknown segment length\");\n    }\n  }\n  segmentHeader.headerEnd = position;\n  return segmentHeader;\n}\n\nfunction readSegments(header, data, start, end) {\n  const segments = [];\n  let position = start;\n  while (position < end) {\n    const segmentHeader = readSegmentHeader(data, position);\n    position = segmentHeader.headerEnd;\n    const segment = {\n      header: segmentHeader,\n      data,\n    };\n    if (!header.randomAccess) {\n      segment.start = position;\n      position += segmentHeader.length;\n      segment.end = position;\n    }\n    segments.push(segment);\n    if (segmentHeader.type === 51) {\n      break; // end of file is found\n    }\n  }\n  if (header.randomAccess) {\n    for (let i = 0, ii = segments.length; i < ii; i++) {\n      segments[i].start = position;\n      position += segments[i].header.length;\n      segments[i].end = position;\n    }\n  }\n  return segments;\n}\n\n// 7.4.1 Region segment information field\nfunction readRegionSegmentInformation(data, start) {\n  return {\n    width: readUint32(data, start),\n    height: readUint32(data, start + 4),\n    x: readUint32(data, start + 8),\n    y: readUint32(data, start + 12),\n    combinationOperator: data[start + 16] & 7,\n  };\n}\nconst RegionSegmentInformationFieldLength = 17;\n\nfunction processSegment(segment, visitor) {\n  const header = segment.header;\n\n  const data = segment.data,\n    end = segment.end;\n  let position = segment.start;\n  let args, at, i, atLength;\n  switch (header.type) {\n    case 0: // SymbolDictionary\n      // 7.4.2 Symbol dictionary segment syntax\n      const dictionary = {};\n      const dictionaryFlags = readUint16(data, position); // 7.4.2.1.1\n      dictionary.huffman = !!(dictionaryFlags & 1);\n      dictionary.refinement = !!(dictionaryFlags & 2);\n      dictionary.huffmanDHSelector = (dictionaryFlags >> 2) & 3;\n      dictionary.huffmanDWSelector = (dictionaryFlags >> 4) & 3;\n      dictionary.bitmapSizeSelector = (dictionaryFlags >> 6) & 1;\n      dictionary.aggregationInstancesSelector = (dictionaryFlags >> 7) & 1;\n      dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n      dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n      dictionary.template = (dictionaryFlags >> 10) & 3;\n      dictionary.refinementTemplate = (dictionaryFlags >> 12) & 1;\n      position += 2;\n      if (!dictionary.huffman) {\n        atLength = dictionary.template === 0 ? 4 : 1;\n        at = [];\n        for (i = 0; i < atLength; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        dictionary.at = at;\n      }\n      if (dictionary.refinement && !dictionary.refinementTemplate) {\n        at = [];\n        for (i = 0; i < 2; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        dictionary.refinementAt = at;\n      }\n      dictionary.numberOfExportedSymbols = readUint32(data, position);\n      position += 4;\n      dictionary.numberOfNewSymbols = readUint32(data, position);\n      position += 4;\n      args = [\n        dictionary,\n        header.number,\n        header.referredTo,\n        data,\n        position,\n        end,\n      ];\n      break;\n    case 6: // ImmediateTextRegion\n    case 7: // ImmediateLosslessTextRegion\n      const textRegion = {};\n      textRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      const textRegionSegmentFlags = readUint16(data, position);\n      position += 2;\n      textRegion.huffman = !!(textRegionSegmentFlags & 1);\n      textRegion.refinement = !!(textRegionSegmentFlags & 2);\n      textRegion.logStripSize = (textRegionSegmentFlags >> 2) & 3;\n      textRegion.stripSize = 1 << textRegion.logStripSize;\n      textRegion.referenceCorner = (textRegionSegmentFlags >> 4) & 3;\n      textRegion.transposed = !!(textRegionSegmentFlags & 64);\n      textRegion.combinationOperator = (textRegionSegmentFlags >> 7) & 3;\n      textRegion.defaultPixelValue = (textRegionSegmentFlags >> 9) & 1;\n      textRegion.dsOffset = (textRegionSegmentFlags << 17) >> 27;\n      textRegion.refinementTemplate = (textRegionSegmentFlags >> 15) & 1;\n      if (textRegion.huffman) {\n        const textRegionHuffmanFlags = readUint16(data, position);\n        position += 2;\n        textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n        textRegion.huffmanDS = (textRegionHuffmanFlags >> 2) & 3;\n        textRegion.huffmanDT = (textRegionHuffmanFlags >> 4) & 3;\n        textRegion.huffmanRefinementDW = (textRegionHuffmanFlags >> 6) & 3;\n        textRegion.huffmanRefinementDH = (textRegionHuffmanFlags >> 8) & 3;\n        textRegion.huffmanRefinementDX = (textRegionHuffmanFlags >> 10) & 3;\n        textRegion.huffmanRefinementDY = (textRegionHuffmanFlags >> 12) & 3;\n        textRegion.huffmanRefinementSizeSelector = !!(\n          textRegionHuffmanFlags & 0x4000\n        );\n      }\n      if (textRegion.refinement && !textRegion.refinementTemplate) {\n        at = [];\n        for (i = 0; i < 2; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        textRegion.refinementAt = at;\n      }\n      textRegion.numberOfSymbolInstances = readUint32(data, position);\n      position += 4;\n      args = [textRegion, header.referredTo, data, position, end];\n      break;\n    case 16: // PatternDictionary\n      // 7.4.4. Pattern dictionary segment syntax\n      const patternDictionary = {};\n      const patternDictionaryFlags = data[position++];\n      patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n      patternDictionary.template = (patternDictionaryFlags >> 1) & 3;\n      patternDictionary.patternWidth = data[position++];\n      patternDictionary.patternHeight = data[position++];\n      patternDictionary.maxPatternIndex = readUint32(data, position);\n      position += 4;\n      args = [patternDictionary, header.number, data, position, end];\n      break;\n    case 22: // ImmediateHalftoneRegion\n    case 23: // ImmediateLosslessHalftoneRegion\n      // 7.4.5 Halftone region segment syntax\n      const halftoneRegion = {};\n      halftoneRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      const halftoneRegionFlags = data[position++];\n      halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n      halftoneRegion.template = (halftoneRegionFlags >> 1) & 3;\n      halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n      halftoneRegion.combinationOperator = (halftoneRegionFlags >> 4) & 7;\n      halftoneRegion.defaultPixelValue = (halftoneRegionFlags >> 7) & 1;\n      halftoneRegion.gridWidth = readUint32(data, position);\n      position += 4;\n      halftoneRegion.gridHeight = readUint32(data, position);\n      position += 4;\n      halftoneRegion.gridOffsetX = readUint32(data, position) & 0xffffffff;\n      position += 4;\n      halftoneRegion.gridOffsetY = readUint32(data, position) & 0xffffffff;\n      position += 4;\n      halftoneRegion.gridVectorX = readUint16(data, position);\n      position += 2;\n      halftoneRegion.gridVectorY = readUint16(data, position);\n      position += 2;\n      args = [halftoneRegion, header.referredTo, data, position, end];\n      break;\n    case 38: // ImmediateGenericRegion\n    case 39: // ImmediateLosslessGenericRegion\n      const genericRegion = {};\n      genericRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      const genericRegionSegmentFlags = data[position++];\n      genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n      genericRegion.template = (genericRegionSegmentFlags >> 1) & 3;\n      genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n      if (!genericRegion.mmr) {\n        atLength = genericRegion.template === 0 ? 4 : 1;\n        at = [];\n        for (i = 0; i < atLength; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        genericRegion.at = at;\n      }\n      args = [genericRegion, data, position, end];\n      break;\n    case 48: // PageInformation\n      const pageInfo = {\n        width: readUint32(data, position),\n        height: readUint32(data, position + 4),\n        resolutionX: readUint32(data, position + 8),\n        resolutionY: readUint32(data, position + 12),\n      };\n      if (pageInfo.height === 0xffffffff) {\n        delete pageInfo.height;\n      }\n      const pageSegmentFlags = data[position + 16];\n      readUint16(data, position + 17); // pageStripingInformation\n      pageInfo.lossless = !!(pageSegmentFlags & 1);\n      pageInfo.refinement = !!(pageSegmentFlags & 2);\n      pageInfo.defaultPixelValue = (pageSegmentFlags >> 2) & 1;\n      pageInfo.combinationOperator = (pageSegmentFlags >> 3) & 3;\n      pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n      pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n      args = [pageInfo];\n      break;\n    case 49: // EndOfPage\n      break;\n    case 50: // EndOfStripe\n      break;\n    case 51: // EndOfFile\n      break;\n    case 53: // Tables\n      args = [header.number, data, position, end];\n      break;\n    case 62: // 7.4.15 defines 2 extension types which\n      // are comments and can be ignored.\n      break;\n    default:\n      throw new Jbig2Error(\n        `segment type ${header.typeName}(${header.type})` +\n          \" is not implemented\"\n      );\n  }\n  const callbackName = \"on\" + header.typeName;\n  if (callbackName in visitor) {\n    visitor[callbackName].apply(visitor, args);\n  }\n}\n\nfunction processSegments(segments, visitor) {\n  for (let i = 0, ii = segments.length; i < ii; i++) {\n    processSegment(segments[i], visitor);\n  }\n}\n\nfunction parseJbig2Chunks(chunks) {\n  const visitor = new SimpleSegmentVisitor();\n  for (let i = 0, ii = chunks.length; i < ii; i++) {\n    const chunk = chunks[i];\n    const segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n    processSegments(segments, visitor);\n  }\n  return visitor.buffer;\n}\n\nfunction parseJbig2(data) {\n  const end = data.length;\n  let position = 0;\n\n  if (\n    data[position] !== 0x97 ||\n    data[position + 1] !== 0x4a ||\n    data[position + 2] !== 0x42 ||\n    data[position + 3] !== 0x32 ||\n    data[position + 4] !== 0x0d ||\n    data[position + 5] !== 0x0a ||\n    data[position + 6] !== 0x1a ||\n    data[position + 7] !== 0x0a\n  ) {\n    throw new Jbig2Error(\"parseJbig2 - invalid header.\");\n  }\n\n  const header = Object.create(null);\n  position += 8;\n  const flags = data[position++];\n  header.randomAccess = !(flags & 1);\n  if (!(flags & 2)) {\n    header.numberOfPages = readUint32(data, position);\n    position += 4;\n  }\n\n  const segments = readSegments(header, data, position, end);\n  const visitor = new SimpleSegmentVisitor();\n  processSegments(segments, visitor);\n\n  const { width, height } = visitor.currentPageInfo;\n  const bitPacked = visitor.buffer;\n  const imgData = new Uint8ClampedArray(width * height);\n  let q = 0,\n    k = 0;\n  for (let i = 0; i < height; i++) {\n    let mask = 0,\n      buffer;\n    for (let j = 0; j < width; j++) {\n      if (!mask) {\n        mask = 128;\n        buffer = bitPacked[k++];\n      }\n      imgData[q++] = buffer & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  return { imgData, width, height };\n}\n\nclass SimpleSegmentVisitor {\n  onPageInformation(info) {\n    this.currentPageInfo = info;\n    const rowSize = (info.width + 7) >> 3;\n    const buffer = new Uint8ClampedArray(rowSize * info.height);\n    // The contents of ArrayBuffers are initialized to 0.\n    // Fill the buffer with 0xFF only if info.defaultPixelValue is set\n    if (info.defaultPixelValue) {\n      for (let i = 0, ii = buffer.length; i < ii; i++) {\n        buffer[i] = 0xff;\n      }\n    }\n    this.buffer = buffer;\n  }\n\n  drawBitmap(regionInfo, bitmap) {\n    const pageInfo = this.currentPageInfo;\n    const width = regionInfo.width,\n      height = regionInfo.height;\n    const rowSize = (pageInfo.width + 7) >> 3;\n    const combinationOperator = pageInfo.combinationOperatorOverride\n      ? regionInfo.combinationOperator\n      : pageInfo.combinationOperator;\n    const buffer = this.buffer;\n    const mask0 = 128 >> (regionInfo.x & 7);\n    let offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n    let i, j, mask, offset;\n    switch (combinationOperator) {\n      case 0: // OR\n        for (i = 0; i < height; i++) {\n          mask = mask0;\n          offset = offset0;\n          for (j = 0; j < width; j++) {\n            if (bitmap[i][j]) {\n              buffer[offset] |= mask;\n            }\n            mask >>= 1;\n            if (!mask) {\n              mask = 128;\n              offset++;\n            }\n          }\n          offset0 += rowSize;\n        }\n        break;\n      case 2: // XOR\n        for (i = 0; i < height; i++) {\n          mask = mask0;\n          offset = offset0;\n          for (j = 0; j < width; j++) {\n            if (bitmap[i][j]) {\n              buffer[offset] ^= mask;\n            }\n            mask >>= 1;\n            if (!mask) {\n              mask = 128;\n              offset++;\n            }\n          }\n          offset0 += rowSize;\n        }\n        break;\n      default:\n        throw new Jbig2Error(\n          `operator ${combinationOperator} is not supported`\n        );\n    }\n  }\n\n  onImmediateGenericRegion(region, data, start, end) {\n    const regionInfo = region.info;\n    const decodingContext = new DecodingContext(data, start, end);\n    const bitmap = decodeBitmap(\n      region.mmr,\n      regionInfo.width,\n      regionInfo.height,\n      region.template,\n      region.prediction,\n      null,\n      region.at,\n      decodingContext\n    );\n    this.drawBitmap(regionInfo, bitmap);\n  }\n\n  onImmediateLosslessGenericRegion() {\n    this.onImmediateGenericRegion.apply(this, arguments);\n  }\n\n  onSymbolDictionary(\n    dictionary,\n    currentSegment,\n    referredSegments,\n    data,\n    start,\n    end\n  ) {\n    let huffmanTables, huffmanInput;\n    if (dictionary.huffman) {\n      huffmanTables = getSymbolDictionaryHuffmanTables(\n        dictionary,\n        referredSegments,\n        this.customTables\n      );\n      huffmanInput = new Reader(data, start, end);\n    }\n\n    // Combines exported symbols from all referred segments\n    let symbols = this.symbols;\n    if (!symbols) {\n      this.symbols = symbols = {};\n    }\n\n    let inputSymbols = [];\n    for (let i = 0, ii = referredSegments.length; i < ii; i++) {\n      const referredSymbols = symbols[referredSegments[i]];\n      // referredSymbols is undefined when we have a reference to a Tables\n      // segment instead of a SymbolDictionary.\n      if (referredSymbols) {\n        inputSymbols = inputSymbols.concat(referredSymbols);\n      }\n    }\n\n    const decodingContext = new DecodingContext(data, start, end);\n    symbols[currentSegment] = decodeSymbolDictionary(\n      dictionary.huffman,\n      dictionary.refinement,\n      inputSymbols,\n      dictionary.numberOfNewSymbols,\n      dictionary.numberOfExportedSymbols,\n      huffmanTables,\n      dictionary.template,\n      dictionary.at,\n      dictionary.refinementTemplate,\n      dictionary.refinementAt,\n      decodingContext,\n      huffmanInput\n    );\n  }\n\n  onImmediateTextRegion(region, referredSegments, data, start, end) {\n    const regionInfo = region.info;\n    let huffmanTables, huffmanInput;\n\n    // Combines exported symbols from all referred segments\n    const symbols = this.symbols;\n    let inputSymbols = [];\n    for (let i = 0, ii = referredSegments.length; i < ii; i++) {\n      const referredSymbols = symbols[referredSegments[i]];\n      // referredSymbols is undefined when we have a reference to a Tables\n      // segment instead of a SymbolDictionary.\n      if (referredSymbols) {\n        inputSymbols = inputSymbols.concat(referredSymbols);\n      }\n    }\n    const symbolCodeLength = log2(inputSymbols.length);\n    if (region.huffman) {\n      huffmanInput = new Reader(data, start, end);\n      huffmanTables = getTextRegionHuffmanTables(\n        region,\n        referredSegments,\n        this.customTables,\n        inputSymbols.length,\n        huffmanInput\n      );\n    }\n\n    const decodingContext = new DecodingContext(data, start, end);\n    const bitmap = decodeTextRegion(\n      region.huffman,\n      region.refinement,\n      regionInfo.width,\n      regionInfo.height,\n      region.defaultPixelValue,\n      region.numberOfSymbolInstances,\n      region.stripSize,\n      inputSymbols,\n      symbolCodeLength,\n      region.transposed,\n      region.dsOffset,\n      region.referenceCorner,\n      region.combinationOperator,\n      huffmanTables,\n      region.refinementTemplate,\n      region.refinementAt,\n      decodingContext,\n      region.logStripSize,\n      huffmanInput\n    );\n    this.drawBitmap(regionInfo, bitmap);\n  }\n\n  onImmediateLosslessTextRegion() {\n    this.onImmediateTextRegion.apply(this, arguments);\n  }\n\n  onPatternDictionary(dictionary, currentSegment, data, start, end) {\n    let patterns = this.patterns;\n    if (!patterns) {\n      this.patterns = patterns = {};\n    }\n    const decodingContext = new DecodingContext(data, start, end);\n    patterns[currentSegment] = decodePatternDictionary(\n      dictionary.mmr,\n      dictionary.patternWidth,\n      dictionary.patternHeight,\n      dictionary.maxPatternIndex,\n      dictionary.template,\n      decodingContext\n    );\n  }\n\n  onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n    // HalftoneRegion refers to exactly one PatternDictionary.\n    const patterns = this.patterns[referredSegments[0]];\n    const regionInfo = region.info;\n    const decodingContext = new DecodingContext(data, start, end);\n    const bitmap = decodeHalftoneRegion(\n      region.mmr,\n      patterns,\n      region.template,\n      regionInfo.width,\n      regionInfo.height,\n      region.defaultPixelValue,\n      region.enableSkip,\n      region.combinationOperator,\n      region.gridWidth,\n      region.gridHeight,\n      region.gridOffsetX,\n      region.gridOffsetY,\n      region.gridVectorX,\n      region.gridVectorY,\n      decodingContext\n    );\n    this.drawBitmap(regionInfo, bitmap);\n  }\n\n  onImmediateLosslessHalftoneRegion() {\n    this.onImmediateHalftoneRegion.apply(this, arguments);\n  }\n\n  onTables(currentSegment, data, start, end) {\n    let customTables = this.customTables;\n    if (!customTables) {\n      this.customTables = customTables = {};\n    }\n    customTables[currentSegment] = decodeTablesSegment(data, start, end);\n  }\n}\n\nclass HuffmanLine {\n  constructor(lineData) {\n    if (lineData.length === 2) {\n      // OOB line.\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      // Normal, upper range or lower range line.\n      // Upper range lines are processed like normal lines.\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === \"lower\";\n    }\n  }\n}\n\nclass HuffmanTreeNode {\n  constructor(line) {\n    this.children = [];\n    if (line) {\n      // Leaf node\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      // Intermediate or root node\n      this.isLeaf = false;\n    }\n  }\n\n  buildTree(line, shift) {\n    const bit = (line.prefixCode >> shift) & 1;\n    if (shift <= 0) {\n      // Create a leaf node.\n      this.children[bit] = new HuffmanTreeNode(line);\n    } else {\n      // Create an intermediate node and continue recursively.\n      let node = this.children[bit];\n      if (!node) {\n        this.children[bit] = node = new HuffmanTreeNode(null);\n      }\n      node.buildTree(line, shift - 1);\n    }\n  }\n\n  decodeNode(reader) {\n    if (this.isLeaf) {\n      if (this.isOOB) {\n        return null;\n      }\n      const htOffset = reader.readBits(this.rangeLength);\n      return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n    }\n    const node = this.children[reader.readBit()];\n    if (!node) {\n      throw new Jbig2Error(\"invalid Huffman data\");\n    }\n    return node.decodeNode(reader);\n  }\n}\n\nclass HuffmanTable {\n  constructor(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    // Create Huffman tree.\n    this.rootNode = new HuffmanTreeNode(null);\n    for (let i = 0, ii = lines.length; i < ii; i++) {\n      const line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n\n  decode(reader) {\n    return this.rootNode.decodeNode(reader);\n  }\n\n  assignPrefixCodes(lines) {\n    // Annex B.3 Assigning the prefix codes.\n    const linesLength = lines.length;\n    let prefixLengthMax = 0;\n    for (let i = 0; i < linesLength; i++) {\n      prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n    }\n\n    const histogram = new Uint32Array(prefixLengthMax + 1);\n    for (let i = 0; i < linesLength; i++) {\n      histogram[lines[i].prefixLength]++;\n    }\n    let currentLength = 1,\n      firstCode = 0,\n      currentCode,\n      currentTemp,\n      line;\n    histogram[0] = 0;\n\n    while (currentLength <= prefixLengthMax) {\n      firstCode = (firstCode + histogram[currentLength - 1]) << 1;\n      currentCode = firstCode;\n      currentTemp = 0;\n      while (currentTemp < linesLength) {\n        line = lines[currentTemp];\n        if (line.prefixLength === currentLength) {\n          line.prefixCode = currentCode;\n          currentCode++;\n        }\n        currentTemp++;\n      }\n      currentLength++;\n    }\n  }\n}\n\nfunction decodeTablesSegment(data, start, end) {\n  // Decodes a Tables segment, i.e., a custom Huffman table.\n  // Annex B.2 Code table structure.\n  const flags = data[start];\n  const lowestValue = readUint32(data, start + 1) & 0xffffffff;\n  const highestValue = readUint32(data, start + 5) & 0xffffffff;\n  const reader = new Reader(data, start + 9, end);\n\n  const prefixSizeBits = ((flags >> 1) & 7) + 1;\n  const rangeSizeBits = ((flags >> 4) & 7) + 1;\n  const lines = [];\n  let prefixLength,\n    rangeLength,\n    currentRangeLow = lowestValue;\n\n  // Normal table lines\n  do {\n    prefixLength = reader.readBits(prefixSizeBits);\n    rangeLength = reader.readBits(rangeSizeBits);\n    lines.push(\n      new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0])\n    );\n    currentRangeLow += 1 << rangeLength;\n  } while (currentRangeLow < highestValue);\n\n  // Lower range table line\n  prefixLength = reader.readBits(prefixSizeBits);\n  lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, \"lower\"]));\n\n  // Upper range table line\n  prefixLength = reader.readBits(prefixSizeBits);\n  lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n\n  if (flags & 1) {\n    // Out-of-band table line\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([prefixLength, 0]));\n  }\n\n  return new HuffmanTable(lines, false);\n}\n\nconst standardTablesCache = {};\n\nfunction getStandardTable(number) {\n  // Annex B.5 Standard Huffman tables.\n  let table = standardTablesCache[number];\n  if (table) {\n    return table;\n  }\n  let lines;\n  switch (number) {\n    case 1:\n      lines = [\n        [0, 1, 4, 0x0],\n        [16, 2, 8, 0x2],\n        [272, 3, 16, 0x6],\n        [65808, 3, 32, 0x7], // upper\n      ];\n      break;\n    case 2:\n      lines = [\n        [0, 1, 0, 0x0],\n        [1, 2, 0, 0x2],\n        [2, 3, 0, 0x6],\n        [3, 4, 3, 0xe],\n        [11, 5, 6, 0x1e],\n        [75, 6, 32, 0x3e], // upper\n        [6, 0x3f], // OOB\n      ];\n      break;\n    case 3:\n      lines = [\n        [-256, 8, 8, 0xfe],\n        [0, 1, 0, 0x0],\n        [1, 2, 0, 0x2],\n        [2, 3, 0, 0x6],\n        [3, 4, 3, 0xe],\n        [11, 5, 6, 0x1e],\n        [-257, 8, 32, 0xff, \"lower\"],\n        [75, 7, 32, 0x7e], // upper\n        [6, 0x3e], // OOB\n      ];\n      break;\n    case 4:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 2, 0, 0x2],\n        [3, 3, 0, 0x6],\n        [4, 4, 3, 0xe],\n        [12, 5, 6, 0x1e],\n        [76, 5, 32, 0x1f], // upper\n      ];\n      break;\n    case 5:\n      lines = [\n        [-255, 7, 8, 0x7e],\n        [1, 1, 0, 0x0],\n        [2, 2, 0, 0x2],\n        [3, 3, 0, 0x6],\n        [4, 4, 3, 0xe],\n        [12, 5, 6, 0x1e],\n        [-256, 7, 32, 0x7f, \"lower\"],\n        [76, 6, 32, 0x3e], // upper\n      ];\n      break;\n    case 6:\n      lines = [\n        [-2048, 5, 10, 0x1c],\n        [-1024, 4, 9, 0x8],\n        [-512, 4, 8, 0x9],\n        [-256, 4, 7, 0xa],\n        [-128, 5, 6, 0x1d],\n        [-64, 5, 5, 0x1e],\n        [-32, 4, 5, 0xb],\n        [0, 2, 7, 0x0],\n        [128, 3, 7, 0x2],\n        [256, 3, 8, 0x3],\n        [512, 4, 9, 0xc],\n        [1024, 4, 10, 0xd],\n        [-2049, 6, 32, 0x3e, \"lower\"],\n        [2048, 6, 32, 0x3f], // upper\n      ];\n      break;\n    case 7:\n      lines = [\n        [-1024, 4, 9, 0x8],\n        [-512, 3, 8, 0x0],\n        [-256, 4, 7, 0x9],\n        [-128, 5, 6, 0x1a],\n        [-64, 5, 5, 0x1b],\n        [-32, 4, 5, 0xa],\n        [0, 4, 5, 0xb],\n        [32, 5, 5, 0x1c],\n        [64, 5, 6, 0x1d],\n        [128, 4, 7, 0xc],\n        [256, 3, 8, 0x1],\n        [512, 3, 9, 0x2],\n        [1024, 3, 10, 0x3],\n        [-1025, 5, 32, 0x1e, \"lower\"],\n        [2048, 5, 32, 0x1f], // upper\n      ];\n      break;\n    case 8:\n      lines = [\n        [-15, 8, 3, 0xfc],\n        [-7, 9, 1, 0x1fc],\n        [-5, 8, 1, 0xfd],\n        [-3, 9, 0, 0x1fd],\n        [-2, 7, 0, 0x7c],\n        [-1, 4, 0, 0xa],\n        [0, 2, 1, 0x0],\n        [2, 5, 0, 0x1a],\n        [3, 6, 0, 0x3a],\n        [4, 3, 4, 0x4],\n        [20, 6, 1, 0x3b],\n        [22, 4, 4, 0xb],\n        [38, 4, 5, 0xc],\n        [70, 5, 6, 0x1b],\n        [134, 5, 7, 0x1c],\n        [262, 6, 7, 0x3c],\n        [390, 7, 8, 0x7d],\n        [646, 6, 10, 0x3d],\n        [-16, 9, 32, 0x1fe, \"lower\"],\n        [1670, 9, 32, 0x1ff], // upper\n        [2, 0x1], // OOB\n      ];\n      break;\n    case 9:\n      lines = [\n        [-31, 8, 4, 0xfc],\n        [-15, 9, 2, 0x1fc],\n        [-11, 8, 2, 0xfd],\n        [-7, 9, 1, 0x1fd],\n        [-5, 7, 1, 0x7c],\n        [-3, 4, 1, 0xa],\n        [-1, 3, 1, 0x2],\n        [1, 3, 1, 0x3],\n        [3, 5, 1, 0x1a],\n        [5, 6, 1, 0x3a],\n        [7, 3, 5, 0x4],\n        [39, 6, 2, 0x3b],\n        [43, 4, 5, 0xb],\n        [75, 4, 6, 0xc],\n        [139, 5, 7, 0x1b],\n        [267, 5, 8, 0x1c],\n        [523, 6, 8, 0x3c],\n        [779, 7, 9, 0x7d],\n        [1291, 6, 11, 0x3d],\n        [-32, 9, 32, 0x1fe, \"lower\"],\n        [3339, 9, 32, 0x1ff], // upper\n        [2, 0x0], // OOB\n      ];\n      break;\n    case 10:\n      lines = [\n        [-21, 7, 4, 0x7a],\n        [-5, 8, 0, 0xfc],\n        [-4, 7, 0, 0x7b],\n        [-3, 5, 0, 0x18],\n        [-2, 2, 2, 0x0],\n        [2, 5, 0, 0x19],\n        [3, 6, 0, 0x36],\n        [4, 7, 0, 0x7c],\n        [5, 8, 0, 0xfd],\n        [6, 2, 6, 0x1],\n        [70, 5, 5, 0x1a],\n        [102, 6, 5, 0x37],\n        [134, 6, 6, 0x38],\n        [198, 6, 7, 0x39],\n        [326, 6, 8, 0x3a],\n        [582, 6, 9, 0x3b],\n        [1094, 6, 10, 0x3c],\n        [2118, 7, 11, 0x7d],\n        [-22, 8, 32, 0xfe, \"lower\"],\n        [4166, 8, 32, 0xff], // upper\n        [2, 0x2], // OOB\n      ];\n      break;\n    case 11:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 2, 1, 0x2],\n        [4, 4, 0, 0xc],\n        [5, 4, 1, 0xd],\n        [7, 5, 1, 0x1c],\n        [9, 5, 2, 0x1d],\n        [13, 6, 2, 0x3c],\n        [17, 7, 2, 0x7a],\n        [21, 7, 3, 0x7b],\n        [29, 7, 4, 0x7c],\n        [45, 7, 5, 0x7d],\n        [77, 7, 6, 0x7e],\n        [141, 7, 32, 0x7f], // upper\n      ];\n      break;\n    case 12:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 2, 0, 0x2],\n        [3, 3, 1, 0x6],\n        [5, 5, 0, 0x1c],\n        [6, 5, 1, 0x1d],\n        [8, 6, 1, 0x3c],\n        [10, 7, 0, 0x7a],\n        [11, 7, 1, 0x7b],\n        [13, 7, 2, 0x7c],\n        [17, 7, 3, 0x7d],\n        [25, 7, 4, 0x7e],\n        [41, 8, 5, 0xfe],\n        [73, 8, 32, 0xff], // upper\n      ];\n      break;\n    case 13:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 3, 0, 0x4],\n        [3, 4, 0, 0xc],\n        [4, 5, 0, 0x1c],\n        [5, 4, 1, 0xd],\n        [7, 3, 3, 0x5],\n        [15, 6, 1, 0x3a],\n        [17, 6, 2, 0x3b],\n        [21, 6, 3, 0x3c],\n        [29, 6, 4, 0x3d],\n        [45, 6, 5, 0x3e],\n        [77, 7, 6, 0x7e],\n        [141, 7, 32, 0x7f], // upper\n      ];\n      break;\n    case 14:\n      lines = [\n        [-2, 3, 0, 0x4],\n        [-1, 3, 0, 0x5],\n        [0, 1, 0, 0x0],\n        [1, 3, 0, 0x6],\n        [2, 3, 0, 0x7],\n      ];\n      break;\n    case 15:\n      lines = [\n        [-24, 7, 4, 0x7c],\n        [-8, 6, 2, 0x3c],\n        [-4, 5, 1, 0x1c],\n        [-2, 4, 0, 0xc],\n        [-1, 3, 0, 0x4],\n        [0, 1, 0, 0x0],\n        [1, 3, 0, 0x5],\n        [2, 4, 0, 0xd],\n        [3, 5, 1, 0x1d],\n        [5, 6, 2, 0x3d],\n        [9, 7, 4, 0x7d],\n        [-25, 7, 32, 0x7e, \"lower\"],\n        [25, 7, 32, 0x7f], // upper\n      ];\n      break;\n    default:\n      throw new Jbig2Error(`standard table B.${number} does not exist`);\n  }\n\n  for (let i = 0, ii = lines.length; i < ii; i++) {\n    lines[i] = new HuffmanLine(lines[i]);\n  }\n  table = new HuffmanTable(lines, true);\n  standardTablesCache[number] = table;\n  return table;\n}\n\nclass Reader {\n  constructor(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n\n  readBit() {\n    if (this.shift < 0) {\n      if (this.position >= this.end) {\n        throw new Jbig2Error(\"end of data while reading bit\");\n      }\n      this.currentByte = this.data[this.position++];\n      this.shift = 7;\n    }\n    const bit = (this.currentByte >> this.shift) & 1;\n    this.shift--;\n    return bit;\n  }\n\n  readBits(numBits) {\n    let result = 0,\n      i;\n    for (i = numBits - 1; i >= 0; i--) {\n      result |= this.readBit() << i;\n    }\n    return result;\n  }\n\n  byteAlign() {\n    this.shift = -1;\n  }\n\n  next() {\n    if (this.position >= this.end) {\n      return -1;\n    }\n    return this.data[this.position++];\n  }\n}\n\nfunction getCustomHuffmanTable(index, referredTo, customTables) {\n  // Returns a Tables segment that has been earlier decoded.\n  // See 7.4.2.1.6 (symbol dictionary) or 7.4.3.1.6 (text region).\n  let currentIndex = 0;\n  for (let i = 0, ii = referredTo.length; i < ii; i++) {\n    const table = customTables[referredTo[i]];\n    if (table) {\n      if (index === currentIndex) {\n        return table;\n      }\n      currentIndex++;\n    }\n  }\n  throw new Jbig2Error(\"can't find custom Huffman table\");\n}\n\nfunction getTextRegionHuffmanTables(\n  textRegion,\n  referredTo,\n  customTables,\n  numberOfSymbols,\n  reader\n) {\n  // 7.4.3.1.7 Symbol ID Huffman table decoding\n\n  // Read code lengths for RUNCODEs 0...34.\n  const codes = [];\n  for (let i = 0; i <= 34; i++) {\n    const codeLength = reader.readBits(4);\n    codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n  }\n  // Assign Huffman codes for RUNCODEs.\n  const runCodesTable = new HuffmanTable(codes, false);\n\n  // Read a Huffman code using the assignment above.\n  // Interpret the RUNCODE codes and the additional bits (if any).\n  codes.length = 0;\n  for (let i = 0; i < numberOfSymbols; ) {\n    const codeLength = runCodesTable.decode(reader);\n    if (codeLength >= 32) {\n      let repeatedLength, numberOfRepeats, j;\n      switch (codeLength) {\n        case 32:\n          if (i === 0) {\n            throw new Jbig2Error(\"no previous value in symbol ID table\");\n          }\n          numberOfRepeats = reader.readBits(2) + 3;\n          repeatedLength = codes[i - 1].prefixLength;\n          break;\n        case 33:\n          numberOfRepeats = reader.readBits(3) + 3;\n          repeatedLength = 0;\n          break;\n        case 34:\n          numberOfRepeats = reader.readBits(7) + 11;\n          repeatedLength = 0;\n          break;\n        default:\n          throw new Jbig2Error(\"invalid code length in symbol ID table\");\n      }\n      for (j = 0; j < numberOfRepeats; j++) {\n        codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n        i++;\n      }\n    } else {\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n      i++;\n    }\n  }\n  reader.byteAlign();\n  const symbolIDTable = new HuffmanTable(codes, false);\n\n  // 7.4.3.1.6 Text region segment Huffman table selection\n\n  let customIndex = 0,\n    tableFirstS,\n    tableDeltaS,\n    tableDeltaT;\n\n  switch (textRegion.huffmanFS) {\n    case 0:\n    case 1:\n      tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n      break;\n    case 3:\n      tableFirstS = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman FS selector\");\n  }\n\n  switch (textRegion.huffmanDS) {\n    case 0:\n    case 1:\n    case 2:\n      tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n      break;\n    case 3:\n      tableDeltaS = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DS selector\");\n  }\n\n  switch (textRegion.huffmanDT) {\n    case 0:\n    case 1:\n    case 2:\n      tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n      break;\n    case 3:\n      tableDeltaT = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DT selector\");\n  }\n\n  if (textRegion.refinement) {\n    // Load tables RDW, RDH, RDX and RDY.\n    throw new Jbig2Error(\"refinement with Huffman is not supported\");\n  }\n\n  return {\n    symbolIDTable,\n    tableFirstS,\n    tableDeltaS,\n    tableDeltaT,\n  };\n}\n\nfunction getSymbolDictionaryHuffmanTables(\n  dictionary,\n  referredTo,\n  customTables\n) {\n  // 7.4.2.1.6 Symbol dictionary segment Huffman table selection\n\n  let customIndex = 0,\n    tableDeltaHeight,\n    tableDeltaWidth;\n  switch (dictionary.huffmanDHSelector) {\n    case 0:\n    case 1:\n      tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n      break;\n    case 3:\n      tableDeltaHeight = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DH selector\");\n  }\n\n  switch (dictionary.huffmanDWSelector) {\n    case 0:\n    case 1:\n      tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n      break;\n    case 3:\n      tableDeltaWidth = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DW selector\");\n  }\n\n  let tableBitmapSize, tableAggregateInstances;\n  if (dictionary.bitmapSizeSelector) {\n    tableBitmapSize = getCustomHuffmanTable(\n      customIndex,\n      referredTo,\n      customTables\n    );\n    customIndex++;\n  } else {\n    tableBitmapSize = getStandardTable(1);\n  }\n\n  if (dictionary.aggregationInstancesSelector) {\n    tableAggregateInstances = getCustomHuffmanTable(\n      customIndex,\n      referredTo,\n      customTables\n    );\n  } else {\n    tableAggregateInstances = getStandardTable(1);\n  }\n\n  return {\n    tableDeltaHeight,\n    tableDeltaWidth,\n    tableBitmapSize,\n    tableAggregateInstances,\n  };\n}\n\nfunction readUncompressedBitmap(reader, width, height) {\n  const bitmap = [];\n  for (let y = 0; y < height; y++) {\n    const row = new Uint8Array(width);\n    bitmap.push(row);\n    for (let x = 0; x < width; x++) {\n      row[x] = reader.readBit();\n    }\n    reader.byteAlign();\n  }\n  return bitmap;\n}\n\nfunction decodeMMRBitmap(input, width, height, endOfBlock) {\n  // MMR is the same compression algorithm as the PDF filter\n  // CCITTFaxDecode with /K -1.\n  const params = {\n    K: -1,\n    Columns: width,\n    Rows: height,\n    BlackIs1: true,\n    EndOfBlock: endOfBlock,\n  };\n  const decoder = new CCITTFaxDecoder(input, params);\n  const bitmap = [];\n  let currentByte,\n    eof = false;\n\n  for (let y = 0; y < height; y++) {\n    const row = new Uint8Array(width);\n    bitmap.push(row);\n    let shift = -1;\n    for (let x = 0; x < width; x++) {\n      if (shift < 0) {\n        currentByte = decoder.readNextChar();\n        if (currentByte === -1) {\n          // Set the rest of the bits to zero.\n          currentByte = 0;\n          eof = true;\n        }\n        shift = 7;\n      }\n      row[x] = (currentByte >> shift) & 1;\n      shift--;\n    }\n  }\n\n  if (endOfBlock && !eof) {\n    // Read until EOFB has been consumed.\n    const lookForEOFLimit = 5;\n    for (let i = 0; i < lookForEOFLimit; i++) {\n      if (decoder.readNextChar() === -1) {\n        break;\n      }\n    }\n  }\n\n  return bitmap;\n}\n\nclass Jbig2Image {\n  parseChunks(chunks) {\n    return parseJbig2Chunks(chunks);\n  }\n\n  parse(data) {\n    const { imgData, width, height } = parseJbig2(data);\n    this.width = width;\n    this.height = height;\n    return imgData;\n  }\n}\n\nexport { Jbig2Image };\n","/* Copyright 2019 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  FontType,\n  objectSize,\n  StreamType,\n  stringToPDFString,\n  warn,\n} from \"../shared/util.js\";\nimport { Dict, isName, Ref, RefSet } from \"./primitives.js\";\nimport { BaseStream } from \"./base_stream.js\";\n\nfunction getLookupTableFactory(initializer) {\n  let lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\n\nfunction getArrayLookupTableFactory(initializer) {\n  let lookup;\n  return function () {\n    if (initializer) {\n      let arr = initializer();\n      initializer = null;\n      lookup = Object.create(null);\n      for (let i = 0, ii = arr.length; i < ii; i += 2) {\n        lookup[arr[i]] = arr[i + 1];\n      }\n      arr = null;\n    }\n    return lookup;\n  };\n}\n\nclass MissingDataException extends BaseException {\n  constructor(begin, end) {\n    super(`Missing data [${begin}, ${end})`, \"MissingDataException\");\n    this.begin = begin;\n    this.end = end;\n  }\n}\n\nclass ParserEOFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"ParserEOFException\");\n  }\n}\n\nclass XRefEntryException extends BaseException {\n  constructor(msg) {\n    super(msg, \"XRefEntryException\");\n  }\n}\n\nclass XRefParseException extends BaseException {\n  constructor(msg) {\n    super(msg, \"XRefParseException\");\n  }\n}\n\nclass DocStats {\n  constructor(handler) {\n    this._handler = handler;\n\n    this._streamTypes = new Set();\n    this._fontTypes = new Set();\n  }\n\n  _send() {\n    const streamTypes = Object.create(null),\n      fontTypes = Object.create(null);\n    for (const type of this._streamTypes) {\n      streamTypes[type] = true;\n    }\n    for (const type of this._fontTypes) {\n      fontTypes[type] = true;\n    }\n    this._handler.send(\"DocStats\", { streamTypes, fontTypes });\n  }\n\n  addStreamType(type) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(StreamType[type] === type, 'addStreamType: Invalid \"type\" value.');\n    }\n    if (this._streamTypes.has(type)) {\n      return;\n    }\n    this._streamTypes.add(type);\n    this._send();\n  }\n\n  addFontType(type) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(FontType[type] === type, 'addFontType: Invalid \"type\" value.');\n    }\n    if (this._fontTypes.has(type)) {\n      return;\n    }\n    this._fontTypes.add(type);\n    this._send();\n  }\n}\n\n/**\n * Get the value of an inheritable property.\n *\n * If the PDF specification explicitly lists a property in a dictionary as\n * inheritable, then the value of the property may be present in the dictionary\n * itself or in one or more parents of the dictionary.\n *\n * If the key is not found in the tree, `undefined` is returned. Otherwise,\n * the value for the key is returned or, if `stopWhenFound` is `false`, a list\n * of values is returned.\n *\n * @param {Dict} dict - Dictionary from where to start the traversal.\n * @param {string} key - The key of the property to find the value for.\n * @param {boolean} getArray - Whether or not the value should be fetched as an\n *   array. The default value is `false`.\n * @param {boolean} stopWhenFound - Whether or not to stop the traversal when\n *   the key is found. If set to `false`, we always walk up the entire parent\n *   chain, for example to be able to find `\\Resources` placed on multiple\n *   levels of the tree. The default value is `true`.\n */\nfunction getInheritableProperty({\n  dict,\n  key,\n  getArray = false,\n  stopWhenFound = true,\n}) {\n  let values;\n  const visited = new RefSet();\n\n  while (dict instanceof Dict && !(dict.objId && visited.has(dict.objId))) {\n    if (dict.objId) {\n      visited.put(dict.objId);\n    }\n    const value = getArray ? dict.getArray(key) : dict.get(key);\n    if (value !== undefined) {\n      if (stopWhenFound) {\n        return value;\n      }\n      if (!values) {\n        values = [];\n      }\n      values.push(value);\n    }\n    dict = dict.get(\"Parent\");\n  }\n  return values;\n}\n\n// prettier-ignore\nconst ROMAN_NUMBER_MAP = [\n  \"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\",\n  \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\",\n  \"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"\n];\n\n/**\n * Converts positive integers to (upper case) Roman numerals.\n * @param {number} number - The number that should be converted.\n * @param {boolean} lowerCase - Indicates if the result should be converted\n *   to lower case letters. The default value is `false`.\n * @returns {string} The resulting Roman number.\n */\nfunction toRomanNumerals(number, lowerCase = false) {\n  assert(\n    Number.isInteger(number) && number > 0,\n    \"The number should be a positive integer.\"\n  );\n  const romanBuf = [];\n  let pos;\n  // Thousands\n  while (number >= 1000) {\n    number -= 1000;\n    romanBuf.push(\"M\");\n  }\n  // Hundreds\n  pos = (number / 100) | 0;\n  number %= 100;\n  romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n  // Tens\n  pos = (number / 10) | 0;\n  number %= 10;\n  romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n  // Ones\n  romanBuf.push(ROMAN_NUMBER_MAP[20 + number]); // eslint-disable-line unicorn/no-array-push-push\n\n  const romanStr = romanBuf.join(\"\");\n  return lowerCase ? romanStr.toLowerCase() : romanStr;\n}\n\n// Calculate the base 2 logarithm of the number `x`. This differs from the\n// native function in the sense that it returns the ceiling value and that it\n// returns 0 instead of `Infinity`/`NaN` for `x` values smaller than/equal to 0.\nfunction log2(x) {\n  if (x <= 0) {\n    return 0;\n  }\n  return Math.ceil(Math.log2(x));\n}\n\nfunction readInt8(data, offset) {\n  return (data[offset] << 24) >> 24;\n}\n\nfunction readUint16(data, offset) {\n  return (data[offset] << 8) | data[offset + 1];\n}\n\nfunction readUint32(data, offset) {\n  return (\n    ((data[offset] << 24) |\n      (data[offset + 1] << 16) |\n      (data[offset + 2] << 8) |\n      data[offset + 3]) >>>\n    0\n  );\n}\n\n// Checks if ch is one of the following characters: SPACE, TAB, CR or LF.\nfunction isWhiteSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n}\n\n/**\n * AcroForm field names use an array like notation to refer to\n * repeated XFA elements e.g. foo.bar[nnn].\n * see: XFA Spec Chapter 3 - Repeated Elements\n *\n * @param {string} path - XFA path name.\n * @returns {Array} - Array of Objects with the name and pos of\n * each part of the path.\n */\nfunction parseXFAPath(path) {\n  const positionPattern = /(.+)\\[(\\d+)\\]$/;\n  return path.split(\".\").map(component => {\n    const m = component.match(positionPattern);\n    if (m) {\n      return { name: m[1], pos: parseInt(m[2], 10) };\n    }\n    return { name: component, pos: 0 };\n  });\n}\n\nfunction escapePDFName(str) {\n  const buffer = [];\n  let start = 0;\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    // Whitespace or delimiters aren't regular chars, so escape them.\n    if (\n      char < 0x21 ||\n      char > 0x7e ||\n      char === 0x23 /* # */ ||\n      char === 0x28 /* ( */ ||\n      char === 0x29 /* ) */ ||\n      char === 0x3c /* < */ ||\n      char === 0x3e /* > */ ||\n      char === 0x5b /* [ */ ||\n      char === 0x5d /* ] */ ||\n      char === 0x7b /* { */ ||\n      char === 0x7d /* } */ ||\n      char === 0x2f /* / */ ||\n      char === 0x25 /* % */\n    ) {\n      if (start < i) {\n        buffer.push(str.substring(start, i));\n      }\n      buffer.push(`#${char.toString(16)}`);\n      start = i + 1;\n    }\n  }\n\n  if (buffer.length === 0) {\n    return str;\n  }\n\n  if (start < str.length) {\n    buffer.push(str.substring(start, str.length));\n  }\n\n  return buffer.join(\"\");\n}\n\nfunction _collectJS(entry, xref, list, parents) {\n  if (!entry) {\n    return;\n  }\n\n  let parent = null;\n  if (entry instanceof Ref) {\n    if (parents.has(entry)) {\n      // If we've already found entry then we've a cycle.\n      return;\n    }\n    parent = entry;\n    parents.put(parent);\n    entry = xref.fetch(entry);\n  }\n  if (Array.isArray(entry)) {\n    for (const element of entry) {\n      _collectJS(element, xref, list, parents);\n    }\n  } else if (entry instanceof Dict) {\n    if (isName(entry.get(\"S\"), \"JavaScript\")) {\n      const js = entry.get(\"JS\");\n      let code;\n      if (js instanceof BaseStream) {\n        code = js.getString();\n      } else if (typeof js === \"string\") {\n        code = js;\n      }\n      code = code && stringToPDFString(code);\n      if (code) {\n        list.push(code);\n      }\n    }\n    _collectJS(entry.getRaw(\"Next\"), xref, list, parents);\n  }\n\n  if (parent) {\n    parents.remove(parent);\n  }\n}\n\nfunction collectActions(xref, dict, eventType) {\n  const actions = Object.create(null);\n  const additionalActionsDicts = getInheritableProperty({\n    dict,\n    key: \"AA\",\n    stopWhenFound: false,\n  });\n  if (additionalActionsDicts) {\n    // additionalActionsDicts contains dicts from ancestors\n    // as they're found in the tree from bottom to top.\n    // So the dicts are visited in reverse order to guarantee\n    // that actions from elder ancestors will be overwritten\n    // by ones from younger ancestors.\n    for (let i = additionalActionsDicts.length - 1; i >= 0; i--) {\n      const additionalActions = additionalActionsDicts[i];\n      if (!(additionalActions instanceof Dict)) {\n        continue;\n      }\n      for (const key of additionalActions.getKeys()) {\n        const action = eventType[key];\n        if (!action) {\n          continue;\n        }\n        const actionDict = additionalActions.getRaw(key);\n        const parents = new RefSet();\n        const list = [];\n        _collectJS(actionDict, xref, list, parents);\n        if (list.length > 0) {\n          actions[action] = list;\n        }\n      }\n    }\n  }\n  // Collect the Action if any (we may have one on pushbutton).\n  if (dict.has(\"A\")) {\n    const actionDict = dict.get(\"A\");\n    const parents = new RefSet();\n    const list = [];\n    _collectJS(actionDict, xref, list, parents);\n    if (list.length > 0) {\n      actions.Action = list;\n    }\n  }\n  return objectSize(actions) > 0 ? actions : null;\n}\n\nconst XMLEntities = {\n  /* < */ 0x3c: \"&lt;\",\n  /* > */ 0x3e: \"&gt;\",\n  /* & */ 0x26: \"&amp;\",\n  /* \" */ 0x22: \"&quot;\",\n  /* ' */ 0x27: \"&apos;\",\n};\n\nfunction encodeToXmlString(str) {\n  const buffer = [];\n  let start = 0;\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.codePointAt(i);\n    if (0x20 <= char && char <= 0x7e) {\n      // ascii\n      const entity = XMLEntities[char];\n      if (entity) {\n        if (start < i) {\n          buffer.push(str.substring(start, i));\n        }\n        buffer.push(entity);\n        start = i + 1;\n      }\n    } else {\n      if (start < i) {\n        buffer.push(str.substring(start, i));\n      }\n      buffer.push(`&#x${char.toString(16).toUpperCase()};`);\n      if (char > 0xd7ff && (char < 0xe000 || char > 0xfffd)) {\n        // char is represented by two u16\n        i++;\n      }\n      start = i + 1;\n    }\n  }\n\n  if (buffer.length === 0) {\n    return str;\n  }\n  if (start < str.length) {\n    buffer.push(str.substring(start, str.length));\n  }\n  return buffer.join(\"\");\n}\n\nfunction validateCSSFont(cssFontInfo) {\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/font-style.\n  const DEFAULT_CSS_FONT_OBLIQUE = \"14\";\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight.\n  const DEFAULT_CSS_FONT_WEIGHT = \"400\";\n  const CSS_FONT_WEIGHT_VALUES = new Set([\n    \"100\",\n    \"200\",\n    \"300\",\n    \"400\",\n    \"500\",\n    \"600\",\n    \"700\",\n    \"800\",\n    \"900\",\n    \"1000\",\n    \"normal\",\n    \"bold\",\n    \"bolder\",\n    \"lighter\",\n  ]);\n\n  const { fontFamily, fontWeight, italicAngle } = cssFontInfo;\n\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/string.\n  if (/^\".*\"$/.test(fontFamily)) {\n    if (/[^\\\\]\"/.test(fontFamily.slice(1, fontFamily.length - 1))) {\n      warn(`XFA - FontFamily contains some unescaped \": ${fontFamily}.`);\n      return false;\n    }\n  } else if (/^'.*'$/.test(fontFamily)) {\n    if (/[^\\\\]'/.test(fontFamily.slice(1, fontFamily.length - 1))) {\n      warn(`XFA - FontFamily contains some unescaped ': ${fontFamily}.`);\n      return false;\n    }\n  } else {\n    // See https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident.\n    for (const ident of fontFamily.split(/[ \\t]+/)) {\n      if (/^(\\d|(-(\\d|-)))/.test(ident) || !/^[\\w-\\\\]+$/.test(ident)) {\n        warn(\n          `XFA - FontFamily contains some invalid <custom-ident>: ${fontFamily}.`\n        );\n        return false;\n      }\n    }\n  }\n\n  const weight = fontWeight ? fontWeight.toString() : \"\";\n  cssFontInfo.fontWeight = CSS_FONT_WEIGHT_VALUES.has(weight)\n    ? weight\n    : DEFAULT_CSS_FONT_WEIGHT;\n\n  const angle = parseFloat(italicAngle);\n  cssFontInfo.italicAngle =\n    isNaN(angle) || angle < -90 || angle > 90\n      ? DEFAULT_CSS_FONT_OBLIQUE\n      : italicAngle.toString();\n\n  return true;\n}\n\nfunction recoverJsURL(str) {\n  // Attempt to recover valid URLs from `JS` entries with certain\n  // white-listed formats:\n  //  - window.open('http://example.com')\n  //  - app.launchURL('http://example.com', true)\n  //  - xfa.host.gotoURL('http://example.com')\n  const URL_OPEN_METHODS = [\"app.launchURL\", \"window.open\", \"xfa.host.gotoURL\"];\n  const regex = new RegExp(\n    \"^\\\\s*(\" +\n      URL_OPEN_METHODS.join(\"|\").split(\".\").join(\"\\\\.\") +\n      \")\\\\((?:'|\\\")([^'\\\"]*)(?:'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))\",\n    \"i\"\n  );\n\n  const jsUrl = regex.exec(str);\n  if (jsUrl && jsUrl[2]) {\n    const url = jsUrl[2];\n    let newWindow = false;\n\n    if (jsUrl[3] === \"true\" && jsUrl[1] === \"app.launchURL\") {\n      newWindow = true;\n    }\n    return { url, newWindow };\n  }\n\n  return null;\n}\n\nexport {\n  collectActions,\n  DocStats,\n  encodeToXmlString,\n  escapePDFName,\n  getArrayLookupTableFactory,\n  getInheritableProperty,\n  getLookupTableFactory,\n  isWhiteSpace,\n  log2,\n  MissingDataException,\n  ParserEOFException,\n  parseXFAPath,\n  readInt8,\n  readUint16,\n  readUint32,\n  recoverJsURL,\n  toRomanNumerals,\n  validateCSSFont,\n  XRefEntryException,\n  XRefParseException,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, shadow, unreachable } from \"../shared/util.js\";\n\nconst CIRCULAR_REF = Symbol(\"CIRCULAR_REF\");\nconst EOF = Symbol(\"EOF\");\n\nconst Name = (function NameClosure() {\n  let nameCache = Object.create(null);\n\n  // eslint-disable-next-line no-shadow\n  class Name {\n    constructor(name) {\n      if (\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n        typeof name !== \"string\"\n      ) {\n        unreachable('Name: The \"name\" must be a string.');\n      }\n      this.name = name;\n    }\n\n    static get(name) {\n      const nameValue = nameCache[name];\n      // eslint-disable-next-line no-restricted-syntax\n      return nameValue ? nameValue : (nameCache[name] = new Name(name));\n    }\n\n    static _clearCache() {\n      nameCache = Object.create(null);\n    }\n  }\n\n  return Name;\n})();\n\nconst Cmd = (function CmdClosure() {\n  let cmdCache = Object.create(null);\n\n  // eslint-disable-next-line no-shadow\n  class Cmd {\n    constructor(cmd) {\n      if (\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n        typeof cmd !== \"string\"\n      ) {\n        unreachable('Cmd: The \"cmd\" must be a string.');\n      }\n      this.cmd = cmd;\n    }\n\n    static get(cmd) {\n      const cmdValue = cmdCache[cmd];\n      // eslint-disable-next-line no-restricted-syntax\n      return cmdValue ? cmdValue : (cmdCache[cmd] = new Cmd(cmd));\n    }\n\n    static _clearCache() {\n      cmdCache = Object.create(null);\n    }\n  }\n\n  return Cmd;\n})();\n\nconst nonSerializable = function nonSerializableClosure() {\n  return nonSerializable; // Creating closure on some variable.\n};\n\nclass Dict {\n  constructor(xref = null) {\n    // Map should only be used internally, use functions below to access.\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable; // Disable cloning of the Dict.\n  }\n\n  assignXref(newXref) {\n    this.xref = newXref;\n  }\n\n  get size() {\n    return Object.keys(this._map).length;\n  }\n\n  // Automatically dereferences Ref objects.\n  get(key1, key2, key3) {\n    let value = this._map[key1];\n    if (value === undefined && key2 !== undefined) {\n      if (\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n        key2.length < key1.length\n      ) {\n        unreachable(\"Dict.get: Expected keys to be ordered by length.\");\n      }\n      value = this._map[key2];\n      if (value === undefined && key3 !== undefined) {\n        if (\n          (typeof PDFJSDev === \"undefined\" ||\n            PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n          key3.length < key2.length\n        ) {\n          unreachable(\"Dict.get: Expected keys to be ordered by length.\");\n        }\n        value = this._map[key3];\n      }\n    }\n    if (value instanceof Ref && this.xref) {\n      return this.xref.fetch(value, this.suppressEncryption);\n    }\n    return value;\n  }\n\n  // Same as get(), but returns a promise and uses fetchIfRefAsync().\n  async getAsync(key1, key2, key3) {\n    let value = this._map[key1];\n    if (value === undefined && key2 !== undefined) {\n      if (\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n        key2.length < key1.length\n      ) {\n        unreachable(\"Dict.getAsync: Expected keys to be ordered by length.\");\n      }\n      value = this._map[key2];\n      if (value === undefined && key3 !== undefined) {\n        if (\n          (typeof PDFJSDev === \"undefined\" ||\n            PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n          key3.length < key2.length\n        ) {\n          unreachable(\"Dict.getAsync: Expected keys to be ordered by length.\");\n        }\n        value = this._map[key3];\n      }\n    }\n    if (value instanceof Ref && this.xref) {\n      return this.xref.fetchAsync(value, this.suppressEncryption);\n    }\n    return value;\n  }\n\n  // Same as get(), but dereferences all elements if the result is an Array.\n  getArray(key1, key2, key3) {\n    let value = this._map[key1];\n    if (value === undefined && key2 !== undefined) {\n      if (\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n        key2.length < key1.length\n      ) {\n        unreachable(\"Dict.getArray: Expected keys to be ordered by length.\");\n      }\n      value = this._map[key2];\n      if (value === undefined && key3 !== undefined) {\n        if (\n          (typeof PDFJSDev === \"undefined\" ||\n            PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n          key3.length < key2.length\n        ) {\n          unreachable(\"Dict.getArray: Expected keys to be ordered by length.\");\n        }\n        value = this._map[key3];\n      }\n    }\n    if (value instanceof Ref && this.xref) {\n      value = this.xref.fetch(value, this.suppressEncryption);\n    }\n\n    if (Array.isArray(value)) {\n      value = value.slice(); // Ensure that we don't modify the Dict data.\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        if (value[i] instanceof Ref && this.xref) {\n          value[i] = this.xref.fetch(value[i], this.suppressEncryption);\n        }\n      }\n    }\n    return value;\n  }\n\n  // No dereferencing.\n  getRaw(key) {\n    return this._map[key];\n  }\n\n  getKeys() {\n    return Object.keys(this._map);\n  }\n\n  // No dereferencing.\n  getRawValues() {\n    return Object.values(this._map);\n  }\n\n  set(key, value) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      if (typeof key !== \"string\") {\n        unreachable('Dict.set: The \"key\" must be a string.');\n      } else if (value === undefined) {\n        unreachable('Dict.set: The \"value\" cannot be undefined.');\n      }\n    }\n    this._map[key] = value;\n  }\n\n  has(key) {\n    return this._map[key] !== undefined;\n  }\n\n  forEach(callback) {\n    for (const key in this._map) {\n      callback(key, this.get(key));\n    }\n  }\n\n  static get empty() {\n    const emptyDict = new Dict(null);\n\n    emptyDict.set = (key, value) => {\n      unreachable(\"Should not call `set` on the empty dictionary.\");\n    };\n    return shadow(this, \"empty\", emptyDict);\n  }\n\n  static merge({ xref, dictArray, mergeSubDicts = false }) {\n    const mergedDict = new Dict(xref),\n      properties = new Map();\n\n    for (const dict of dictArray) {\n      if (!(dict instanceof Dict)) {\n        continue;\n      }\n      for (const [key, value] of Object.entries(dict._map)) {\n        let property = properties.get(key);\n        if (property === undefined) {\n          property = [];\n          properties.set(key, property);\n        } else if (!mergeSubDicts || !(value instanceof Dict)) {\n          // Ignore additional entries, if either:\n          //  - This is a \"shallow\" merge, where only the first element matters.\n          //  - The value is *not* a `Dict`, since other types cannot be merged.\n          continue;\n        }\n        property.push(value);\n      }\n    }\n    for (const [name, values] of properties) {\n      if (values.length === 1 || !(values[0] instanceof Dict)) {\n        mergedDict._map[name] = values[0];\n        continue;\n      }\n      const subDict = new Dict(xref);\n\n      for (const dict of values) {\n        for (const [key, value] of Object.entries(dict._map)) {\n          if (subDict._map[key] === undefined) {\n            subDict._map[key] = value;\n          }\n        }\n      }\n      if (subDict.size > 0) {\n        mergedDict._map[name] = subDict;\n      }\n    }\n    properties.clear();\n\n    return mergedDict.size > 0 ? mergedDict : Dict.empty;\n  }\n}\n\nconst Ref = (function RefClosure() {\n  let refCache = Object.create(null);\n\n  // eslint-disable-next-line no-shadow\n  class Ref {\n    constructor(num, gen) {\n      this.num = num;\n      this.gen = gen;\n    }\n\n    toString() {\n      // This function is hot, so we make the string as compact as possible.\n      // |this.gen| is almost always zero, so we treat that case specially.\n      if (this.gen === 0) {\n        return `${this.num}R`;\n      }\n      return `${this.num}R${this.gen}`;\n    }\n\n    static get(num, gen) {\n      const key = gen === 0 ? `${num}R` : `${num}R${gen}`;\n      const refValue = refCache[key];\n      // eslint-disable-next-line no-restricted-syntax\n      return refValue ? refValue : (refCache[key] = new Ref(num, gen));\n    }\n\n    static _clearCache() {\n      refCache = Object.create(null);\n    }\n  }\n\n  return Ref;\n})();\n\n// The reference is identified by number and generation.\n// This structure stores only one instance of the reference.\nclass RefSet {\n  constructor(parent = null) {\n    if (\n      (typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n      parent &&\n      !(parent instanceof RefSet)\n    ) {\n      unreachable('RefSet: Invalid \"parent\" value.');\n    }\n    this._set = new Set(parent && parent._set);\n  }\n\n  has(ref) {\n    return this._set.has(ref.toString());\n  }\n\n  put(ref) {\n    this._set.add(ref.toString());\n  }\n\n  remove(ref) {\n    this._set.delete(ref.toString());\n  }\n\n  forEach(callback) {\n    for (const ref of this._set.values()) {\n      callback(ref);\n    }\n  }\n\n  clear() {\n    this._set.clear();\n  }\n}\n\nclass RefSetCache {\n  constructor() {\n    this._map = new Map();\n  }\n\n  get size() {\n    return this._map.size;\n  }\n\n  get(ref) {\n    return this._map.get(ref.toString());\n  }\n\n  has(ref) {\n    return this._map.has(ref.toString());\n  }\n\n  put(ref, obj) {\n    this._map.set(ref.toString(), obj);\n  }\n\n  putAlias(ref, aliasRef) {\n    this._map.set(ref.toString(), this.get(aliasRef));\n  }\n\n  forEach(callback) {\n    for (const value of this._map.values()) {\n      callback(value);\n    }\n  }\n\n  clear() {\n    this._map.clear();\n  }\n}\n\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\n\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\n\nfunction isDict(v, type) {\n  return (\n    v instanceof Dict && (type === undefined || isName(v.get(\"Type\"), type))\n  );\n}\n\nfunction isRefsEqual(v1, v2) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      v1 instanceof Ref && v2 instanceof Ref,\n      \"isRefsEqual: Both parameters should be `Ref`s.\"\n    );\n  }\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\n\nfunction clearPrimitiveCaches() {\n  Cmd._clearCache();\n  Name._clearCache();\n  Ref._clearCache();\n}\n\nexport {\n  CIRCULAR_REF,\n  clearPrimitiveCaches,\n  Cmd,\n  Dict,\n  EOF,\n  isCmd,\n  isDict,\n  isName,\n  isRefsEqual,\n  Name,\n  Ref,\n  RefSet,\n  RefSetCache,\n};\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bytesToString, shadow, unreachable } from \"../shared/util.js\";\n\nclass BaseStream {\n  constructor() {\n    if (this.constructor === BaseStream) {\n      unreachable(\"Cannot initialize BaseStream.\");\n    }\n  }\n\n  // eslint-disable-next-line getter-return\n  get length() {\n    unreachable(\"Abstract getter `length` accessed\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get isEmpty() {\n    unreachable(\"Abstract getter `isEmpty` accessed\");\n  }\n\n  get isDataLoaded() {\n    return shadow(this, \"isDataLoaded\", true);\n  }\n\n  getByte() {\n    unreachable(\"Abstract method `getByte` called\");\n  }\n\n  getBytes(length, forceClamped = false) {\n    unreachable(\"Abstract method `getBytes` called\");\n  }\n\n  peekByte() {\n    const peekedByte = this.getByte();\n    if (peekedByte !== -1) {\n      this.pos--;\n    }\n    return peekedByte;\n  }\n\n  peekBytes(length, forceClamped = false) {\n    const bytes = this.getBytes(length, forceClamped);\n    this.pos -= bytes.length;\n    return bytes;\n  }\n\n  getUint16() {\n    const b0 = this.getByte();\n    const b1 = this.getByte();\n    if (b0 === -1 || b1 === -1) {\n      return -1;\n    }\n    return (b0 << 8) + b1;\n  }\n\n  getInt32() {\n    const b0 = this.getByte();\n    const b1 = this.getByte();\n    const b2 = this.getByte();\n    const b3 = this.getByte();\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n\n  getByteRange(begin, end) {\n    unreachable(\"Abstract method `getByteRange` called\");\n  }\n\n  getString(length) {\n    return bytesToString(this.getBytes(length, /* forceClamped = */ false));\n  }\n\n  skip(n) {\n    this.pos += n || 1;\n  }\n\n  reset() {\n    unreachable(\"Abstract method `reset` called\");\n  }\n\n  moveStart() {\n    unreachable(\"Abstract method `moveStart` called\");\n  }\n\n  makeSubStream(start, length, dict = null) {\n    unreachable(\"Abstract method `makeSubStream` called\");\n  }\n\n  /**\n   * @returns {Array | null}\n   */\n  getBaseStreams() {\n    return null;\n  }\n}\n\nexport { BaseStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Table C-2\nconst QeTable = [\n  { qe: 0x5601, nmps: 1, nlps: 1, switchFlag: 1 },\n  { qe: 0x3401, nmps: 2, nlps: 6, switchFlag: 0 },\n  { qe: 0x1801, nmps: 3, nlps: 9, switchFlag: 0 },\n  { qe: 0x0ac1, nmps: 4, nlps: 12, switchFlag: 0 },\n  { qe: 0x0521, nmps: 5, nlps: 29, switchFlag: 0 },\n  { qe: 0x0221, nmps: 38, nlps: 33, switchFlag: 0 },\n  { qe: 0x5601, nmps: 7, nlps: 6, switchFlag: 1 },\n  { qe: 0x5401, nmps: 8, nlps: 14, switchFlag: 0 },\n  { qe: 0x4801, nmps: 9, nlps: 14, switchFlag: 0 },\n  { qe: 0x3801, nmps: 10, nlps: 14, switchFlag: 0 },\n  { qe: 0x3001, nmps: 11, nlps: 17, switchFlag: 0 },\n  { qe: 0x2401, nmps: 12, nlps: 18, switchFlag: 0 },\n  { qe: 0x1c01, nmps: 13, nlps: 20, switchFlag: 0 },\n  { qe: 0x1601, nmps: 29, nlps: 21, switchFlag: 0 },\n  { qe: 0x5601, nmps: 15, nlps: 14, switchFlag: 1 },\n  { qe: 0x5401, nmps: 16, nlps: 14, switchFlag: 0 },\n  { qe: 0x5101, nmps: 17, nlps: 15, switchFlag: 0 },\n  { qe: 0x4801, nmps: 18, nlps: 16, switchFlag: 0 },\n  { qe: 0x3801, nmps: 19, nlps: 17, switchFlag: 0 },\n  { qe: 0x3401, nmps: 20, nlps: 18, switchFlag: 0 },\n  { qe: 0x3001, nmps: 21, nlps: 19, switchFlag: 0 },\n  { qe: 0x2801, nmps: 22, nlps: 19, switchFlag: 0 },\n  { qe: 0x2401, nmps: 23, nlps: 20, switchFlag: 0 },\n  { qe: 0x2201, nmps: 24, nlps: 21, switchFlag: 0 },\n  { qe: 0x1c01, nmps: 25, nlps: 22, switchFlag: 0 },\n  { qe: 0x1801, nmps: 26, nlps: 23, switchFlag: 0 },\n  { qe: 0x1601, nmps: 27, nlps: 24, switchFlag: 0 },\n  { qe: 0x1401, nmps: 28, nlps: 25, switchFlag: 0 },\n  { qe: 0x1201, nmps: 29, nlps: 26, switchFlag: 0 },\n  { qe: 0x1101, nmps: 30, nlps: 27, switchFlag: 0 },\n  { qe: 0x0ac1, nmps: 31, nlps: 28, switchFlag: 0 },\n  { qe: 0x09c1, nmps: 32, nlps: 29, switchFlag: 0 },\n  { qe: 0x08a1, nmps: 33, nlps: 30, switchFlag: 0 },\n  { qe: 0x0521, nmps: 34, nlps: 31, switchFlag: 0 },\n  { qe: 0x0441, nmps: 35, nlps: 32, switchFlag: 0 },\n  { qe: 0x02a1, nmps: 36, nlps: 33, switchFlag: 0 },\n  { qe: 0x0221, nmps: 37, nlps: 34, switchFlag: 0 },\n  { qe: 0x0141, nmps: 38, nlps: 35, switchFlag: 0 },\n  { qe: 0x0111, nmps: 39, nlps: 36, switchFlag: 0 },\n  { qe: 0x0085, nmps: 40, nlps: 37, switchFlag: 0 },\n  { qe: 0x0049, nmps: 41, nlps: 38, switchFlag: 0 },\n  { qe: 0x0025, nmps: 42, nlps: 39, switchFlag: 0 },\n  { qe: 0x0015, nmps: 43, nlps: 40, switchFlag: 0 },\n  { qe: 0x0009, nmps: 44, nlps: 41, switchFlag: 0 },\n  { qe: 0x0005, nmps: 45, nlps: 42, switchFlag: 0 },\n  { qe: 0x0001, nmps: 45, nlps: 43, switchFlag: 0 },\n  { qe: 0x5601, nmps: 46, nlps: 46, switchFlag: 0 },\n];\n\n/**\n * This class implements the QM Coder decoding as defined in\n *   JPEG 2000 Part I Final Committee Draft Version 1.0\n *   Annex C.3 Arithmetic decoding procedure\n * available at http://www.jpeg.org/public/fcd15444-1.pdf\n *\n * The arithmetic decoder is used in conjunction with context models to decode\n * JPEG2000 and JBIG2 streams.\n */\nclass ArithmeticDecoder {\n  // C.3.5 Initialisation of the decoder (INITDEC)\n  constructor(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n\n    this.chigh = data[start];\n    this.clow = 0;\n\n    this.byteIn();\n\n    this.chigh = ((this.chigh << 7) & 0xffff) | ((this.clow >> 9) & 0x7f);\n    this.clow = (this.clow << 7) & 0xffff;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n\n  // C.3.4 Compressed data input (BYTEIN)\n  byteIn() {\n    const data = this.data;\n    let bp = this.bp;\n\n    if (data[bp] === 0xff) {\n      if (data[bp + 1] > 0x8f) {\n        this.clow += 0xff00;\n        this.ct = 8;\n      } else {\n        bp++;\n        this.clow += data[bp] << 9;\n        this.ct = 7;\n        this.bp = bp;\n      }\n    } else {\n      bp++;\n      this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xff00;\n      this.ct = 8;\n      this.bp = bp;\n    }\n    if (this.clow > 0xffff) {\n      this.chigh += this.clow >> 16;\n      this.clow &= 0xffff;\n    }\n  }\n\n  // C.3.2 Decoding a decision (DECODE)\n  readBit(contexts, pos) {\n    // Contexts are packed into 1 byte:\n    // highest 7 bits carry cx.index, lowest bit carries cx.mps\n    let cx_index = contexts[pos] >> 1,\n      cx_mps = contexts[pos] & 1;\n    const qeTableIcx = QeTable[cx_index];\n    const qeIcx = qeTableIcx.qe;\n    let d;\n    let a = this.a - qeIcx;\n\n    if (this.chigh < qeIcx) {\n      // exchangeLps\n      if (a < qeIcx) {\n        a = qeIcx;\n        d = cx_mps;\n        cx_index = qeTableIcx.nmps;\n      } else {\n        a = qeIcx;\n        d = 1 ^ cx_mps;\n        if (qeTableIcx.switchFlag === 1) {\n          cx_mps = d;\n        }\n        cx_index = qeTableIcx.nlps;\n      }\n    } else {\n      this.chigh -= qeIcx;\n      if ((a & 0x8000) !== 0) {\n        this.a = a;\n        return cx_mps;\n      }\n      // exchangeMps\n      if (a < qeIcx) {\n        d = 1 ^ cx_mps;\n        if (qeTableIcx.switchFlag === 1) {\n          cx_mps = d;\n        }\n        cx_index = qeTableIcx.nlps;\n      } else {\n        d = cx_mps;\n        cx_index = qeTableIcx.nmps;\n      }\n    }\n    // C.3.3 renormD;\n    do {\n      if (this.ct === 0) {\n        this.byteIn();\n      }\n\n      a <<= 1;\n      this.chigh = ((this.chigh << 1) & 0xffff) | ((this.clow >> 15) & 1);\n      this.clow = (this.clow << 1) & 0xffff;\n      this.ct--;\n    } while ((a & 0x8000) === 0);\n    this.a = a;\n\n    contexts[pos] = (cx_index << 1) | cx_mps;\n    return d;\n  }\n}\n\nexport { ArithmeticDecoder };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* Copyright 1996-2003 Glyph & Cog, LLC\n *\n * The CCITT stream implementation contained in this file is a JavaScript port\n * of XPDF's implementation, made available under the Apache 2.0 open source\n * license.\n */\n\nimport { FormatError, info } from \"../shared/util.js\";\n\n/**\n * @typedef {Object} CCITTFaxDecoderSource\n * @property {function} next - Method that return one byte of data for decoding,\n *   or -1 when EOF is reached.\n */\n\nconst ccittEOL = -2;\nconst ccittEOF = -1;\nconst twoDimPass = 0;\nconst twoDimHoriz = 1;\nconst twoDimVert0 = 2;\nconst twoDimVertR1 = 3;\nconst twoDimVertL1 = 4;\nconst twoDimVertR2 = 5;\nconst twoDimVertL2 = 6;\nconst twoDimVertR3 = 7;\nconst twoDimVertL3 = 8;\n\n// prettier-ignore\nconst twoDimTable = [\n  [-1, -1], [-1, -1],                   // 000000x\n  [7, twoDimVertL3],                    // 0000010\n  [7, twoDimVertR3],                    // 0000011\n  [6, twoDimVertL2], [6, twoDimVertL2], // 000010x\n  [6, twoDimVertR2], [6, twoDimVertR2], // 000011x\n  [4, twoDimPass], [4, twoDimPass],     // 0001xxx\n  [4, twoDimPass], [4, twoDimPass],\n  [4, twoDimPass], [4, twoDimPass],\n  [4, twoDimPass], [4, twoDimPass],\n  [3, twoDimHoriz], [3, twoDimHoriz],   // 001xxxx\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimVertL1], [3, twoDimVertL1], // 010xxxx\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertR1], [3, twoDimVertR1], // 011xxxx\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [1, twoDimVert0], [1, twoDimVert0],   // 1xxxxxx\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0]\n];\n\n// prettier-ignore\nconst whiteTable1 = [\n  [-1, -1],                               // 00000\n  [12, ccittEOL],                         // 00001\n  [-1, -1], [-1, -1],                     // 0001x\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 001xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 010xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 011xx\n  [11, 1792], [11, 1792],                 // 1000x\n  [12, 1984],                             // 10010\n  [12, 2048],                             // 10011\n  [12, 2112],                             // 10100\n  [12, 2176],                             // 10101\n  [12, 2240],                             // 10110\n  [12, 2304],                             // 10111\n  [11, 1856], [11, 1856],                 // 1100x\n  [11, 1920], [11, 1920],                 // 1101x\n  [12, 2368],                             // 11100\n  [12, 2432],                             // 11101\n  [12, 2496],                             // 11110\n  [12, 2560]                              // 11111\n];\n\n// prettier-ignore\nconst whiteTable2 = [\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],     // 0000000xx\n  [8, 29], [8, 29],                           // 00000010x\n  [8, 30], [8, 30],                           // 00000011x\n  [8, 45], [8, 45],                           // 00000100x\n  [8, 46], [8, 46],                           // 00000101x\n  [7, 22], [7, 22], [7, 22], [7, 22],         // 0000011xx\n  [7, 23], [7, 23], [7, 23], [7, 23],         // 0000100xx\n  [8, 47], [8, 47],                           // 00001010x\n  [8, 48], [8, 48],                           // 00001011x\n  [6, 13], [6, 13], [6, 13], [6, 13],         // 000011xxx\n  [6, 13], [6, 13], [6, 13], [6, 13],\n  [7, 20], [7, 20], [7, 20], [7, 20],         // 0001000xx\n  [8, 33], [8, 33],                           // 00010010x\n  [8, 34], [8, 34],                           // 00010011x\n  [8, 35], [8, 35],                           // 00010100x\n  [8, 36], [8, 36],                           // 00010101x\n  [8, 37], [8, 37],                           // 00010110x\n  [8, 38], [8, 38],                           // 00010111x\n  [7, 19], [7, 19], [7, 19], [7, 19],         // 0001100xx\n  [8, 31], [8, 31],                           // 00011010x\n  [8, 32], [8, 32],                           // 00011011x\n  [6, 1], [6, 1], [6, 1], [6, 1],             // 000111xxx\n  [6, 1], [6, 1], [6, 1], [6, 1],\n  [6, 12], [6, 12], [6, 12], [6, 12],         // 001000xxx\n  [6, 12], [6, 12], [6, 12], [6, 12],\n  [8, 53], [8, 53],                           // 00100100x\n  [8, 54], [8, 54],                           // 00100101x\n  [7, 26], [7, 26], [7, 26], [7, 26],         // 0010011xx\n  [8, 39], [8, 39],                           // 00101000x\n  [8, 40], [8, 40],                           // 00101001x\n  [8, 41], [8, 41],                           // 00101010x\n  [8, 42], [8, 42],                           // 00101011x\n  [8, 43], [8, 43],                           // 00101100x\n  [8, 44], [8, 44],                           // 00101101x\n  [7, 21], [7, 21], [7, 21], [7, 21],         // 0010111xx\n  [7, 28], [7, 28], [7, 28], [7, 28],         // 0011000xx\n  [8, 61], [8, 61],                           // 00110010x\n  [8, 62], [8, 62],                           // 00110011x\n  [8, 63], [8, 63],                           // 00110100x\n  [8, 0], [8, 0],                             // 00110101x\n  [8, 320], [8, 320],                         // 00110110x\n  [8, 384], [8, 384],                         // 00110111x\n  [5, 10], [5, 10], [5, 10], [5, 10],         // 00111xxxx\n  [5, 10], [5, 10], [5, 10], [5, 10],\n  [5, 10], [5, 10], [5, 10], [5, 10],\n  [5, 10], [5, 10], [5, 10], [5, 10],\n  [5, 11], [5, 11], [5, 11], [5, 11],         // 01000xxxx\n  [5, 11], [5, 11], [5, 11], [5, 11],\n  [5, 11], [5, 11], [5, 11], [5, 11],\n  [5, 11], [5, 11], [5, 11], [5, 11],\n  [7, 27], [7, 27], [7, 27], [7, 27],         // 0100100xx\n  [8, 59], [8, 59],                           // 01001010x\n  [8, 60], [8, 60],                           // 01001011x\n  [9, 1472],                                  // 010011000\n  [9, 1536],                                  // 010011001\n  [9, 1600],                                  // 010011010\n  [9, 1728],                                  // 010011011\n  [7, 18], [7, 18], [7, 18], [7, 18],         // 0100111xx\n  [7, 24], [7, 24], [7, 24], [7, 24],         // 0101000xx\n  [8, 49], [8, 49],                           // 01010010x\n  [8, 50], [8, 50],                           // 01010011x\n  [8, 51], [8, 51],                           // 01010100x\n  [8, 52], [8, 52],                           // 01010101x\n  [7, 25], [7, 25], [7, 25], [7, 25],         // 0101011xx\n  [8, 55], [8, 55],                           // 01011000x\n  [8, 56], [8, 56],                           // 01011001x\n  [8, 57], [8, 57],                           // 01011010x\n  [8, 58], [8, 58],                           // 01011011x\n  [6, 192], [6, 192], [6, 192], [6, 192],     // 010111xxx\n  [6, 192], [6, 192], [6, 192], [6, 192],\n  [6, 1664], [6, 1664], [6, 1664], [6, 1664], // 011000xxx\n  [6, 1664], [6, 1664], [6, 1664], [6, 1664],\n  [8, 448], [8, 448],                         // 01100100x\n  [8, 512], [8, 512],                         // 01100101x\n  [9, 704],                                   // 011001100\n  [9, 768],                                   // 011001101\n  [8, 640], [8, 640],                         // 01100111x\n  [8, 576], [8, 576],                         // 01101000x\n  [9, 832],                                   // 011010010\n  [9, 896],                                   // 011010011\n  [9, 960],                                   // 011010100\n  [9, 1024],                                  // 011010101\n  [9, 1088],                                  // 011010110\n  [9, 1152],                                  // 011010111\n  [9, 1216],                                  // 011011000\n  [9, 1280],                                  // 011011001\n  [9, 1344],                                  // 011011010\n  [9, 1408],                                  // 011011011\n  [7, 256], [7, 256], [7, 256], [7, 256],     // 0110111xx\n  [4, 2], [4, 2], [4, 2], [4, 2],             // 0111xxxxx\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 3], [4, 3], [4, 3], [4, 3],             // 1000xxxxx\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [5, 128], [5, 128], [5, 128], [5, 128],     // 10010xxxx\n  [5, 128], [5, 128], [5, 128], [5, 128],\n  [5, 128], [5, 128], [5, 128], [5, 128],\n  [5, 128], [5, 128], [5, 128], [5, 128],\n  [5, 8], [5, 8], [5, 8], [5, 8],             // 10011xxxx\n  [5, 8], [5, 8], [5, 8], [5, 8],\n  [5, 8], [5, 8], [5, 8], [5, 8],\n  [5, 8], [5, 8], [5, 8], [5, 8],\n  [5, 9], [5, 9], [5, 9], [5, 9],             // 10100xxxx\n  [5, 9], [5, 9], [5, 9], [5, 9],\n  [5, 9], [5, 9], [5, 9], [5, 9],\n  [5, 9], [5, 9], [5, 9], [5, 9],\n  [6, 16], [6, 16], [6, 16], [6, 16],         // 101010xxx\n  [6, 16], [6, 16], [6, 16], [6, 16],\n  [6, 17], [6, 17], [6, 17], [6, 17],         // 101011xxx\n  [6, 17], [6, 17], [6, 17], [6, 17],\n  [4, 4], [4, 4], [4, 4], [4, 4],             // 1011xxxxx\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 5], [4, 5], [4, 5], [4, 5],             // 1100xxxxx\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [6, 14], [6, 14], [6, 14], [6, 14],         // 110100xxx\n  [6, 14], [6, 14], [6, 14], [6, 14],\n  [6, 15], [6, 15], [6, 15], [6, 15],         // 110101xxx\n  [6, 15], [6, 15], [6, 15], [6, 15],\n  [5, 64], [5, 64], [5, 64], [5, 64],         // 11011xxxx\n  [5, 64], [5, 64], [5, 64], [5, 64],\n  [5, 64], [5, 64], [5, 64], [5, 64],\n  [5, 64], [5, 64], [5, 64], [5, 64],\n  [4, 6], [4, 6], [4, 6], [4, 6],             // 1110xxxxx\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 7], [4, 7], [4, 7], [4, 7],             // 1111xxxxx\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7]\n];\n\n// prettier-ignore\nconst blackTable1 = [\n  [-1, -1], [-1, -1],                             // 000000000000x\n  [12, ccittEOL], [12, ccittEOL],                 // 000000000001x\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000001xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000010xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000011xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000100xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000101xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000110xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000111xx\n  [11, 1792], [11, 1792], [11, 1792], [11, 1792], // 00000001000xx\n  [12, 1984], [12, 1984],                         // 000000010010x\n  [12, 2048], [12, 2048],                         // 000000010011x\n  [12, 2112], [12, 2112],                         // 000000010100x\n  [12, 2176], [12, 2176],                         // 000000010101x\n  [12, 2240], [12, 2240],                         // 000000010110x\n  [12, 2304], [12, 2304],                         // 000000010111x\n  [11, 1856], [11, 1856], [11, 1856], [11, 1856], // 00000001100xx\n  [11, 1920], [11, 1920], [11, 1920], [11, 1920], // 00000001101xx\n  [12, 2368], [12, 2368],                         // 000000011100x\n  [12, 2432], [12, 2432],                         // 000000011101x\n  [12, 2496], [12, 2496],                         // 000000011110x\n  [12, 2560], [12, 2560],                         // 000000011111x\n  [10, 18], [10, 18], [10, 18], [10, 18],         // 0000001000xxx\n  [10, 18], [10, 18], [10, 18], [10, 18],\n  [12, 52], [12, 52],                             // 000000100100x\n  [13, 640],                                      // 0000001001010\n  [13, 704],                                      // 0000001001011\n  [13, 768],                                      // 0000001001100\n  [13, 832],                                      // 0000001001101\n  [12, 55], [12, 55],                             // 000000100111x\n  [12, 56], [12, 56],                             // 000000101000x\n  [13, 1280],                                     // 0000001010010\n  [13, 1344],                                     // 0000001010011\n  [13, 1408],                                     // 0000001010100\n  [13, 1472],                                     // 0000001010101\n  [12, 59], [12, 59],                             // 000000101011x\n  [12, 60], [12, 60],                             // 000000101100x\n  [13, 1536],                                     // 0000001011010\n  [13, 1600],                                     // 0000001011011\n  [11, 24], [11, 24], [11, 24], [11, 24],         // 00000010111xx\n  [11, 25], [11, 25], [11, 25], [11, 25],         // 00000011000xx\n  [13, 1664],                                     // 0000001100100\n  [13, 1728],                                     // 0000001100101\n  [12, 320], [12, 320],                           // 000000110011x\n  [12, 384], [12, 384],                           // 000000110100x\n  [12, 448], [12, 448],                           // 000000110101x\n  [13, 512],                                      // 0000001101100\n  [13, 576],                                      // 0000001101101\n  [12, 53], [12, 53],                             // 000000110111x\n  [12, 54], [12, 54],                             // 000000111000x\n  [13, 896],                                      // 0000001110010\n  [13, 960],                                      // 0000001110011\n  [13, 1024],                                     // 0000001110100\n  [13, 1088],                                     // 0000001110101\n  [13, 1152],                                     // 0000001110110\n  [13, 1216],                                     // 0000001110111\n  [10, 64], [10, 64], [10, 64], [10, 64],         // 0000001111xxx\n  [10, 64], [10, 64], [10, 64], [10, 64]\n];\n\n// prettier-ignore\nconst blackTable2 = [\n  [8, 13], [8, 13], [8, 13], [8, 13],     // 00000100xxxx\n  [8, 13], [8, 13], [8, 13], [8, 13],\n  [8, 13], [8, 13], [8, 13], [8, 13],\n  [8, 13], [8, 13], [8, 13], [8, 13],\n  [11, 23], [11, 23],                     // 00000101000x\n  [12, 50],                               // 000001010010\n  [12, 51],                               // 000001010011\n  [12, 44],                               // 000001010100\n  [12, 45],                               // 000001010101\n  [12, 46],                               // 000001010110\n  [12, 47],                               // 000001010111\n  [12, 57],                               // 000001011000\n  [12, 58],                               // 000001011001\n  [12, 61],                               // 000001011010\n  [12, 256],                              // 000001011011\n  [10, 16], [10, 16], [10, 16], [10, 16], // 0000010111xx\n  [10, 17], [10, 17], [10, 17], [10, 17], // 0000011000xx\n  [12, 48],                               // 000001100100\n  [12, 49],                               // 000001100101\n  [12, 62],                               // 000001100110\n  [12, 63],                               // 000001100111\n  [12, 30],                               // 000001101000\n  [12, 31],                               // 000001101001\n  [12, 32],                               // 000001101010\n  [12, 33],                               // 000001101011\n  [12, 40],                               // 000001101100\n  [12, 41],                               // 000001101101\n  [11, 22], [11, 22],                     // 00000110111x\n  [8, 14], [8, 14], [8, 14], [8, 14],     // 00000111xxxx\n  [8, 14], [8, 14], [8, 14], [8, 14],\n  [8, 14], [8, 14], [8, 14], [8, 14],\n  [8, 14], [8, 14], [8, 14], [8, 14],\n  [7, 10], [7, 10], [7, 10], [7, 10],     // 0000100xxxxx\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 11], [7, 11], [7, 11], [7, 11],     // 0000101xxxxx\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [9, 15], [9, 15], [9, 15], [9, 15],     // 000011000xxx\n  [9, 15], [9, 15], [9, 15], [9, 15],\n  [12, 128],                              // 000011001000\n  [12, 192],                              // 000011001001\n  [12, 26],                               // 000011001010\n  [12, 27],                               // 000011001011\n  [12, 28],                               // 000011001100\n  [12, 29],                               // 000011001101\n  [11, 19], [11, 19],                     // 00001100111x\n  [11, 20], [11, 20],                     // 00001101000x\n  [12, 34],                               // 000011010010\n  [12, 35],                               // 000011010011\n  [12, 36],                               // 000011010100\n  [12, 37],                               // 000011010101\n  [12, 38],                               // 000011010110\n  [12, 39],                               // 000011010111\n  [11, 21], [11, 21],                     // 00001101100x\n  [12, 42],                               // 000011011010\n  [12, 43],                               // 000011011011\n  [10, 0], [10, 0], [10, 0], [10, 0],     // 0000110111xx\n  [7, 12], [7, 12], [7, 12], [7, 12],     // 0000111xxxxx\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12]\n];\n\n// prettier-ignore\nconst blackTable3 = [\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 0000xx\n  [6, 9],                                 // 000100\n  [6, 8],                                 // 000101\n  [5, 7], [5, 7],                         // 00011x\n  [4, 6], [4, 6], [4, 6], [4, 6],         // 0010xx\n  [4, 5], [4, 5], [4, 5], [4, 5],         // 0011xx\n  [3, 1], [3, 1], [3, 1], [3, 1],         // 010xxx\n  [3, 1], [3, 1], [3, 1], [3, 1],\n  [3, 4], [3, 4], [3, 4], [3, 4],         // 011xxx\n  [3, 4], [3, 4], [3, 4], [3, 4],\n  [2, 3], [2, 3], [2, 3], [2, 3],         // 10xxxx\n  [2, 3], [2, 3], [2, 3], [2, 3],\n  [2, 3], [2, 3], [2, 3], [2, 3],\n  [2, 3], [2, 3], [2, 3], [2, 3],\n  [2, 2], [2, 2], [2, 2], [2, 2],         // 11xxxx\n  [2, 2], [2, 2], [2, 2], [2, 2],\n  [2, 2], [2, 2], [2, 2], [2, 2],\n  [2, 2], [2, 2], [2, 2], [2, 2]\n];\n\n/**\n * @param {CCITTFaxDecoderSource} source - The data which should be decoded.\n * @param {Object} [options] - Decoding options.\n */\nclass CCITTFaxDecoder {\n  constructor(source, options = {}) {\n    if (!source || typeof source.next !== \"function\") {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n\n    this.encoding = options.K || 0;\n    this.eoline = options.EndOfLine || false;\n    this.byteAlign = options.EncodedByteAlign || false;\n    this.columns = options.Columns || 1728;\n    this.rows = options.Rows || 0;\n    let eoblock = options.EndOfBlock;\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options.BlackIs1 || false;\n\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n\n    let code1;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n\n  readNextChar() {\n    if (this.eof) {\n      return -1;\n    }\n    const refLine = this.refLine;\n    const codingLine = this.codingLine;\n    const columns = this.columns;\n\n    let refPos, blackPixels, bits, i;\n\n    if (this.outputBits === 0) {\n      if (this.rowsDone) {\n        this.eof = true;\n      }\n      if (this.eof) {\n        return -1;\n      }\n      this.err = false;\n\n      let code1, code2, code3;\n      if (this.nextLine2D) {\n        for (i = 0; codingLine[i] < columns; ++i) {\n          refLine[i] = codingLine[i];\n        }\n        refLine[i++] = columns;\n        refLine[i] = columns;\n        codingLine[0] = 0;\n        this.codingPos = 0;\n        refPos = 0;\n        blackPixels = 0;\n\n        while (codingLine[this.codingPos] < columns) {\n          code1 = this._getTwoDimCode();\n          switch (code1) {\n            case twoDimPass:\n              this._addPixels(refLine[refPos + 1], blackPixels);\n              if (refLine[refPos + 1] < columns) {\n                refPos += 2;\n              }\n              break;\n            case twoDimHoriz:\n              code1 = code2 = 0;\n              if (blackPixels) {\n                do {\n                  code1 += code3 = this._getBlackCode();\n                } while (code3 >= 64);\n                do {\n                  code2 += code3 = this._getWhiteCode();\n                } while (code3 >= 64);\n              } else {\n                do {\n                  code1 += code3 = this._getWhiteCode();\n                } while (code3 >= 64);\n                do {\n                  code2 += code3 = this._getBlackCode();\n                } while (code3 >= 64);\n              }\n              this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n              if (codingLine[this.codingPos] < columns) {\n                this._addPixels(\n                  codingLine[this.codingPos] + code2,\n                  blackPixels ^ 1\n                );\n              }\n              while (\n                refLine[refPos] <= codingLine[this.codingPos] &&\n                refLine[refPos] < columns\n              ) {\n                refPos += 2;\n              }\n              break;\n            case twoDimVertR3:\n              this._addPixels(refLine[refPos] + 3, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertR2:\n              this._addPixels(refLine[refPos] + 2, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertR1:\n              this._addPixels(refLine[refPos] + 1, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVert0:\n              this._addPixels(refLine[refPos], blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL3:\n              this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL2:\n              this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL1:\n              this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case ccittEOF:\n              this._addPixels(columns, 0);\n              this.eof = true;\n              break;\n            default:\n              info(\"bad 2d code\");\n              this._addPixels(columns, 0);\n              this.err = true;\n          }\n        }\n      } else {\n        codingLine[0] = 0;\n        this.codingPos = 0;\n        blackPixels = 0;\n        while (codingLine[this.codingPos] < columns) {\n          code1 = 0;\n          if (blackPixels) {\n            do {\n              code1 += code3 = this._getBlackCode();\n            } while (code3 >= 64);\n          } else {\n            do {\n              code1 += code3 = this._getWhiteCode();\n            } while (code3 >= 64);\n          }\n          this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n          blackPixels ^= 1;\n        }\n      }\n\n      let gotEOL = false;\n\n      if (this.byteAlign) {\n        this.inputBits &= ~7;\n      }\n\n      if (!this.eoblock && this.row === this.rows - 1) {\n        this.rowsDone = true;\n      } else {\n        code1 = this._lookBits(12);\n        if (this.eoline) {\n          while (code1 !== ccittEOF && code1 !== 1) {\n            this._eatBits(1);\n            code1 = this._lookBits(12);\n          }\n        } else {\n          while (code1 === 0) {\n            this._eatBits(1);\n            code1 = this._lookBits(12);\n          }\n        }\n        if (code1 === 1) {\n          this._eatBits(12);\n          gotEOL = true;\n        } else if (code1 === ccittEOF) {\n          this.eof = true;\n        }\n      }\n\n      if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n        this.nextLine2D = !this._lookBits(1);\n        this._eatBits(1);\n      }\n\n      if (this.eoblock && gotEOL && this.byteAlign) {\n        code1 = this._lookBits(12);\n        if (code1 === 1) {\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._lookBits(1);\n            this._eatBits(1);\n          }\n          if (this.encoding >= 0) {\n            for (i = 0; i < 4; ++i) {\n              code1 = this._lookBits(12);\n              if (code1 !== 1) {\n                info(\"bad rtc code: \" + code1);\n              }\n              this._eatBits(12);\n              if (this.encoding > 0) {\n                this._lookBits(1);\n                this._eatBits(1);\n              }\n            }\n          }\n          this.eof = true;\n        }\n      } else if (this.err && this.eoline) {\n        while (true) {\n          code1 = this._lookBits(13);\n          if (code1 === ccittEOF) {\n            this.eof = true;\n            return -1;\n          }\n          if (code1 >> 1 === 1) {\n            break;\n          }\n          this._eatBits(1);\n        }\n        this._eatBits(12);\n        if (this.encoding > 0) {\n          this._eatBits(1);\n          this.nextLine2D = !(code1 & 1);\n        }\n      }\n\n      if (codingLine[0] > 0) {\n        this.outputBits = codingLine[(this.codingPos = 0)];\n      } else {\n        this.outputBits = codingLine[(this.codingPos = 1)];\n      }\n      this.row++;\n    }\n\n    let c;\n    if (this.outputBits >= 8) {\n      c = this.codingPos & 1 ? 0 : 0xff;\n      this.outputBits -= 8;\n      if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n        this.codingPos++;\n        this.outputBits =\n          codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n      }\n    } else {\n      bits = 8;\n      c = 0;\n      do {\n        if (typeof this.outputBits !== \"number\") {\n          throw new FormatError(\n            'Invalid /CCITTFaxDecode data, \"outputBits\" must be a number.'\n          );\n        }\n\n        if (this.outputBits > bits) {\n          c <<= bits;\n          if (!(this.codingPos & 1)) {\n            c |= 0xff >> (8 - bits);\n          }\n          this.outputBits -= bits;\n          bits = 0;\n        } else {\n          c <<= this.outputBits;\n          if (!(this.codingPos & 1)) {\n            c |= 0xff >> (8 - this.outputBits);\n          }\n          bits -= this.outputBits;\n          this.outputBits = 0;\n          if (codingLine[this.codingPos] < columns) {\n            this.codingPos++;\n            this.outputBits =\n              codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n          } else if (bits > 0) {\n            c <<= bits;\n            bits = 0;\n          }\n        }\n      } while (bits);\n    }\n    if (this.black) {\n      c ^= 0xff;\n    }\n    return c;\n  }\n\n  /**\n   * @private\n   */\n  _addPixels(a1, blackPixels) {\n    const codingLine = this.codingLine;\n    let codingPos = this.codingPos;\n\n    if (a1 > codingLine[codingPos]) {\n      if (a1 > this.columns) {\n        info(\"row is wrong length\");\n        this.err = true;\n        a1 = this.columns;\n      }\n      if ((codingPos & 1) ^ blackPixels) {\n        ++codingPos;\n      }\n\n      codingLine[codingPos] = a1;\n    }\n    this.codingPos = codingPos;\n  }\n\n  /**\n   * @private\n   */\n  _addPixelsNeg(a1, blackPixels) {\n    const codingLine = this.codingLine;\n    let codingPos = this.codingPos;\n\n    if (a1 > codingLine[codingPos]) {\n      if (a1 > this.columns) {\n        info(\"row is wrong length\");\n        this.err = true;\n        a1 = this.columns;\n      }\n      if ((codingPos & 1) ^ blackPixels) {\n        ++codingPos;\n      }\n\n      codingLine[codingPos] = a1;\n    } else if (a1 < codingLine[codingPos]) {\n      if (a1 < 0) {\n        info(\"invalid code\");\n        this.err = true;\n        a1 = 0;\n      }\n      while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n        --codingPos;\n      }\n      codingLine[codingPos] = a1;\n    }\n\n    this.codingPos = codingPos;\n  }\n\n  /**\n   * This function returns the code found from the table.\n   * The start and end parameters set the boundaries for searching the table.\n   * The limit parameter is optional. Function returns an array with three\n   * values. The first array element indicates whether a valid code is being\n   * returned. The second array element is the actual code. The third array\n   * element indicates whether EOF was reached.\n   * @private\n   */\n  _findTableCode(start, end, table, limit) {\n    const limitValue = limit || 0;\n    for (let i = start; i <= end; ++i) {\n      let code = this._lookBits(i);\n      if (code === ccittEOF) {\n        return [true, 1, false];\n      }\n      if (i < end) {\n        code <<= end - i;\n      }\n      if (!limitValue || code >= limitValue) {\n        const p = table[code - limitValue];\n        if (p[0] === i) {\n          this._eatBits(i);\n          return [true, p[1], true];\n        }\n      }\n    }\n    return [false, 0, false];\n  }\n\n  /**\n   * @private\n   */\n  _getTwoDimCode() {\n    let code = 0;\n    let p;\n    if (this.eoblock) {\n      code = this._lookBits(7);\n      p = twoDimTable[code];\n      if (p && p[0] > 0) {\n        this._eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      const result = this._findTableCode(1, 7, twoDimTable);\n      if (result[0] && result[2]) {\n        return result[1];\n      }\n    }\n    info(\"Bad two dim code\");\n    return ccittEOF;\n  }\n\n  /**\n   * @private\n   */\n  _getWhiteCode() {\n    let code = 0;\n    let p;\n    if (this.eoblock) {\n      code = this._lookBits(12);\n      if (code === ccittEOF) {\n        return 1;\n      }\n\n      if (code >> 5 === 0) {\n        p = whiteTable1[code];\n      } else {\n        p = whiteTable2[code >> 3];\n      }\n\n      if (p[0] > 0) {\n        this._eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      let result = this._findTableCode(1, 9, whiteTable2);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this._findTableCode(11, 12, whiteTable1);\n      if (result[0]) {\n        return result[1];\n      }\n    }\n    info(\"bad white code\");\n    this._eatBits(1);\n    return 1;\n  }\n\n  /**\n   * @private\n   */\n  _getBlackCode() {\n    let code, p;\n    if (this.eoblock) {\n      code = this._lookBits(13);\n      if (code === ccittEOF) {\n        return 1;\n      }\n      if (code >> 7 === 0) {\n        p = blackTable1[code];\n      } else if (code >> 9 === 0 && code >> 7 !== 0) {\n        p = blackTable2[(code >> 1) - 64];\n      } else {\n        p = blackTable3[code >> 7];\n      }\n\n      if (p[0] > 0) {\n        this._eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      let result = this._findTableCode(2, 6, blackTable3);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this._findTableCode(7, 12, blackTable2, 64);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this._findTableCode(10, 13, blackTable1);\n      if (result[0]) {\n        return result[1];\n      }\n    }\n    info(\"bad black code\");\n    this._eatBits(1);\n    return 1;\n  }\n\n  /**\n   * @private\n   */\n  _lookBits(n) {\n    let c;\n    while (this.inputBits < n) {\n      if ((c = this.source.next()) === -1) {\n        if (this.inputBits === 0) {\n          return ccittEOF;\n        }\n        return (this.inputBuf << (n - this.inputBits)) & (0xffff >> (16 - n));\n      }\n      this.inputBuf = (this.inputBuf << 8) | c;\n      this.inputBits += 8;\n    }\n    return (this.inputBuf >> (this.inputBits - n)) & (0xffff >> (16 - n));\n  }\n\n  /**\n   * @private\n   */\n  _eatBits(n) {\n    if ((this.inputBits -= n) < 0) {\n      this.inputBits = 0;\n    }\n  }\n}\n\nexport { CCITTFaxDecoder };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, BaseException, warn } from \"../shared/util.js\";\nimport { readUint16 } from \"./core_utils.js\";\n\nclass JpegError extends BaseException {\n  constructor(msg) {\n    super(`JPEG error: ${msg}`, \"JpegError\");\n  }\n}\n\nclass DNLMarkerError extends BaseException {\n  constructor(message, scanLines) {\n    super(message, \"DNLMarkerError\");\n    this.scanLines = scanLines;\n  }\n}\n\nclass EOIMarkerError extends BaseException {\n  constructor(msg) {\n    super(msg, \"EOIMarkerError\");\n  }\n}\n\n/**\n * This code was forked from https://github.com/notmasteryet/jpgjs.\n * The original version was created by GitHub user notmasteryet.\n *\n * - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n *   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n * - The JFIF specification can be found in the JPEG File Interchange Format\n *   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n * - The Adobe Application-Specific JPEG markers in the\n *   Supporting the DCT Filters in PostScript Level 2, Technical Note #5116\n *   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n */\n\n// prettier-ignore\nconst dctZigZag = new Uint8Array([\n   0,\n   1,  8,\n  16,  9,  2,\n   3, 10, 17, 24,\n  32, 25, 18, 11, 4,\n   5, 12, 19, 26, 33, 40,\n  48, 41, 34, 27, 20, 13,  6,\n   7, 14, 21, 28, 35, 42, 49, 56,\n  57, 50, 43, 36, 29, 22, 15,\n  23, 30, 37, 44, 51, 58,\n  59, 52, 45, 38, 31,\n  39, 46, 53, 60,\n  61, 54, 47,\n  55, 62,\n  63\n]);\n\nconst dctCos1 = 4017; // cos(pi/16)\nconst dctSin1 = 799; // sin(pi/16)\nconst dctCos3 = 3406; // cos(3*pi/16)\nconst dctSin3 = 2276; // sin(3*pi/16)\nconst dctCos6 = 1567; // cos(6*pi/16)\nconst dctSin6 = 3784; // sin(6*pi/16)\nconst dctSqrt2 = 5793; // sqrt(2)\nconst dctSqrt1d2 = 2896; // sqrt(2) / 2\n\nfunction buildHuffmanTable(codeLengths, values) {\n  let k = 0,\n    i,\n    j,\n    length = 16;\n  while (length > 0 && !codeLengths[length - 1]) {\n    length--;\n  }\n  const code = [{ children: [], index: 0 }];\n  let p = code[0],\n    q;\n  for (i = 0; i < length; i++) {\n    for (j = 0; j < codeLengths[i]; j++) {\n      p = code.pop();\n      p.children[p.index] = values[k];\n      while (p.index > 0) {\n        p = code.pop();\n      }\n      p.index++;\n      code.push(p);\n      while (code.length <= i) {\n        code.push((q = { children: [], index: 0 }));\n        p.children[p.index] = q.children;\n        p = q;\n      }\n      k++;\n    }\n    if (i + 1 < length) {\n      // p here points to last code\n      code.push((q = { children: [], index: 0 }));\n      p.children[p.index] = q.children;\n      p = q;\n    }\n  }\n  return code[0].children;\n}\n\nfunction getBlockBufferOffset(component, row, col) {\n  return 64 * ((component.blocksPerLine + 1) * row + col);\n}\n\nfunction decodeScan(\n  data,\n  offset,\n  frame,\n  components,\n  resetInterval,\n  spectralStart,\n  spectralEnd,\n  successivePrev,\n  successive,\n  parseDNLMarker = false\n) {\n  const mcusPerLine = frame.mcusPerLine;\n  const progressive = frame.progressive;\n\n  const startOffset = offset;\n  let bitsData = 0,\n    bitsCount = 0;\n\n  function readBit() {\n    if (bitsCount > 0) {\n      bitsCount--;\n      return (bitsData >> bitsCount) & 1;\n    }\n    bitsData = data[offset++];\n    if (bitsData === 0xff) {\n      const nextByte = data[offset++];\n      if (nextByte) {\n        if (nextByte === /* DNL = */ 0xdc && parseDNLMarker) {\n          offset += 2; // Skip marker length.\n\n          const scanLines = readUint16(data, offset);\n          offset += 2;\n          if (scanLines > 0 && scanLines !== frame.scanLines) {\n            throw new DNLMarkerError(\n              \"Found DNL marker (0xFFDC) while parsing scan data\",\n              scanLines\n            );\n          }\n        } else if (nextByte === /* EOI = */ 0xd9) {\n          if (parseDNLMarker) {\n            // NOTE: only 8-bit JPEG images are supported in this decoder.\n            const maybeScanLines = blockRow * (frame.precision === 8 ? 8 : 0);\n            // Heuristic to attempt to handle corrupt JPEG images with too\n            // large `scanLines` parameter, by falling back to the currently\n            // parsed number of scanLines when it's at least (approximately)\n            // one order of magnitude smaller than expected (fixes\n            // issue10880.pdf and issue10989.pdf).\n            if (\n              maybeScanLines > 0 &&\n              Math.round(frame.scanLines / maybeScanLines) >= 10\n            ) {\n              throw new DNLMarkerError(\n                \"Found EOI marker (0xFFD9) while parsing scan data, \" +\n                  \"possibly caused by incorrect `scanLines` parameter\",\n                maybeScanLines\n              );\n            }\n          }\n          throw new EOIMarkerError(\n            \"Found EOI marker (0xFFD9) while parsing scan data\"\n          );\n        }\n        throw new JpegError(\n          `unexpected marker ${((bitsData << 8) | nextByte).toString(16)}`\n        );\n      }\n      // unstuff 0\n    }\n    bitsCount = 7;\n    return bitsData >>> 7;\n  }\n\n  function decodeHuffman(tree) {\n    let node = tree;\n    while (true) {\n      node = node[readBit()];\n      switch (typeof node) {\n        case \"number\":\n          return node;\n        case \"object\":\n          continue;\n      }\n      throw new JpegError(\"invalid huffman sequence\");\n    }\n  }\n\n  function receive(length) {\n    let n = 0;\n    while (length > 0) {\n      n = (n << 1) | readBit();\n      length--;\n    }\n    return n;\n  }\n\n  function receiveAndExtend(length) {\n    if (length === 1) {\n      return readBit() === 1 ? 1 : -1;\n    }\n    const n = receive(length);\n    if (n >= 1 << (length - 1)) {\n      return n;\n    }\n    return n + (-1 << length) + 1;\n  }\n\n  function decodeBaseline(component, blockOffset) {\n    const t = decodeHuffman(component.huffmanTableDC);\n    const diff = t === 0 ? 0 : receiveAndExtend(t);\n    component.blockData[blockOffset] = component.pred += diff;\n    let k = 1;\n    while (k < 64) {\n      const rs = decodeHuffman(component.huffmanTableAC);\n      const s = rs & 15,\n        r = rs >> 4;\n      if (s === 0) {\n        if (r < 15) {\n          break;\n        }\n        k += 16;\n        continue;\n      }\n      k += r;\n      const z = dctZigZag[k];\n      component.blockData[blockOffset + z] = receiveAndExtend(s);\n      k++;\n    }\n  }\n\n  function decodeDCFirst(component, blockOffset) {\n    const t = decodeHuffman(component.huffmanTableDC);\n    const diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n    component.blockData[blockOffset] = component.pred += diff;\n  }\n\n  function decodeDCSuccessive(component, blockOffset) {\n    component.blockData[blockOffset] |= readBit() << successive;\n  }\n\n  let eobrun = 0;\n  function decodeACFirst(component, blockOffset) {\n    if (eobrun > 0) {\n      eobrun--;\n      return;\n    }\n    let k = spectralStart;\n    const e = spectralEnd;\n    while (k <= e) {\n      const rs = decodeHuffman(component.huffmanTableAC);\n      const s = rs & 15,\n        r = rs >> 4;\n      if (s === 0) {\n        if (r < 15) {\n          eobrun = receive(r) + (1 << r) - 1;\n          break;\n        }\n        k += 16;\n        continue;\n      }\n      k += r;\n      const z = dctZigZag[k];\n      component.blockData[blockOffset + z] =\n        receiveAndExtend(s) * (1 << successive);\n      k++;\n    }\n  }\n\n  let successiveACState = 0,\n    successiveACNextValue;\n  function decodeACSuccessive(component, blockOffset) {\n    let k = spectralStart;\n    const e = spectralEnd;\n    let r = 0;\n    let s;\n    let rs;\n    while (k <= e) {\n      const offsetZ = blockOffset + dctZigZag[k];\n      const sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n      switch (successiveACState) {\n        case 0: // initial state\n          rs = decodeHuffman(component.huffmanTableAC);\n          s = rs & 15;\n          r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              eobrun = receive(r) + (1 << r);\n              successiveACState = 4;\n            } else {\n              r = 16;\n              successiveACState = 1;\n            }\n          } else {\n            if (s !== 1) {\n              throw new JpegError(\"invalid ACn encoding\");\n            }\n            successiveACNextValue = receiveAndExtend(s);\n            successiveACState = r ? 2 : 3;\n          }\n          continue;\n        case 1: // skipping r zero items\n        case 2:\n          if (component.blockData[offsetZ]) {\n            component.blockData[offsetZ] += sign * (readBit() << successive);\n          } else {\n            r--;\n            if (r === 0) {\n              successiveACState = successiveACState === 2 ? 3 : 0;\n            }\n          }\n          break;\n        case 3: // set value for a zero item\n          if (component.blockData[offsetZ]) {\n            component.blockData[offsetZ] += sign * (readBit() << successive);\n          } else {\n            component.blockData[offsetZ] = successiveACNextValue << successive;\n            successiveACState = 0;\n          }\n          break;\n        case 4: // eob\n          if (component.blockData[offsetZ]) {\n            component.blockData[offsetZ] += sign * (readBit() << successive);\n          }\n          break;\n      }\n      k++;\n    }\n    if (successiveACState === 4) {\n      eobrun--;\n      if (eobrun === 0) {\n        successiveACState = 0;\n      }\n    }\n  }\n\n  let blockRow = 0;\n  function decodeMcu(component, decode, mcu, row, col) {\n    const mcuRow = (mcu / mcusPerLine) | 0;\n    const mcuCol = mcu % mcusPerLine;\n    blockRow = mcuRow * component.v + row;\n    const blockCol = mcuCol * component.h + col;\n    const blockOffset = getBlockBufferOffset(component, blockRow, blockCol);\n    decode(component, blockOffset);\n  }\n\n  function decodeBlock(component, decode, mcu) {\n    blockRow = (mcu / component.blocksPerLine) | 0;\n    const blockCol = mcu % component.blocksPerLine;\n    const blockOffset = getBlockBufferOffset(component, blockRow, blockCol);\n    decode(component, blockOffset);\n  }\n\n  const componentsLength = components.length;\n  let component, i, j, k, n;\n  let decodeFn;\n  if (progressive) {\n    if (spectralStart === 0) {\n      decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n    } else {\n      decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n    }\n  } else {\n    decodeFn = decodeBaseline;\n  }\n\n  let mcu = 0,\n    fileMarker;\n  let mcuExpected;\n  if (componentsLength === 1) {\n    mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n  } else {\n    mcuExpected = mcusPerLine * frame.mcusPerColumn;\n  }\n\n  let h, v;\n  while (mcu <= mcuExpected) {\n    // reset interval stuff\n    const mcuToRead = resetInterval\n      ? Math.min(mcuExpected - mcu, resetInterval)\n      : mcuExpected;\n\n    // The `mcuToRead === 0` case should only occur when all of the expected\n    // MCU data has been already parsed, i.e. when `mcu === mcuExpected`, but\n    // some corrupt JPEG images contain more data than intended and we thus\n    // want to skip over any extra RSTx markers below (fixes issue11794.pdf).\n    if (mcuToRead > 0) {\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n    }\n\n    // find marker\n    bitsCount = 0;\n    fileMarker = findNextFileMarker(data, offset);\n    if (!fileMarker) {\n      break; // Reached the end of the image data without finding any marker.\n    }\n    if (fileMarker.invalid) {\n      // Some bad images seem to pad Scan blocks with e.g. zero bytes, skip\n      // past those to attempt to find a valid marker (fixes issue4090.pdf).\n      const partialMsg = mcuToRead > 0 ? \"unexpected\" : \"excessive\";\n      warn(\n        `decodeScan - ${partialMsg} MCU data, current marker is: ${fileMarker.invalid}`\n      );\n      offset = fileMarker.offset;\n    }\n    if (fileMarker.marker >= 0xffd0 && fileMarker.marker <= 0xffd7) {\n      // RSTx\n      offset += 2;\n    } else {\n      break;\n    }\n  }\n\n  return offset - startOffset;\n}\n\n// A port of poppler's IDCT method which in turn is taken from:\n//   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n//   'Practical Fast 1-D DCT Algorithms with 11 Multiplications',\n//   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n//   988-991.\nfunction quantizeAndInverse(component, blockBufferOffset, p) {\n  const qt = component.quantizationTable,\n    blockData = component.blockData;\n  let v0, v1, v2, v3, v4, v5, v6, v7;\n  let p0, p1, p2, p3, p4, p5, p6, p7;\n  let t;\n\n  if (!qt) {\n    throw new JpegError(\"missing required Quantization Table.\");\n  }\n\n  // inverse DCT on rows\n  for (let row = 0; row < 64; row += 8) {\n    // gather block data\n    p0 = blockData[blockBufferOffset + row];\n    p1 = blockData[blockBufferOffset + row + 1];\n    p2 = blockData[blockBufferOffset + row + 2];\n    p3 = blockData[blockBufferOffset + row + 3];\n    p4 = blockData[blockBufferOffset + row + 4];\n    p5 = blockData[blockBufferOffset + row + 5];\n    p6 = blockData[blockBufferOffset + row + 6];\n    p7 = blockData[blockBufferOffset + row + 7];\n\n    // dequant p0\n    p0 *= qt[row];\n\n    // check for all-zero AC coefficients\n    if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n      t = (dctSqrt2 * p0 + 512) >> 10;\n      p[row] = t;\n      p[row + 1] = t;\n      p[row + 2] = t;\n      p[row + 3] = t;\n      p[row + 4] = t;\n      p[row + 5] = t;\n      p[row + 6] = t;\n      p[row + 7] = t;\n      continue;\n    }\n    // dequant p1 ... p7\n    p1 *= qt[row + 1];\n    p2 *= qt[row + 2];\n    p3 *= qt[row + 3];\n    p4 *= qt[row + 4];\n    p5 *= qt[row + 5];\n    p6 *= qt[row + 6];\n    p7 *= qt[row + 7];\n\n    // stage 4\n    v0 = (dctSqrt2 * p0 + 128) >> 8;\n    v1 = (dctSqrt2 * p4 + 128) >> 8;\n    v2 = p2;\n    v3 = p6;\n    v4 = (dctSqrt1d2 * (p1 - p7) + 128) >> 8;\n    v7 = (dctSqrt1d2 * (p1 + p7) + 128) >> 8;\n    v5 = p3 << 4;\n    v6 = p5 << 4;\n\n    // stage 3\n    v0 = (v0 + v1 + 1) >> 1;\n    v1 = v0 - v1;\n    t = (v2 * dctSin6 + v3 * dctCos6 + 128) >> 8;\n    v2 = (v2 * dctCos6 - v3 * dctSin6 + 128) >> 8;\n    v3 = t;\n    v4 = (v4 + v6 + 1) >> 1;\n    v6 = v4 - v6;\n    v7 = (v7 + v5 + 1) >> 1;\n    v5 = v7 - v5;\n\n    // stage 2\n    v0 = (v0 + v3 + 1) >> 1;\n    v3 = v0 - v3;\n    v1 = (v1 + v2 + 1) >> 1;\n    v2 = v1 - v2;\n    t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n    v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n    v7 = t;\n    t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n    v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n    v6 = t;\n\n    // stage 1\n    p[row] = v0 + v7;\n    p[row + 7] = v0 - v7;\n    p[row + 1] = v1 + v6;\n    p[row + 6] = v1 - v6;\n    p[row + 2] = v2 + v5;\n    p[row + 5] = v2 - v5;\n    p[row + 3] = v3 + v4;\n    p[row + 4] = v3 - v4;\n  }\n\n  // inverse DCT on columns\n  for (let col = 0; col < 8; ++col) {\n    p0 = p[col];\n    p1 = p[col + 8];\n    p2 = p[col + 16];\n    p3 = p[col + 24];\n    p4 = p[col + 32];\n    p5 = p[col + 40];\n    p6 = p[col + 48];\n    p7 = p[col + 56];\n\n    // check for all-zero AC coefficients\n    if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n      t = (dctSqrt2 * p0 + 8192) >> 14;\n      // Convert to 8-bit.\n      if (t < -2040) {\n        t = 0;\n      } else if (t >= 2024) {\n        t = 255;\n      } else {\n        t = (t + 2056) >> 4;\n      }\n      blockData[blockBufferOffset + col] = t;\n      blockData[blockBufferOffset + col + 8] = t;\n      blockData[blockBufferOffset + col + 16] = t;\n      blockData[blockBufferOffset + col + 24] = t;\n      blockData[blockBufferOffset + col + 32] = t;\n      blockData[blockBufferOffset + col + 40] = t;\n      blockData[blockBufferOffset + col + 48] = t;\n      blockData[blockBufferOffset + col + 56] = t;\n      continue;\n    }\n\n    // stage 4\n    v0 = (dctSqrt2 * p0 + 2048) >> 12;\n    v1 = (dctSqrt2 * p4 + 2048) >> 12;\n    v2 = p2;\n    v3 = p6;\n    v4 = (dctSqrt1d2 * (p1 - p7) + 2048) >> 12;\n    v7 = (dctSqrt1d2 * (p1 + p7) + 2048) >> 12;\n    v5 = p3;\n    v6 = p5;\n\n    // stage 3\n    // Shift v0 by 128.5 << 5 here, so we don't need to shift p0...p7 when\n    // converting to UInt8 range later.\n    v0 = ((v0 + v1 + 1) >> 1) + 4112;\n    v1 = v0 - v1;\n    t = (v2 * dctSin6 + v3 * dctCos6 + 2048) >> 12;\n    v2 = (v2 * dctCos6 - v3 * dctSin6 + 2048) >> 12;\n    v3 = t;\n    v4 = (v4 + v6 + 1) >> 1;\n    v6 = v4 - v6;\n    v7 = (v7 + v5 + 1) >> 1;\n    v5 = v7 - v5;\n\n    // stage 2\n    v0 = (v0 + v3 + 1) >> 1;\n    v3 = v0 - v3;\n    v1 = (v1 + v2 + 1) >> 1;\n    v2 = v1 - v2;\n    t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n    v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n    v7 = t;\n    t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n    v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n    v6 = t;\n\n    // stage 1\n    p0 = v0 + v7;\n    p7 = v0 - v7;\n    p1 = v1 + v6;\n    p6 = v1 - v6;\n    p2 = v2 + v5;\n    p5 = v2 - v5;\n    p3 = v3 + v4;\n    p4 = v3 - v4;\n\n    // Convert to 8-bit integers.\n    if (p0 < 16) {\n      p0 = 0;\n    } else if (p0 >= 4080) {\n      p0 = 255;\n    } else {\n      p0 >>= 4;\n    }\n    if (p1 < 16) {\n      p1 = 0;\n    } else if (p1 >= 4080) {\n      p1 = 255;\n    } else {\n      p1 >>= 4;\n    }\n    if (p2 < 16) {\n      p2 = 0;\n    } else if (p2 >= 4080) {\n      p2 = 255;\n    } else {\n      p2 >>= 4;\n    }\n    if (p3 < 16) {\n      p3 = 0;\n    } else if (p3 >= 4080) {\n      p3 = 255;\n    } else {\n      p3 >>= 4;\n    }\n    if (p4 < 16) {\n      p4 = 0;\n    } else if (p4 >= 4080) {\n      p4 = 255;\n    } else {\n      p4 >>= 4;\n    }\n    if (p5 < 16) {\n      p5 = 0;\n    } else if (p5 >= 4080) {\n      p5 = 255;\n    } else {\n      p5 >>= 4;\n    }\n    if (p6 < 16) {\n      p6 = 0;\n    } else if (p6 >= 4080) {\n      p6 = 255;\n    } else {\n      p6 >>= 4;\n    }\n    if (p7 < 16) {\n      p7 = 0;\n    } else if (p7 >= 4080) {\n      p7 = 255;\n    } else {\n      p7 >>= 4;\n    }\n\n    // store block data\n    blockData[blockBufferOffset + col] = p0;\n    blockData[blockBufferOffset + col + 8] = p1;\n    blockData[blockBufferOffset + col + 16] = p2;\n    blockData[blockBufferOffset + col + 24] = p3;\n    blockData[blockBufferOffset + col + 32] = p4;\n    blockData[blockBufferOffset + col + 40] = p5;\n    blockData[blockBufferOffset + col + 48] = p6;\n    blockData[blockBufferOffset + col + 56] = p7;\n  }\n}\n\nfunction buildComponentData(frame, component) {\n  const blocksPerLine = component.blocksPerLine;\n  const blocksPerColumn = component.blocksPerColumn;\n  const computationBuffer = new Int16Array(64);\n\n  for (let blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n    for (let blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n      const offset = getBlockBufferOffset(component, blockRow, blockCol);\n      quantizeAndInverse(component, offset, computationBuffer);\n    }\n  }\n  return component.blockData;\n}\n\nfunction findNextFileMarker(data, currentPos, startPos = currentPos) {\n  const maxPos = data.length - 1;\n  let newPos = startPos < currentPos ? startPos : currentPos;\n\n  if (currentPos >= maxPos) {\n    return null; // Don't attempt to read non-existent data and just return.\n  }\n  const currentMarker = readUint16(data, currentPos);\n  if (currentMarker >= 0xffc0 && currentMarker <= 0xfffe) {\n    return {\n      invalid: null,\n      marker: currentMarker,\n      offset: currentPos,\n    };\n  }\n  let newMarker = readUint16(data, newPos);\n  while (!(newMarker >= 0xffc0 && newMarker <= 0xfffe)) {\n    if (++newPos >= maxPos) {\n      return null; // Don't attempt to read non-existent data and just return.\n    }\n    newMarker = readUint16(data, newPos);\n  }\n  return {\n    invalid: currentMarker.toString(16),\n    marker: newMarker,\n    offset: newPos,\n  };\n}\n\nclass JpegImage {\n  constructor({ decodeTransform = null, colorTransform = -1 } = {}) {\n    this._decodeTransform = decodeTransform;\n    this._colorTransform = colorTransform;\n  }\n\n  parse(data, { dnlScanLines = null } = {}) {\n    function readDataBlock() {\n      const length = readUint16(data, offset);\n      offset += 2;\n      let endOffset = offset + length - 2;\n\n      const fileMarker = findNextFileMarker(data, endOffset, offset);\n      if (fileMarker && fileMarker.invalid) {\n        warn(\n          \"readDataBlock - incorrect length, current marker is: \" +\n            fileMarker.invalid\n        );\n        endOffset = fileMarker.offset;\n      }\n\n      const array = data.subarray(offset, endOffset);\n      offset += array.length;\n      return array;\n    }\n\n    function prepareComponents(frame) {\n      const mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n      const mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n      for (let i = 0, ii = frame.components.length; i < ii; i++) {\n        const component = frame.components[i];\n        const blocksPerLine = Math.ceil(\n          (Math.ceil(frame.samplesPerLine / 8) * component.h) / frame.maxH\n        );\n        const blocksPerColumn = Math.ceil(\n          (Math.ceil(frame.scanLines / 8) * component.v) / frame.maxV\n        );\n        const blocksPerLineForMcu = mcusPerLine * component.h;\n        const blocksPerColumnForMcu = mcusPerColumn * component.v;\n\n        const blocksBufferSize =\n          64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n        component.blockData = new Int16Array(blocksBufferSize);\n        component.blocksPerLine = blocksPerLine;\n        component.blocksPerColumn = blocksPerColumn;\n      }\n      frame.mcusPerLine = mcusPerLine;\n      frame.mcusPerColumn = mcusPerColumn;\n    }\n\n    let offset = 0;\n    let jfif = null;\n    let adobe = null;\n    let frame, resetInterval;\n    let numSOSMarkers = 0;\n    const quantizationTables = [];\n    const huffmanTablesAC = [],\n      huffmanTablesDC = [];\n\n    let fileMarker = readUint16(data, offset);\n    offset += 2;\n    if (fileMarker !== /* SOI (Start of Image) = */ 0xffd8) {\n      throw new JpegError(\"SOI not found\");\n    }\n    fileMarker = readUint16(data, offset);\n    offset += 2;\n\n    markerLoop: while (fileMarker !== /* EOI (End of Image) = */ 0xffd9) {\n      let i, j, l;\n      switch (fileMarker) {\n        case 0xffe0: // APP0 (Application Specific)\n        case 0xffe1: // APP1\n        case 0xffe2: // APP2\n        case 0xffe3: // APP3\n        case 0xffe4: // APP4\n        case 0xffe5: // APP5\n        case 0xffe6: // APP6\n        case 0xffe7: // APP7\n        case 0xffe8: // APP8\n        case 0xffe9: // APP9\n        case 0xffea: // APP10\n        case 0xffeb: // APP11\n        case 0xffec: // APP12\n        case 0xffed: // APP13\n        case 0xffee: // APP14\n        case 0xffef: // APP15\n        case 0xfffe: // COM (Comment)\n          const appData = readDataBlock();\n\n          if (fileMarker === 0xffe0) {\n            // 'JFIF\\x00'\n            if (\n              appData[0] === 0x4a &&\n              appData[1] === 0x46 &&\n              appData[2] === 0x49 &&\n              appData[3] === 0x46 &&\n              appData[4] === 0\n            ) {\n              jfif = {\n                version: { major: appData[5], minor: appData[6] },\n                densityUnits: appData[7],\n                xDensity: (appData[8] << 8) | appData[9],\n                yDensity: (appData[10] << 8) | appData[11],\n                thumbWidth: appData[12],\n                thumbHeight: appData[13],\n                thumbData: appData.subarray(\n                  14,\n                  14 + 3 * appData[12] * appData[13]\n                ),\n              };\n            }\n          }\n          // TODO APP1 - Exif\n          if (fileMarker === 0xffee) {\n            // 'Adobe'\n            if (\n              appData[0] === 0x41 &&\n              appData[1] === 0x64 &&\n              appData[2] === 0x6f &&\n              appData[3] === 0x62 &&\n              appData[4] === 0x65\n            ) {\n              adobe = {\n                version: (appData[5] << 8) | appData[6],\n                flags0: (appData[7] << 8) | appData[8],\n                flags1: (appData[9] << 8) | appData[10],\n                transformCode: appData[11],\n              };\n            }\n          }\n          break;\n\n        case 0xffdb: // DQT (Define Quantization Tables)\n          const quantizationTablesLength = readUint16(data, offset);\n          offset += 2;\n          const quantizationTablesEnd = quantizationTablesLength + offset - 2;\n          let z;\n          while (offset < quantizationTablesEnd) {\n            const quantizationTableSpec = data[offset++];\n            const tableData = new Uint16Array(64);\n            if (quantizationTableSpec >> 4 === 0) {\n              // 8 bit values\n              for (j = 0; j < 64; j++) {\n                z = dctZigZag[j];\n                tableData[z] = data[offset++];\n              }\n            } else if (quantizationTableSpec >> 4 === 1) {\n              // 16 bit values\n              for (j = 0; j < 64; j++) {\n                z = dctZigZag[j];\n                tableData[z] = readUint16(data, offset);\n                offset += 2;\n              }\n            } else {\n              throw new JpegError(\"DQT - invalid table spec\");\n            }\n            quantizationTables[quantizationTableSpec & 15] = tableData;\n          }\n          break;\n\n        case 0xffc0: // SOF0 (Start of Frame, Baseline DCT)\n        case 0xffc1: // SOF1 (Start of Frame, Extended DCT)\n        case 0xffc2: // SOF2 (Start of Frame, Progressive DCT)\n          if (frame) {\n            throw new JpegError(\"Only single frame JPEGs supported\");\n          }\n          offset += 2; // Skip marker length.\n\n          frame = {};\n          frame.extended = fileMarker === 0xffc1;\n          frame.progressive = fileMarker === 0xffc2;\n          frame.precision = data[offset++];\n          const sofScanLines = readUint16(data, offset);\n          offset += 2;\n          frame.scanLines = dnlScanLines || sofScanLines;\n          frame.samplesPerLine = readUint16(data, offset);\n          offset += 2;\n          frame.components = [];\n          frame.componentIds = {};\n          const componentsCount = data[offset++];\n          let maxH = 0,\n            maxV = 0;\n          for (i = 0; i < componentsCount; i++) {\n            const componentId = data[offset];\n            const h = data[offset + 1] >> 4;\n            const v = data[offset + 1] & 15;\n            if (maxH < h) {\n              maxH = h;\n            }\n            if (maxV < v) {\n              maxV = v;\n            }\n            const qId = data[offset + 2];\n            l = frame.components.push({\n              h,\n              v,\n              quantizationId: qId,\n              quantizationTable: null, // See comment below.\n            });\n            frame.componentIds[componentId] = l - 1;\n            offset += 3;\n          }\n          frame.maxH = maxH;\n          frame.maxV = maxV;\n          prepareComponents(frame);\n          break;\n\n        case 0xffc4: // DHT (Define Huffman Tables)\n          const huffmanLength = readUint16(data, offset);\n          offset += 2;\n          for (i = 2; i < huffmanLength; ) {\n            const huffmanTableSpec = data[offset++];\n            const codeLengths = new Uint8Array(16);\n            let codeLengthSum = 0;\n            for (j = 0; j < 16; j++, offset++) {\n              codeLengthSum += codeLengths[j] = data[offset];\n            }\n            const huffmanValues = new Uint8Array(codeLengthSum);\n            for (j = 0; j < codeLengthSum; j++, offset++) {\n              huffmanValues[j] = data[offset];\n            }\n            i += 17 + codeLengthSum;\n\n            (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[\n              huffmanTableSpec & 15\n            ] = buildHuffmanTable(codeLengths, huffmanValues);\n          }\n          break;\n\n        case 0xffdd: // DRI (Define Restart Interval)\n          offset += 2; // Skip marker length.\n\n          resetInterval = readUint16(data, offset);\n          offset += 2;\n          break;\n\n        case 0xffda: // SOS (Start of Scan)\n          // A DNL marker (0xFFDC), if it exists, is only allowed at the end\n          // of the first scan segment and may only occur once in an image.\n          // Furthermore, to prevent an infinite loop, do *not* attempt to\n          // parse DNL markers during re-parsing of the JPEG scan data.\n          const parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n\n          offset += 2; // Skip marker length.\n\n          const selectorsCount = data[offset++],\n            components = [];\n          for (i = 0; i < selectorsCount; i++) {\n            const index = data[offset++];\n            const componentIndex = frame.componentIds[index];\n            const component = frame.components[componentIndex];\n            component.index = index;\n            const tableSpec = data[offset++];\n            component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n            component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n            components.push(component);\n          }\n          const spectralStart = data[offset++],\n            spectralEnd = data[offset++],\n            successiveApproximation = data[offset++];\n          try {\n            const processed = decodeScan(\n              data,\n              offset,\n              frame,\n              components,\n              resetInterval,\n              spectralStart,\n              spectralEnd,\n              successiveApproximation >> 4,\n              successiveApproximation & 15,\n              parseDNLMarker\n            );\n            offset += processed;\n          } catch (ex) {\n            if (ex instanceof DNLMarkerError) {\n              warn(`${ex.message} -- attempting to re-parse the JPEG image.`);\n              return this.parse(data, { dnlScanLines: ex.scanLines });\n            } else if (ex instanceof EOIMarkerError) {\n              warn(`${ex.message} -- ignoring the rest of the image data.`);\n              break markerLoop;\n            }\n            throw ex;\n          }\n          break;\n\n        case 0xffdc: // DNL (Define Number of Lines)\n          // Ignore the marker, since it's being handled in `decodeScan`.\n          offset += 4;\n          break;\n\n        case 0xffff: // Fill bytes\n          if (data[offset] !== 0xff) {\n            // Avoid skipping a valid marker.\n            offset--;\n          }\n          break;\n\n        default:\n          // Could be incorrect encoding -- the last 0xFF byte of the previous\n          // block could have been eaten by the encoder, hence we fallback to\n          // `startPos = offset - 3` when looking for the next valid marker.\n          const nextFileMarker = findNextFileMarker(\n            data,\n            /* currentPos = */ offset - 2,\n            /* startPos = */ offset - 3\n          );\n          if (nextFileMarker && nextFileMarker.invalid) {\n            warn(\n              \"JpegImage.parse - unexpected data, current marker is: \" +\n                nextFileMarker.invalid\n            );\n            offset = nextFileMarker.offset;\n            break;\n          }\n          if (!nextFileMarker || offset >= data.length - 1) {\n            warn(\n              \"JpegImage.parse - reached the end of the image data \" +\n                \"without finding an EOI marker (0xFFD9).\"\n            );\n            break markerLoop;\n          }\n          throw new JpegError(\n            \"JpegImage.parse - unknown marker: \" + fileMarker.toString(16)\n          );\n      }\n      fileMarker = readUint16(data, offset);\n      offset += 2;\n    }\n\n    this.width = frame.samplesPerLine;\n    this.height = frame.scanLines;\n    this.jfif = jfif;\n    this.adobe = adobe;\n    this.components = [];\n    for (let i = 0, ii = frame.components.length; i < ii; i++) {\n      const component = frame.components[i];\n\n      // Prevent errors when DQT markers are placed after SOF{n} markers,\n      // by assigning the `quantizationTable` entry after the entire image\n      // has been parsed (fixes issue7406.pdf).\n      const quantizationTable = quantizationTables[component.quantizationId];\n      if (quantizationTable) {\n        component.quantizationTable = quantizationTable;\n      }\n\n      this.components.push({\n        index: component.index,\n        output: buildComponentData(frame, component),\n        scaleX: component.h / frame.maxH,\n        scaleY: component.v / frame.maxV,\n        blocksPerLine: component.blocksPerLine,\n        blocksPerColumn: component.blocksPerColumn,\n      });\n    }\n    this.numComponents = this.components.length;\n    return undefined;\n  }\n\n  _getLinearizedBlockData(width, height, isSourcePDF = false) {\n    const scaleX = this.width / width,\n      scaleY = this.height / height;\n\n    let component, componentScaleX, componentScaleY, blocksPerScanline;\n    let x, y, i, j, k;\n    let index;\n    let offset = 0;\n    let output;\n    const numComponents = this.components.length;\n    const dataLength = width * height * numComponents;\n    const data = new Uint8ClampedArray(dataLength);\n    const xScaleBlockOffset = new Uint32Array(width);\n    const mask3LSB = 0xfffffff8; // used to clear the 3 LSBs\n    let lastComponentScaleX;\n\n    for (i = 0; i < numComponents; i++) {\n      component = this.components[i];\n      componentScaleX = component.scaleX * scaleX;\n      componentScaleY = component.scaleY * scaleY;\n      offset = i;\n      output = component.output;\n      blocksPerScanline = (component.blocksPerLine + 1) << 3;\n      // Precalculate the `xScaleBlockOffset`. Since it doesn't depend on the\n      // component data, that's only necessary when `componentScaleX` changes.\n      if (componentScaleX !== lastComponentScaleX) {\n        for (x = 0; x < width; x++) {\n          j = 0 | (x * componentScaleX);\n          xScaleBlockOffset[x] = ((j & mask3LSB) << 3) | (j & 7);\n        }\n        lastComponentScaleX = componentScaleX;\n      }\n      // linearize the blocks of the component\n      for (y = 0; y < height; y++) {\n        j = 0 | (y * componentScaleY);\n        index = (blocksPerScanline * (j & mask3LSB)) | ((j & 7) << 3);\n        for (x = 0; x < width; x++) {\n          data[offset] = output[index + xScaleBlockOffset[x]];\n          offset += numComponents;\n        }\n      }\n    }\n\n    // decodeTransform contains pairs of multiplier (-256..256) and additive\n    let transform = this._decodeTransform;\n\n    // In PDF files, JPEG images with CMYK colour spaces are usually inverted\n    // (this can be observed by extracting the raw image data).\n    // Since the conversion algorithms (see below) were written primarily for\n    // the PDF use-cases, attempting to use `JpegImage` to parse standalone\n    // JPEG (CMYK) images may thus result in inverted images (see issue 9513).\n    //\n    // Unfortunately it's not (always) possible to tell, from the image data\n    // alone, if it needs to be inverted. Thus in an attempt to provide better\n    // out-of-box behaviour when `JpegImage` is used standalone, default to\n    // inverting JPEG (CMYK) images if and only if the image data does *not*\n    // come from a PDF file and no `decodeTransform` was passed by the user.\n    if (!isSourcePDF && numComponents === 4 && !transform) {\n      transform = new Int32Array([-256, 255, -256, 255, -256, 255, -256, 255]);\n    }\n\n    if (transform) {\n      for (i = 0; i < dataLength; ) {\n        for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n          data[i] = ((data[i] * transform[k]) >> 8) + transform[k + 1];\n        }\n      }\n    }\n    return data;\n  }\n\n  get _isColorConversionNeeded() {\n    if (this.adobe) {\n      // The adobe transform marker overrides any previous setting.\n      return !!this.adobe.transformCode;\n    }\n    if (this.numComponents === 3) {\n      if (this._colorTransform === 0) {\n        // If the Adobe transform marker is not present and the image\n        // dictionary has a 'ColorTransform' entry, explicitly set to `0`,\n        // then the colours should *not* be transformed.\n        return false;\n      } else if (\n        this.components[0].index === /* \"R\" = */ 0x52 &&\n        this.components[1].index === /* \"G\" = */ 0x47 &&\n        this.components[2].index === /* \"B\" = */ 0x42\n      ) {\n        // If the three components are indexed as RGB in ASCII\n        // then the colours should *not* be transformed.\n        return false;\n      }\n      return true;\n    }\n    // `this.numComponents !== 3`\n    if (this._colorTransform === 1) {\n      // If the Adobe transform marker is not present and the image\n      // dictionary has a 'ColorTransform' entry, explicitly set to `1`,\n      // then the colours should be transformed.\n      return true;\n    }\n    return false;\n  }\n\n  _convertYccToRgb(data) {\n    let Y, Cb, Cr;\n    for (let i = 0, length = data.length; i < length; i += 3) {\n      Y = data[i];\n      Cb = data[i + 1];\n      Cr = data[i + 2];\n      data[i] = Y - 179.456 + 1.402 * Cr;\n      data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n      data[i + 2] = Y - 226.816 + 1.772 * Cb;\n    }\n    return data;\n  }\n\n  _convertYcckToRgb(data) {\n    let Y, Cb, Cr, k;\n    let offset = 0;\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      Y = data[i];\n      Cb = data[i + 1];\n      Cr = data[i + 2];\n      k = data[i + 3];\n\n      data[offset++] =\n        -122.67195406894 +\n        Cb *\n          (-6.60635669420364e-5 * Cb +\n            0.000437130475926232 * Cr -\n            5.4080610064599e-5 * Y +\n            0.00048449797120281 * k -\n            0.154362151871126) +\n        Cr *\n          (-0.000957964378445773 * Cr +\n            0.000817076911346625 * Y -\n            0.00477271405408747 * k +\n            1.53380253221734) +\n        Y *\n          (0.000961250184130688 * Y -\n            0.00266257332283933 * k +\n            0.48357088451265) +\n        k * (-0.000336197177618394 * k + 0.484791561490776);\n\n      data[offset++] =\n        107.268039397724 +\n        Cb *\n          (2.19927104525741e-5 * Cb -\n            0.000640992018297945 * Cr +\n            0.000659397001245577 * Y +\n            0.000426105652938837 * k -\n            0.176491792462875) +\n        Cr *\n          (-0.000778269941513683 * Cr +\n            0.00130872261408275 * Y +\n            0.000770482631801132 * k -\n            0.151051492775562) +\n        Y *\n          (0.00126935368114843 * Y -\n            0.00265090189010898 * k +\n            0.25802910206845) +\n        k * (-0.000318913117588328 * k - 0.213742400323665);\n\n      data[offset++] =\n        -20.810012546947 +\n        Cb *\n          (-0.000570115196973677 * Cb -\n            2.63409051004589e-5 * Cr +\n            0.0020741088115012 * Y -\n            0.00288260236853442 * k +\n            0.814272968359295) +\n        Cr *\n          (-1.53496057440975e-5 * Cr -\n            0.000132689043961446 * Y +\n            0.000560833691242812 * k -\n            0.195152027534049) +\n        Y *\n          (0.00174418132927582 * Y -\n            0.00255243321439347 * k +\n            0.116935020465145) +\n        k * (-0.000343531996510555 * k + 0.24165260232407);\n    }\n    // Ensure that only the converted RGB data is returned.\n    return data.subarray(0, offset);\n  }\n\n  _convertYcckToCmyk(data) {\n    let Y, Cb, Cr;\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      Y = data[i];\n      Cb = data[i + 1];\n      Cr = data[i + 2];\n      data[i] = 434.456 - Y - 1.402 * Cr;\n      data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n      data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      // K in data[i + 3] is unchanged\n    }\n    return data;\n  }\n\n  _convertCmykToRgb(data) {\n    let c, m, y, k;\n    let offset = 0;\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      c = data[i];\n      m = data[i + 1];\n      y = data[i + 2];\n      k = data[i + 3];\n\n      data[offset++] =\n        255 +\n        c *\n          (-0.00006747147073602441 * c +\n            0.0008379262121013727 * m +\n            0.0002894718188643294 * y +\n            0.003264231057537806 * k -\n            1.1185611867203937) +\n        m *\n          (0.000026374107616089405 * m -\n            0.00008626949158638572 * y -\n            0.0002748769067499491 * k -\n            0.02155688794978967) +\n        y *\n          (-0.00003878099212869363 * y -\n            0.0003267808279485286 * k +\n            0.0686742238595345) -\n        k * (0.0003361971776183937 * k + 0.7430659151342254);\n\n      data[offset++] =\n        255 +\n        c *\n          (0.00013596372813588848 * c +\n            0.000924537132573585 * m +\n            0.00010567359618683593 * y +\n            0.0004791864687436512 * k -\n            0.3109689587515875) +\n        m *\n          (-0.00023545346108370344 * m +\n            0.0002702845253534714 * y +\n            0.0020200308977307156 * k -\n            0.7488052167015494) +\n        y *\n          (0.00006834815998235662 * y +\n            0.00015168452363460973 * k -\n            0.09751927774728933) -\n        k * (0.0003189131175883281 * k + 0.7364883807733168);\n\n      data[offset++] =\n        255 +\n        c *\n          (0.000013598650411385307 * c +\n            0.00012423956175490851 * m +\n            0.0004751985097583589 * y -\n            0.0000036729317476630422 * k -\n            0.05562186980264034) +\n        m *\n          (0.00016141380598724676 * m +\n            0.0009692239130725186 * y +\n            0.0007782692450036253 * k -\n            0.44015232367526463) +\n        y *\n          (5.068882914068769e-7 * y +\n            0.0017778369011375071 * k -\n            0.7591454649749609) -\n        k * (0.0003435319965105553 * k + 0.7063770186160144);\n    }\n    // Ensure that only the converted RGB data is returned.\n    return data.subarray(0, offset);\n  }\n\n  getData({ width, height, forceRGB = false, isSourcePDF = false }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        isSourcePDF === true,\n        'JpegImage.getData: Unexpected \"isSourcePDF\" value for PDF files.'\n      );\n    }\n    if (this.numComponents > 4) {\n      throw new JpegError(\"Unsupported color mode\");\n    }\n    // Type of data: Uint8ClampedArray(width * height * numComponents)\n    const data = this._getLinearizedBlockData(width, height, isSourcePDF);\n\n    if (this.numComponents === 1 && forceRGB) {\n      const dataLength = data.length;\n      const rgbData = new Uint8ClampedArray(dataLength * 3);\n      let offset = 0;\n      for (let i = 0; i < dataLength; i++) {\n        const grayColor = data[i];\n        rgbData[offset++] = grayColor;\n        rgbData[offset++] = grayColor;\n        rgbData[offset++] = grayColor;\n      }\n      return rgbData;\n    } else if (this.numComponents === 3 && this._isColorConversionNeeded) {\n      return this._convertYccToRgb(data);\n    } else if (this.numComponents === 4) {\n      if (this._isColorConversionNeeded) {\n        if (forceRGB) {\n          return this._convertYcckToRgb(data);\n        }\n        return this._convertYcckToCmyk(data);\n      } else if (forceRGB) {\n        return this._convertCmykToRgb(data);\n      }\n    }\n    return data;\n  }\n}\n\nexport { JpegImage };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseException, info, unreachable, warn } from \"../shared/util.js\";\nimport { log2, readUint16, readUint32 } from \"./core_utils.js\";\nimport { ArithmeticDecoder } from \"./arithmetic_decoder.js\";\n\nclass JpxError extends BaseException {\n  constructor(msg) {\n    super(`JPX error: ${msg}`, \"JpxError\");\n  }\n}\n\n// Table E.1\nconst SubbandsGainLog2 = {\n  LL: 0,\n  LH: 1,\n  HL: 1,\n  HH: 2,\n};\n\nclass JpxImage {\n  constructor() {\n    this.failOnCorruptedImage = false;\n  }\n\n  parse(data) {\n    const head = readUint16(data, 0);\n    // No box header, immediate start of codestream (SOC)\n    if (head === 0xff4f) {\n      this.parseCodestream(data, 0, data.length);\n      return;\n    }\n\n    const length = data.length;\n    let position = 0;\n    while (position < length) {\n      let headerSize = 8;\n      let lbox = readUint32(data, position);\n      const tbox = readUint32(data, position + 4);\n      position += headerSize;\n      if (lbox === 1) {\n        // XLBox: read UInt64 according to spec.\n        // JavaScript's int precision of 53 bit should be sufficient here.\n        lbox =\n          readUint32(data, position) * 4294967296 +\n          readUint32(data, position + 4);\n        position += 8;\n        headerSize += 8;\n      }\n      if (lbox === 0) {\n        lbox = length - position + headerSize;\n      }\n      if (lbox < headerSize) {\n        throw new JpxError(\"Invalid box field size\");\n      }\n      const dataLength = lbox - headerSize;\n      let jumpDataLength = true;\n      switch (tbox) {\n        case 0x6a703268: // 'jp2h'\n          jumpDataLength = false; // parsing child boxes\n          break;\n        case 0x636f6c72: // 'colr'\n          // Colorspaces are not used, the CS from the PDF is used.\n          const method = data[position];\n          if (method === 1) {\n            // enumerated colorspace\n            const colorspace = readUint32(data, position + 3);\n            switch (colorspace) {\n              case 16: // this indicates a sRGB colorspace\n              case 17: // this indicates a grayscale colorspace\n              case 18: // this indicates a YUV colorspace\n                break;\n              default:\n                warn(\"Unknown colorspace \" + colorspace);\n                break;\n            }\n          } else if (method === 2) {\n            info(\"ICC profile not supported\");\n          }\n          break;\n        case 0x6a703263: // 'jp2c'\n          this.parseCodestream(data, position, position + dataLength);\n          break;\n        case 0x6a502020: // 'jP\\024\\024'\n          if (readUint32(data, position) !== 0x0d0a870a) {\n            warn(\"Invalid JP2 signature\");\n          }\n          break;\n        // The following header types are valid but currently not used:\n        case 0x6a501a1a: // 'jP\\032\\032'\n        case 0x66747970: // 'ftyp'\n        case 0x72726571: // 'rreq'\n        case 0x72657320: // 'res '\n        case 0x69686472: // 'ihdr'\n          break;\n        default:\n          const headerType = String.fromCharCode(\n            (tbox >> 24) & 0xff,\n            (tbox >> 16) & 0xff,\n            (tbox >> 8) & 0xff,\n            tbox & 0xff\n          );\n          warn(`Unsupported header type ${tbox} (${headerType}).`);\n          break;\n      }\n      if (jumpDataLength) {\n        position += dataLength;\n      }\n    }\n  }\n\n  parseImageProperties(stream) {\n    let newByte = stream.getByte();\n    while (newByte >= 0) {\n      const oldByte = newByte;\n      newByte = stream.getByte();\n      const code = (oldByte << 8) | newByte;\n      // Image and tile size (SIZ)\n      if (code === 0xff51) {\n        stream.skip(4);\n        const Xsiz = stream.getInt32() >>> 0; // Byte 4\n        const Ysiz = stream.getInt32() >>> 0; // Byte 8\n        const XOsiz = stream.getInt32() >>> 0; // Byte 12\n        const YOsiz = stream.getInt32() >>> 0; // Byte 16\n        stream.skip(16);\n        const Csiz = stream.getUint16(); // Byte 36\n        this.width = Xsiz - XOsiz;\n        this.height = Ysiz - YOsiz;\n        this.componentsCount = Csiz;\n        // Results are always returned as `Uint8ClampedArray`s.\n        this.bitsPerComponent = 8;\n        return;\n      }\n    }\n    throw new JpxError(\"No size marker found in JPX stream\");\n  }\n\n  parseCodestream(data, start, end) {\n    const context = {};\n    let doNotRecover = false;\n    try {\n      let position = start;\n      while (position + 1 < end) {\n        const code = readUint16(data, position);\n        position += 2;\n\n        let length = 0,\n          j,\n          sqcd,\n          spqcds,\n          spqcdSize,\n          scalarExpounded,\n          tile;\n        switch (code) {\n          case 0xff4f: // Start of codestream (SOC)\n            context.mainHeader = true;\n            break;\n          case 0xffd9: // End of codestream (EOC)\n            break;\n          case 0xff51: // Image and tile size (SIZ)\n            length = readUint16(data, position);\n            const siz = {};\n            siz.Xsiz = readUint32(data, position + 4);\n            siz.Ysiz = readUint32(data, position + 8);\n            siz.XOsiz = readUint32(data, position + 12);\n            siz.YOsiz = readUint32(data, position + 16);\n            siz.XTsiz = readUint32(data, position + 20);\n            siz.YTsiz = readUint32(data, position + 24);\n            siz.XTOsiz = readUint32(data, position + 28);\n            siz.YTOsiz = readUint32(data, position + 32);\n            const componentsCount = readUint16(data, position + 36);\n            siz.Csiz = componentsCount;\n            const components = [];\n            j = position + 38;\n            for (let i = 0; i < componentsCount; i++) {\n              const component = {\n                precision: (data[j] & 0x7f) + 1,\n                isSigned: !!(data[j] & 0x80),\n                XRsiz: data[j + 1],\n                YRsiz: data[j + 2],\n              };\n              j += 3;\n              calculateComponentDimensions(component, siz);\n              components.push(component);\n            }\n            context.SIZ = siz;\n            context.components = components;\n            calculateTileGrids(context, components);\n            context.QCC = [];\n            context.COC = [];\n            break;\n          case 0xff5c: // Quantization default (QCD)\n            length = readUint16(data, position);\n            const qcd = {};\n            j = position + 2;\n            sqcd = data[j++];\n            switch (sqcd & 0x1f) {\n              case 0:\n                spqcdSize = 8;\n                scalarExpounded = true;\n                break;\n              case 1:\n                spqcdSize = 16;\n                scalarExpounded = false;\n                break;\n              case 2:\n                spqcdSize = 16;\n                scalarExpounded = true;\n                break;\n              default:\n                throw new Error(\"Invalid SQcd value \" + sqcd);\n            }\n            qcd.noQuantization = spqcdSize === 8;\n            qcd.scalarExpounded = scalarExpounded;\n            qcd.guardBits = sqcd >> 5;\n            spqcds = [];\n            while (j < length + position) {\n              const spqcd = {};\n              if (spqcdSize === 8) {\n                spqcd.epsilon = data[j++] >> 3;\n                spqcd.mu = 0;\n              } else {\n                spqcd.epsilon = data[j] >> 3;\n                spqcd.mu = ((data[j] & 0x7) << 8) | data[j + 1];\n                j += 2;\n              }\n              spqcds.push(spqcd);\n            }\n            qcd.SPqcds = spqcds;\n            if (context.mainHeader) {\n              context.QCD = qcd;\n            } else {\n              context.currentTile.QCD = qcd;\n              context.currentTile.QCC = [];\n            }\n            break;\n          case 0xff5d: // Quantization component (QCC)\n            length = readUint16(data, position);\n            const qcc = {};\n            j = position + 2;\n            let cqcc;\n            if (context.SIZ.Csiz < 257) {\n              cqcc = data[j++];\n            } else {\n              cqcc = readUint16(data, j);\n              j += 2;\n            }\n            sqcd = data[j++];\n            switch (sqcd & 0x1f) {\n              case 0:\n                spqcdSize = 8;\n                scalarExpounded = true;\n                break;\n              case 1:\n                spqcdSize = 16;\n                scalarExpounded = false;\n                break;\n              case 2:\n                spqcdSize = 16;\n                scalarExpounded = true;\n                break;\n              default:\n                throw new Error(\"Invalid SQcd value \" + sqcd);\n            }\n            qcc.noQuantization = spqcdSize === 8;\n            qcc.scalarExpounded = scalarExpounded;\n            qcc.guardBits = sqcd >> 5;\n            spqcds = [];\n            while (j < length + position) {\n              const spqcd = {};\n              if (spqcdSize === 8) {\n                spqcd.epsilon = data[j++] >> 3;\n                spqcd.mu = 0;\n              } else {\n                spqcd.epsilon = data[j] >> 3;\n                spqcd.mu = ((data[j] & 0x7) << 8) | data[j + 1];\n                j += 2;\n              }\n              spqcds.push(spqcd);\n            }\n            qcc.SPqcds = spqcds;\n            if (context.mainHeader) {\n              context.QCC[cqcc] = qcc;\n            } else {\n              context.currentTile.QCC[cqcc] = qcc;\n            }\n            break;\n          case 0xff52: // Coding style default (COD)\n            length = readUint16(data, position);\n            const cod = {};\n            j = position + 2;\n            const scod = data[j++];\n            cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n            cod.sopMarkerUsed = !!(scod & 2);\n            cod.ephMarkerUsed = !!(scod & 4);\n            cod.progressionOrder = data[j++];\n            cod.layersCount = readUint16(data, j);\n            j += 2;\n            cod.multipleComponentTransform = data[j++];\n\n            cod.decompositionLevelsCount = data[j++];\n            cod.xcb = (data[j++] & 0xf) + 2;\n            cod.ycb = (data[j++] & 0xf) + 2;\n            const blockStyle = data[j++];\n            cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n            cod.resetContextProbabilities = !!(blockStyle & 2);\n            cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n            cod.verticallyStripe = !!(blockStyle & 8);\n            cod.predictableTermination = !!(blockStyle & 16);\n            cod.segmentationSymbolUsed = !!(blockStyle & 32);\n            cod.reversibleTransformation = data[j++];\n            if (cod.entropyCoderWithCustomPrecincts) {\n              const precinctsSizes = [];\n              while (j < length + position) {\n                const precinctsSize = data[j++];\n                precinctsSizes.push({\n                  PPx: precinctsSize & 0xf,\n                  PPy: precinctsSize >> 4,\n                });\n              }\n              cod.precinctsSizes = precinctsSizes;\n            }\n            const unsupported = [];\n            if (cod.selectiveArithmeticCodingBypass) {\n              unsupported.push(\"selectiveArithmeticCodingBypass\");\n            }\n            if (cod.terminationOnEachCodingPass) {\n              unsupported.push(\"terminationOnEachCodingPass\");\n            }\n            if (cod.verticallyStripe) {\n              unsupported.push(\"verticallyStripe\");\n            }\n            if (cod.predictableTermination) {\n              unsupported.push(\"predictableTermination\");\n            }\n            if (unsupported.length > 0) {\n              doNotRecover = true;\n              warn(`JPX: Unsupported COD options (${unsupported.join(\", \")}).`);\n            }\n            if (context.mainHeader) {\n              context.COD = cod;\n            } else {\n              context.currentTile.COD = cod;\n              context.currentTile.COC = [];\n            }\n            break;\n          case 0xff90: // Start of tile-part (SOT)\n            length = readUint16(data, position);\n            tile = {};\n            tile.index = readUint16(data, position + 2);\n            tile.length = readUint32(data, position + 4);\n            tile.dataEnd = tile.length + position - 2;\n            tile.partIndex = data[position + 8];\n            tile.partsCount = data[position + 9];\n\n            context.mainHeader = false;\n            if (tile.partIndex === 0) {\n              // reset component specific settings\n              tile.COD = context.COD;\n              tile.COC = context.COC.slice(0); // clone of the global COC\n              tile.QCD = context.QCD;\n              tile.QCC = context.QCC.slice(0); // clone of the global COC\n            }\n            context.currentTile = tile;\n            break;\n          case 0xff93: // Start of data (SOD)\n            tile = context.currentTile;\n            if (tile.partIndex === 0) {\n              initializeTile(context, tile.index);\n              buildPackets(context);\n            }\n\n            // moving to the end of the data\n            length = tile.dataEnd - position;\n            parseTilePackets(context, data, position, length);\n            break;\n          case 0xff53: // Coding style component (COC)\n            warn(\"JPX: Codestream code 0xFF53 (COC) is not implemented.\");\n          /* falls through */\n          case 0xff55: // Tile-part lengths, main header (TLM)\n          case 0xff57: // Packet length, main header (PLM)\n          case 0xff58: // Packet length, tile-part header (PLT)\n          case 0xff64: // Comment (COM)\n            length = readUint16(data, position);\n            // skipping content\n            break;\n          default:\n            throw new Error(\"Unknown codestream code: \" + code.toString(16));\n        }\n        position += length;\n      }\n    } catch (e) {\n      if (doNotRecover || this.failOnCorruptedImage) {\n        throw new JpxError(e.message);\n      } else {\n        warn(`JPX: Trying to recover from: \"${e.message}\".`);\n      }\n    }\n    this.tiles = transformComponents(context);\n    this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n    this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n    this.componentsCount = context.SIZ.Csiz;\n  }\n}\n\nfunction calculateComponentDimensions(component, siz) {\n  // Section B.2 Component mapping\n  component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n  component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n  component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n  component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n  component.width = component.x1 - component.x0;\n  component.height = component.y1 - component.y0;\n}\nfunction calculateTileGrids(context, components) {\n  const siz = context.SIZ;\n  // Section B.3 Division into tile and tile-components\n  const tiles = [];\n  let tile;\n  const numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n  const numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n  for (let q = 0; q < numYtiles; q++) {\n    for (let p = 0; p < numXtiles; p++) {\n      tile = {};\n      tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n      tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n      tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n      tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n      tile.width = tile.tx1 - tile.tx0;\n      tile.height = tile.ty1 - tile.ty0;\n      tile.components = [];\n      tiles.push(tile);\n    }\n  }\n  context.tiles = tiles;\n\n  const componentsCount = siz.Csiz;\n  for (let i = 0, ii = componentsCount; i < ii; i++) {\n    const component = components[i];\n    for (let j = 0, jj = tiles.length; j < jj; j++) {\n      const tileComponent = {};\n      tile = tiles[j];\n      tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n      tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n      tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n      tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n      tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n      tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n      tile.components[i] = tileComponent;\n    }\n  }\n}\nfunction getBlocksDimensions(context, component, r) {\n  const codOrCoc = component.codingStyleParameters;\n  const result = {};\n  if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n    result.PPx = 15;\n    result.PPy = 15;\n  } else {\n    result.PPx = codOrCoc.precinctsSizes[r].PPx;\n    result.PPy = codOrCoc.precinctsSizes[r].PPy;\n  }\n  // calculate codeblock size as described in section B.7\n  result.xcb_ =\n    r > 0\n      ? Math.min(codOrCoc.xcb, result.PPx - 1)\n      : Math.min(codOrCoc.xcb, result.PPx);\n  result.ycb_ =\n    r > 0\n      ? Math.min(codOrCoc.ycb, result.PPy - 1)\n      : Math.min(codOrCoc.ycb, result.PPy);\n  return result;\n}\nfunction buildPrecincts(context, resolution, dimensions) {\n  // Section B.6 Division resolution to precincts\n  const precinctWidth = 1 << dimensions.PPx;\n  const precinctHeight = 1 << dimensions.PPy;\n  // Jasper introduces codeblock groups for mapping each subband codeblocks\n  // to precincts. Precinct partition divides a resolution according to width\n  // and height parameters. The subband that belongs to the resolution level\n  // has a different size than the level, unless it is the zero resolution.\n\n  // From Jasper documentation: jpeg2000.pdf, section K: Tier-2 coding:\n  // The precinct partitioning for a particular subband is derived from a\n  // partitioning of its parent LL band (i.e., the LL band at the next higher\n  // resolution level)... The LL band associated with each resolution level is\n  // divided into precincts... Each of the resulting precinct regions is then\n  // mapped into its child subbands (if any) at the next lower resolution\n  // level. This is accomplished by using the coordinate transformation\n  // (u, v) = (ceil(x/2), ceil(y/2)) where (x, y) and (u, v) are the\n  // coordinates of a point in the LL band and child subband, respectively.\n  const isZeroRes = resolution.resLevel === 0;\n  const precinctWidthInSubband = 1 << (dimensions.PPx + (isZeroRes ? 0 : -1));\n  const precinctHeightInSubband = 1 << (dimensions.PPy + (isZeroRes ? 0 : -1));\n  const numprecinctswide =\n    resolution.trx1 > resolution.trx0\n      ? Math.ceil(resolution.trx1 / precinctWidth) -\n        Math.floor(resolution.trx0 / precinctWidth)\n      : 0;\n  const numprecinctshigh =\n    resolution.try1 > resolution.try0\n      ? Math.ceil(resolution.try1 / precinctHeight) -\n        Math.floor(resolution.try0 / precinctHeight)\n      : 0;\n  const numprecincts = numprecinctswide * numprecinctshigh;\n\n  resolution.precinctParameters = {\n    precinctWidth,\n    precinctHeight,\n    numprecinctswide,\n    numprecinctshigh,\n    numprecincts,\n    precinctWidthInSubband,\n    precinctHeightInSubband,\n  };\n}\nfunction buildCodeblocks(context, subband, dimensions) {\n  // Section B.7 Division sub-band into code-blocks\n  const xcb_ = dimensions.xcb_;\n  const ycb_ = dimensions.ycb_;\n  const codeblockWidth = 1 << xcb_;\n  const codeblockHeight = 1 << ycb_;\n  const cbx0 = subband.tbx0 >> xcb_;\n  const cby0 = subband.tby0 >> ycb_;\n  const cbx1 = (subband.tbx1 + codeblockWidth - 1) >> xcb_;\n  const cby1 = (subband.tby1 + codeblockHeight - 1) >> ycb_;\n  const precinctParameters = subband.resolution.precinctParameters;\n  const codeblocks = [];\n  const precincts = [];\n  let i, j, codeblock, precinctNumber;\n  for (j = cby0; j < cby1; j++) {\n    for (i = cbx0; i < cbx1; i++) {\n      codeblock = {\n        cbx: i,\n        cby: j,\n        tbx0: codeblockWidth * i,\n        tby0: codeblockHeight * j,\n        tbx1: codeblockWidth * (i + 1),\n        tby1: codeblockHeight * (j + 1),\n      };\n\n      codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n      codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n      codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n      codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n\n      // Calculate precinct number for this codeblock, codeblock position\n      // should be relative to its subband, use actual dimension and position\n      // See comment about codeblock group width and height\n      const pi = Math.floor(\n        (codeblock.tbx0_ - subband.tbx0) /\n          precinctParameters.precinctWidthInSubband\n      );\n      const pj = Math.floor(\n        (codeblock.tby0_ - subband.tby0) /\n          precinctParameters.precinctHeightInSubband\n      );\n      precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n\n      codeblock.precinctNumber = precinctNumber;\n      codeblock.subbandType = subband.type;\n      codeblock.Lblock = 3;\n\n      if (\n        codeblock.tbx1_ <= codeblock.tbx0_ ||\n        codeblock.tby1_ <= codeblock.tby0_\n      ) {\n        continue;\n      }\n      codeblocks.push(codeblock);\n      // building precinct for the sub-band\n      let precinct = precincts[precinctNumber];\n      if (precinct !== undefined) {\n        if (i < precinct.cbxMin) {\n          precinct.cbxMin = i;\n        } else if (i > precinct.cbxMax) {\n          precinct.cbxMax = i;\n        }\n        if (j < precinct.cbyMin) {\n          precinct.cbxMin = j;\n        } else if (j > precinct.cbyMax) {\n          precinct.cbyMax = j;\n        }\n      } else {\n        precincts[precinctNumber] = precinct = {\n          cbxMin: i,\n          cbyMin: j,\n          cbxMax: i,\n          cbyMax: j,\n        };\n      }\n      codeblock.precinct = precinct;\n    }\n  }\n  subband.codeblockParameters = {\n    codeblockWidth: xcb_,\n    codeblockHeight: ycb_,\n    numcodeblockwide: cbx1 - cbx0 + 1,\n    numcodeblockhigh: cby1 - cby0 + 1,\n  };\n  subband.codeblocks = codeblocks;\n  subband.precincts = precincts;\n}\nfunction createPacket(resolution, precinctNumber, layerNumber) {\n  const precinctCodeblocks = [];\n  // Section B.10.8 Order of info in packet\n  const subbands = resolution.subbands;\n  // sub-bands already ordered in 'LL', 'HL', 'LH', and 'HH' sequence\n  for (let i = 0, ii = subbands.length; i < ii; i++) {\n    const subband = subbands[i];\n    const codeblocks = subband.codeblocks;\n    for (let j = 0, jj = codeblocks.length; j < jj; j++) {\n      const codeblock = codeblocks[j];\n      if (codeblock.precinctNumber !== precinctNumber) {\n        continue;\n      }\n      precinctCodeblocks.push(codeblock);\n    }\n  }\n  return {\n    layerNumber,\n    codeblocks: precinctCodeblocks,\n  };\n}\nfunction LayerResolutionComponentPositionIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  let maxDecompositionLevelsCount = 0;\n  for (let q = 0; q < componentsCount; q++) {\n    maxDecompositionLevelsCount = Math.max(\n      maxDecompositionLevelsCount,\n      tile.components[q].codingStyleParameters.decompositionLevelsCount\n    );\n  }\n\n  let l = 0,\n    r = 0,\n    i = 0,\n    k = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.1 Layer-resolution-component-position\n    for (; l < layersCount; l++) {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; i < componentsCount; i++) {\n          const component = tile.components[i];\n          if (r > component.codingStyleParameters.decompositionLevelsCount) {\n            continue;\n          }\n\n          const resolution = component.resolutions[r];\n          const numprecincts = resolution.precinctParameters.numprecincts;\n          for (; k < numprecincts; ) {\n            const packet = createPacket(resolution, k, l);\n            k++;\n            return packet;\n          }\n          k = 0;\n        }\n        i = 0;\n      }\n      r = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction ResolutionLayerComponentPositionIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  let maxDecompositionLevelsCount = 0;\n  for (let q = 0; q < componentsCount; q++) {\n    maxDecompositionLevelsCount = Math.max(\n      maxDecompositionLevelsCount,\n      tile.components[q].codingStyleParameters.decompositionLevelsCount\n    );\n  }\n\n  let r = 0,\n    l = 0,\n    i = 0,\n    k = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.2 Resolution-layer-component-position\n    for (; r <= maxDecompositionLevelsCount; r++) {\n      for (; l < layersCount; l++) {\n        for (; i < componentsCount; i++) {\n          const component = tile.components[i];\n          if (r > component.codingStyleParameters.decompositionLevelsCount) {\n            continue;\n          }\n\n          const resolution = component.resolutions[r];\n          const numprecincts = resolution.precinctParameters.numprecincts;\n          for (; k < numprecincts; ) {\n            const packet = createPacket(resolution, k, l);\n            k++;\n            return packet;\n          }\n          k = 0;\n        }\n        i = 0;\n      }\n      l = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction ResolutionPositionComponentLayerIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  let l, r, c, p;\n  let maxDecompositionLevelsCount = 0;\n  for (c = 0; c < componentsCount; c++) {\n    const component = tile.components[c];\n    maxDecompositionLevelsCount = Math.max(\n      maxDecompositionLevelsCount,\n      component.codingStyleParameters.decompositionLevelsCount\n    );\n  }\n  const maxNumPrecinctsInLevel = new Int32Array(\n    maxDecompositionLevelsCount + 1\n  );\n  for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n    let maxNumPrecincts = 0;\n    for (c = 0; c < componentsCount; ++c) {\n      const resolutions = tile.components[c].resolutions;\n      if (r < resolutions.length) {\n        maxNumPrecincts = Math.max(\n          maxNumPrecincts,\n          resolutions[r].precinctParameters.numprecincts\n        );\n      }\n    }\n    maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n  }\n  l = 0;\n  r = 0;\n  c = 0;\n  p = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.3 Resolution-position-component-layer\n    for (; r <= maxDecompositionLevelsCount; r++) {\n      for (; p < maxNumPrecinctsInLevel[r]; p++) {\n        for (; c < componentsCount; c++) {\n          const component = tile.components[c];\n          if (r > component.codingStyleParameters.decompositionLevelsCount) {\n            continue;\n          }\n          const resolution = component.resolutions[r];\n          const numprecincts = resolution.precinctParameters.numprecincts;\n          if (p >= numprecincts) {\n            continue;\n          }\n          for (; l < layersCount; ) {\n            const packet = createPacket(resolution, p, l);\n            l++;\n            return packet;\n          }\n          l = 0;\n        }\n        c = 0;\n      }\n      p = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction PositionComponentResolutionLayerIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  const precinctsSizes = getPrecinctSizesInImageScale(tile);\n  const precinctsIterationSizes = precinctsSizes;\n  let l = 0,\n    r = 0,\n    c = 0,\n    px = 0,\n    py = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.4 Position-component-resolution-layer\n    for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n      for (; px < precinctsIterationSizes.maxNumWide; px++) {\n        for (; c < componentsCount; c++) {\n          const component = tile.components[c];\n          const decompositionLevelsCount =\n            component.codingStyleParameters.decompositionLevelsCount;\n          for (; r <= decompositionLevelsCount; r++) {\n            const resolution = component.resolutions[r];\n            const sizeInImageScale =\n              precinctsSizes.components[c].resolutions[r];\n            const k = getPrecinctIndexIfExist(\n              px,\n              py,\n              sizeInImageScale,\n              precinctsIterationSizes,\n              resolution\n            );\n            if (k === null) {\n              continue;\n            }\n            for (; l < layersCount; ) {\n              const packet = createPacket(resolution, k, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          r = 0;\n        }\n        c = 0;\n      }\n      px = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction ComponentPositionResolutionLayerIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  const precinctsSizes = getPrecinctSizesInImageScale(tile);\n  let l = 0,\n    r = 0,\n    c = 0,\n    px = 0,\n    py = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.5 Component-position-resolution-layer\n    for (; c < componentsCount; ++c) {\n      const component = tile.components[c];\n      const precinctsIterationSizes = precinctsSizes.components[c];\n      const decompositionLevelsCount =\n        component.codingStyleParameters.decompositionLevelsCount;\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; r <= decompositionLevelsCount; r++) {\n            const resolution = component.resolutions[r];\n            const sizeInImageScale = precinctsIterationSizes.resolutions[r];\n            const k = getPrecinctIndexIfExist(\n              px,\n              py,\n              sizeInImageScale,\n              precinctsIterationSizes,\n              resolution\n            );\n            if (k === null) {\n              continue;\n            }\n            for (; l < layersCount; ) {\n              const packet = createPacket(resolution, k, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          r = 0;\n        }\n        px = 0;\n      }\n      py = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction getPrecinctIndexIfExist(\n  pxIndex,\n  pyIndex,\n  sizeInImageScale,\n  precinctIterationSizes,\n  resolution\n) {\n  const posX = pxIndex * precinctIterationSizes.minWidth;\n  const posY = pyIndex * precinctIterationSizes.minHeight;\n  if (\n    posX % sizeInImageScale.width !== 0 ||\n    posY % sizeInImageScale.height !== 0\n  ) {\n    return null;\n  }\n  const startPrecinctRowIndex =\n    (posY / sizeInImageScale.width) *\n    resolution.precinctParameters.numprecinctswide;\n  return posX / sizeInImageScale.height + startPrecinctRowIndex;\n}\nfunction getPrecinctSizesInImageScale(tile) {\n  const componentsCount = tile.components.length;\n  let minWidth = Number.MAX_VALUE;\n  let minHeight = Number.MAX_VALUE;\n  let maxNumWide = 0;\n  let maxNumHigh = 0;\n  const sizePerComponent = new Array(componentsCount);\n  for (let c = 0; c < componentsCount; c++) {\n    const component = tile.components[c];\n    const decompositionLevelsCount =\n      component.codingStyleParameters.decompositionLevelsCount;\n    const sizePerResolution = new Array(decompositionLevelsCount + 1);\n    let minWidthCurrentComponent = Number.MAX_VALUE;\n    let minHeightCurrentComponent = Number.MAX_VALUE;\n    let maxNumWideCurrentComponent = 0;\n    let maxNumHighCurrentComponent = 0;\n    let scale = 1;\n    for (let r = decompositionLevelsCount; r >= 0; --r) {\n      const resolution = component.resolutions[r];\n      const widthCurrentResolution =\n        scale * resolution.precinctParameters.precinctWidth;\n      const heightCurrentResolution =\n        scale * resolution.precinctParameters.precinctHeight;\n      minWidthCurrentComponent = Math.min(\n        minWidthCurrentComponent,\n        widthCurrentResolution\n      );\n      minHeightCurrentComponent = Math.min(\n        minHeightCurrentComponent,\n        heightCurrentResolution\n      );\n      maxNumWideCurrentComponent = Math.max(\n        maxNumWideCurrentComponent,\n        resolution.precinctParameters.numprecinctswide\n      );\n      maxNumHighCurrentComponent = Math.max(\n        maxNumHighCurrentComponent,\n        resolution.precinctParameters.numprecinctshigh\n      );\n      sizePerResolution[r] = {\n        width: widthCurrentResolution,\n        height: heightCurrentResolution,\n      };\n      scale <<= 1;\n    }\n    minWidth = Math.min(minWidth, minWidthCurrentComponent);\n    minHeight = Math.min(minHeight, minHeightCurrentComponent);\n    maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n    maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n    sizePerComponent[c] = {\n      resolutions: sizePerResolution,\n      minWidth: minWidthCurrentComponent,\n      minHeight: minHeightCurrentComponent,\n      maxNumWide: maxNumWideCurrentComponent,\n      maxNumHigh: maxNumHighCurrentComponent,\n    };\n  }\n  return {\n    components: sizePerComponent,\n    minWidth,\n    minHeight,\n    maxNumWide,\n    maxNumHigh,\n  };\n}\nfunction buildPackets(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const componentsCount = siz.Csiz;\n  // Creating resolutions and sub-bands for each component\n  for (let c = 0; c < componentsCount; c++) {\n    const component = tile.components[c];\n    const decompositionLevelsCount =\n      component.codingStyleParameters.decompositionLevelsCount;\n    // Section B.5 Resolution levels and sub-bands\n    const resolutions = [];\n    const subbands = [];\n    for (let r = 0; r <= decompositionLevelsCount; r++) {\n      const blocksDimensions = getBlocksDimensions(context, component, r);\n      const resolution = {};\n      const scale = 1 << (decompositionLevelsCount - r);\n      resolution.trx0 = Math.ceil(component.tcx0 / scale);\n      resolution.try0 = Math.ceil(component.tcy0 / scale);\n      resolution.trx1 = Math.ceil(component.tcx1 / scale);\n      resolution.try1 = Math.ceil(component.tcy1 / scale);\n      resolution.resLevel = r;\n      buildPrecincts(context, resolution, blocksDimensions);\n      resolutions.push(resolution);\n\n      let subband;\n      if (r === 0) {\n        // one sub-band (LL) with last decomposition\n        subband = {};\n        subband.type = \"LL\";\n        subband.tbx0 = Math.ceil(component.tcx0 / scale);\n        subband.tby0 = Math.ceil(component.tcy0 / scale);\n        subband.tbx1 = Math.ceil(component.tcx1 / scale);\n        subband.tby1 = Math.ceil(component.tcy1 / scale);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolution.subbands = [subband];\n      } else {\n        const bscale = 1 << (decompositionLevelsCount - r + 1);\n        const resolutionSubbands = [];\n        // three sub-bands (HL, LH and HH) with rest of decompositions\n        subband = {};\n        subband.type = \"HL\";\n        subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n        subband.tby0 = Math.ceil(component.tcy0 / bscale);\n        subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n        subband.tby1 = Math.ceil(component.tcy1 / bscale);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolutionSubbands.push(subband);\n\n        subband = {};\n        subband.type = \"LH\";\n        subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n        subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n        subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n        subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolutionSubbands.push(subband);\n\n        subband = {};\n        subband.type = \"HH\";\n        subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n        subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n        subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n        subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolutionSubbands.push(subband);\n\n        resolution.subbands = resolutionSubbands;\n      }\n    }\n    component.resolutions = resolutions;\n    component.subbands = subbands;\n  }\n  // Generate the packets sequence\n  const progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n  switch (progressionOrder) {\n    case 0:\n      tile.packetsIterator = new LayerResolutionComponentPositionIterator(\n        context\n      );\n      break;\n    case 1:\n      tile.packetsIterator = new ResolutionLayerComponentPositionIterator(\n        context\n      );\n      break;\n    case 2:\n      tile.packetsIterator = new ResolutionPositionComponentLayerIterator(\n        context\n      );\n      break;\n    case 3:\n      tile.packetsIterator = new PositionComponentResolutionLayerIterator(\n        context\n      );\n      break;\n    case 4:\n      tile.packetsIterator = new ComponentPositionResolutionLayerIterator(\n        context\n      );\n      break;\n    default:\n      throw new JpxError(`Unsupported progression order ${progressionOrder}`);\n  }\n}\nfunction parseTilePackets(context, data, offset, dataLength) {\n  let position = 0;\n  let buffer,\n    bufferSize = 0,\n    skipNextBit = false;\n  function readBits(count) {\n    while (bufferSize < count) {\n      const b = data[offset + position];\n      position++;\n      if (skipNextBit) {\n        buffer = (buffer << 7) | b;\n        bufferSize += 7;\n        skipNextBit = false;\n      } else {\n        buffer = (buffer << 8) | b;\n        bufferSize += 8;\n      }\n      if (b === 0xff) {\n        skipNextBit = true;\n      }\n    }\n    bufferSize -= count;\n    return (buffer >>> bufferSize) & ((1 << count) - 1);\n  }\n  function skipMarkerIfEqual(value) {\n    if (\n      data[offset + position - 1] === 0xff &&\n      data[offset + position] === value\n    ) {\n      skipBytes(1);\n      return true;\n    } else if (\n      data[offset + position] === 0xff &&\n      data[offset + position + 1] === value\n    ) {\n      skipBytes(2);\n      return true;\n    }\n    return false;\n  }\n  function skipBytes(count) {\n    position += count;\n  }\n  function alignToByte() {\n    bufferSize = 0;\n    if (skipNextBit) {\n      position++;\n      skipNextBit = false;\n    }\n  }\n  function readCodingpasses() {\n    if (readBits(1) === 0) {\n      return 1;\n    }\n    if (readBits(1) === 0) {\n      return 2;\n    }\n    let value = readBits(2);\n    if (value < 3) {\n      return value + 3;\n    }\n    value = readBits(5);\n    if (value < 31) {\n      return value + 6;\n    }\n    value = readBits(7);\n    return value + 37;\n  }\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const sopMarkerUsed = context.COD.sopMarkerUsed;\n  const ephMarkerUsed = context.COD.ephMarkerUsed;\n  const packetsIterator = tile.packetsIterator;\n  while (position < dataLength) {\n    alignToByte();\n    if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n      // Skip also marker segment length and packet sequence ID\n      skipBytes(4);\n    }\n    const packet = packetsIterator.nextPacket();\n    if (!readBits(1)) {\n      continue;\n    }\n    const layerNumber = packet.layerNumber,\n      queue = [];\n    let codeblock;\n    for (let i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n      codeblock = packet.codeblocks[i];\n      let precinct = codeblock.precinct;\n      const codeblockColumn = codeblock.cbx - precinct.cbxMin;\n      const codeblockRow = codeblock.cby - precinct.cbyMin;\n      let codeblockIncluded = false;\n      let firstTimeInclusion = false;\n      let valueReady, zeroBitPlanesTree;\n      if (codeblock.included !== undefined) {\n        codeblockIncluded = !!readBits(1);\n      } else {\n        // reading inclusion tree\n        precinct = codeblock.precinct;\n        let inclusionTree;\n        if (precinct.inclusionTree !== undefined) {\n          inclusionTree = precinct.inclusionTree;\n        } else {\n          // building inclusion and zero bit-planes trees\n          const width = precinct.cbxMax - precinct.cbxMin + 1;\n          const height = precinct.cbyMax - precinct.cbyMin + 1;\n          inclusionTree = new InclusionTree(width, height, layerNumber);\n          zeroBitPlanesTree = new TagTree(width, height);\n          precinct.inclusionTree = inclusionTree;\n          precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          for (let l = 0; l < layerNumber; l++) {\n            if (readBits(1) !== 0) {\n              throw new JpxError(\"Invalid tag tree\");\n            }\n          }\n        }\n\n        if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !inclusionTree.nextLevel();\n              if (valueReady) {\n                codeblock.included = true;\n                codeblockIncluded = firstTimeInclusion = true;\n                break;\n              }\n            } else {\n              inclusionTree.incrementValue(layerNumber);\n              break;\n            }\n          }\n        }\n      }\n      if (!codeblockIncluded) {\n        continue;\n      }\n      if (firstTimeInclusion) {\n        zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n        zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n        while (true) {\n          if (readBits(1)) {\n            valueReady = !zeroBitPlanesTree.nextLevel();\n            if (valueReady) {\n              break;\n            }\n          } else {\n            zeroBitPlanesTree.incrementValue();\n          }\n        }\n        codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n      }\n      const codingpasses = readCodingpasses();\n      while (readBits(1)) {\n        codeblock.Lblock++;\n      }\n      const codingpassesLog2 = log2(codingpasses);\n      // rounding down log2\n      const bits =\n        (codingpasses < 1 << codingpassesLog2\n          ? codingpassesLog2 - 1\n          : codingpassesLog2) + codeblock.Lblock;\n      const codedDataLength = readBits(bits);\n      queue.push({\n        codeblock,\n        codingpasses,\n        dataLength: codedDataLength,\n      });\n    }\n    alignToByte();\n    if (ephMarkerUsed) {\n      skipMarkerIfEqual(0x92);\n    }\n    while (queue.length > 0) {\n      const packetItem = queue.shift();\n      codeblock = packetItem.codeblock;\n      if (codeblock.data === undefined) {\n        codeblock.data = [];\n      }\n      codeblock.data.push({\n        data,\n        start: offset + position,\n        end: offset + position + packetItem.dataLength,\n        codingpasses: packetItem.codingpasses,\n      });\n      position += packetItem.dataLength;\n    }\n  }\n  return position;\n}\nfunction copyCoefficients(\n  coefficients,\n  levelWidth,\n  levelHeight,\n  subband,\n  delta,\n  mb,\n  reversible,\n  segmentationSymbolUsed,\n  resetContextProbabilities\n) {\n  const x0 = subband.tbx0;\n  const y0 = subband.tby0;\n  const width = subband.tbx1 - subband.tbx0;\n  const codeblocks = subband.codeblocks;\n  const right = subband.type.charAt(0) === \"H\" ? 1 : 0;\n  const bottom = subband.type.charAt(1) === \"H\" ? levelWidth : 0;\n\n  for (let i = 0, ii = codeblocks.length; i < ii; ++i) {\n    const codeblock = codeblocks[i];\n    const blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n    const blockHeight = codeblock.tby1_ - codeblock.tby0_;\n    if (blockWidth === 0 || blockHeight === 0) {\n      continue;\n    }\n    if (codeblock.data === undefined) {\n      continue;\n    }\n\n    const bitModel = new BitModel(\n      blockWidth,\n      blockHeight,\n      codeblock.subbandType,\n      codeblock.zeroBitPlanes,\n      mb\n    );\n    let currentCodingpassType = 2; // first bit plane starts from cleanup\n\n    // collect data\n    const data = codeblock.data;\n    let totalLength = 0,\n      codingpasses = 0;\n    let j, jj, dataItem;\n    for (j = 0, jj = data.length; j < jj; j++) {\n      dataItem = data[j];\n      totalLength += dataItem.end - dataItem.start;\n      codingpasses += dataItem.codingpasses;\n    }\n    const encodedData = new Uint8Array(totalLength);\n    let position = 0;\n    for (j = 0, jj = data.length; j < jj; j++) {\n      dataItem = data[j];\n      const chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n      encodedData.set(chunk, position);\n      position += chunk.length;\n    }\n    // decoding the item\n    const decoder = new ArithmeticDecoder(encodedData, 0, totalLength);\n    bitModel.setDecoder(decoder);\n\n    for (j = 0; j < codingpasses; j++) {\n      switch (currentCodingpassType) {\n        case 0:\n          bitModel.runSignificancePropagationPass();\n          break;\n        case 1:\n          bitModel.runMagnitudeRefinementPass();\n          break;\n        case 2:\n          bitModel.runCleanupPass();\n          if (segmentationSymbolUsed) {\n            bitModel.checkSegmentationSymbol();\n          }\n          break;\n      }\n\n      if (resetContextProbabilities) {\n        bitModel.reset();\n      }\n\n      currentCodingpassType = (currentCodingpassType + 1) % 3;\n    }\n\n    let offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n    const sign = bitModel.coefficentsSign;\n    const magnitude = bitModel.coefficentsMagnitude;\n    const bitsDecoded = bitModel.bitsDecoded;\n    const magnitudeCorrection = reversible ? 0 : 0.5;\n    let k, n, nb;\n    position = 0;\n    // Do the interleaving of Section F.3.3 here, so we do not need\n    // to copy later. LL level is not interleaved, just copied.\n    const interleave = subband.type !== \"LL\";\n    for (j = 0; j < blockHeight; j++) {\n      const row = (offset / width) | 0; // row in the non-interleaved subband\n      const levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n      for (k = 0; k < blockWidth; k++) {\n        n = magnitude[position];\n        if (n !== 0) {\n          n = (n + magnitudeCorrection) * delta;\n          if (sign[position] !== 0) {\n            n = -n;\n          }\n          nb = bitsDecoded[position];\n          const pos = interleave ? levelOffset + (offset << 1) : offset;\n          if (reversible && nb >= mb) {\n            coefficients[pos] = n;\n          } else {\n            coefficients[pos] = n * (1 << (mb - nb));\n          }\n        }\n        offset++;\n        position++;\n      }\n      offset += width - blockWidth;\n    }\n  }\n}\nfunction transformTile(context, tile, c) {\n  const component = tile.components[c];\n  const codingStyleParameters = component.codingStyleParameters;\n  const quantizationParameters = component.quantizationParameters;\n  const decompositionLevelsCount =\n    codingStyleParameters.decompositionLevelsCount;\n  const spqcds = quantizationParameters.SPqcds;\n  const scalarExpounded = quantizationParameters.scalarExpounded;\n  const guardBits = quantizationParameters.guardBits;\n  const segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n  const resetContextProbabilities =\n    codingStyleParameters.resetContextProbabilities;\n  const precision = context.components[c].precision;\n\n  const reversible = codingStyleParameters.reversibleTransformation;\n  const transform = reversible\n    ? new ReversibleTransform()\n    : new IrreversibleTransform();\n\n  const subbandCoefficients = [];\n  let b = 0;\n  for (let i = 0; i <= decompositionLevelsCount; i++) {\n    const resolution = component.resolutions[i];\n\n    const width = resolution.trx1 - resolution.trx0;\n    const height = resolution.try1 - resolution.try0;\n    // Allocate space for the whole sublevel.\n    const coefficients = new Float32Array(width * height);\n\n    for (let j = 0, jj = resolution.subbands.length; j < jj; j++) {\n      let mu, epsilon;\n      if (!scalarExpounded) {\n        // formula E-5\n        mu = spqcds[0].mu;\n        epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n      } else {\n        mu = spqcds[b].mu;\n        epsilon = spqcds[b].epsilon;\n        b++;\n      }\n\n      const subband = resolution.subbands[j];\n      const gainLog2 = SubbandsGainLog2[subband.type];\n\n      // calculate quantization coefficient (Section E.1.1.1)\n      const delta = reversible\n        ? 1\n        : 2 ** (precision + gainLog2 - epsilon) * (1 + mu / 2048);\n      const mb = guardBits + epsilon - 1;\n\n      // In the first resolution level, copyCoefficients will fill the\n      // whole array with coefficients. In the succeeding passes,\n      // copyCoefficients will consecutively fill in the values that belong\n      // to the interleaved positions of the HL, LH, and HH coefficients.\n      // The LL coefficients will then be interleaved in Transform.iterate().\n      copyCoefficients(\n        coefficients,\n        width,\n        height,\n        subband,\n        delta,\n        mb,\n        reversible,\n        segmentationSymbolUsed,\n        resetContextProbabilities\n      );\n    }\n    subbandCoefficients.push({\n      width,\n      height,\n      items: coefficients,\n    });\n  }\n\n  const result = transform.calculate(\n    subbandCoefficients,\n    component.tcx0,\n    component.tcy0\n  );\n  return {\n    left: component.tcx0,\n    top: component.tcy0,\n    width: result.width,\n    height: result.height,\n    items: result.items,\n  };\n}\nfunction transformComponents(context) {\n  const siz = context.SIZ;\n  const components = context.components;\n  const componentsCount = siz.Csiz;\n  const resultImages = [];\n  for (let i = 0, ii = context.tiles.length; i < ii; i++) {\n    const tile = context.tiles[i];\n    const transformedTiles = [];\n    for (let c = 0; c < componentsCount; c++) {\n      transformedTiles[c] = transformTile(context, tile, c);\n    }\n    const tile0 = transformedTiles[0];\n    const out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n    const result = {\n      left: tile0.left,\n      top: tile0.top,\n      width: tile0.width,\n      height: tile0.height,\n      items: out,\n    };\n\n    // Section G.2.2 Inverse multi component transform\n    let shift, offset;\n    let pos = 0,\n      j,\n      jj,\n      y0,\n      y1,\n      y2;\n    if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n      const fourComponents = componentsCount === 4;\n      const y0items = transformedTiles[0].items;\n      const y1items = transformedTiles[1].items;\n      const y2items = transformedTiles[2].items;\n      const y3items = fourComponents ? transformedTiles[3].items : null;\n\n      // HACK: The multiple component transform formulas below assume that\n      // all components have the same precision. With this in mind, we\n      // compute shift and offset only once.\n      shift = components[0].precision - 8;\n      offset = (128 << shift) + 0.5;\n\n      const component0 = tile.components[0];\n      const alpha01 = componentsCount - 3;\n      jj = y0items.length;\n      if (!component0.codingStyleParameters.reversibleTransformation) {\n        // inverse irreversible multiple component transform\n        for (j = 0; j < jj; j++, pos += alpha01) {\n          y0 = y0items[j] + offset;\n          y1 = y1items[j];\n          y2 = y2items[j];\n          out[pos++] = (y0 + 1.402 * y2) >> shift;\n          out[pos++] = (y0 - 0.34413 * y1 - 0.71414 * y2) >> shift;\n          out[pos++] = (y0 + 1.772 * y1) >> shift;\n        }\n      } else {\n        // inverse reversible multiple component transform\n        for (j = 0; j < jj; j++, pos += alpha01) {\n          y0 = y0items[j] + offset;\n          y1 = y1items[j];\n          y2 = y2items[j];\n          const g = y0 - ((y2 + y1) >> 2);\n\n          out[pos++] = (g + y2) >> shift;\n          out[pos++] = g >> shift;\n          out[pos++] = (g + y1) >> shift;\n        }\n      }\n      if (fourComponents) {\n        for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n          out[pos] = (y3items[j] + offset) >> shift;\n        }\n      }\n    } else {\n      // no multi-component transform\n      for (let c = 0; c < componentsCount; c++) {\n        const items = transformedTiles[c].items;\n        shift = components[c].precision - 8;\n        offset = (128 << shift) + 0.5;\n        for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n          out[pos] = (items[j] + offset) >> shift;\n          pos += componentsCount;\n        }\n      }\n    }\n    resultImages.push(result);\n  }\n  return resultImages;\n}\nfunction initializeTile(context, tileIndex) {\n  const siz = context.SIZ;\n  const componentsCount = siz.Csiz;\n  const tile = context.tiles[tileIndex];\n  for (let c = 0; c < componentsCount; c++) {\n    const component = tile.components[c];\n    const qcdOrQcc =\n      context.currentTile.QCC[c] !== undefined\n        ? context.currentTile.QCC[c]\n        : context.currentTile.QCD;\n    component.quantizationParameters = qcdOrQcc;\n    const codOrCoc =\n      context.currentTile.COC[c] !== undefined\n        ? context.currentTile.COC[c]\n        : context.currentTile.COD;\n    component.codingStyleParameters = codOrCoc;\n  }\n  tile.codingStyleDefaultParameters = context.currentTile.COD;\n}\n\n// Section B.10.2 Tag trees\nclass TagTree {\n  constructor(width, height) {\n    const levelsLength = log2(Math.max(width, height)) + 1;\n    this.levels = [];\n    for (let i = 0; i < levelsLength; i++) {\n      const level = {\n        width,\n        height,\n        items: [],\n      };\n      this.levels.push(level);\n      width = Math.ceil(width / 2);\n      height = Math.ceil(height / 2);\n    }\n  }\n\n  reset(i, j) {\n    let currentLevel = 0,\n      value = 0,\n      level;\n    while (currentLevel < this.levels.length) {\n      level = this.levels[currentLevel];\n      const index = i + j * level.width;\n      if (level.items[index] !== undefined) {\n        value = level.items[index];\n        break;\n      }\n      level.index = index;\n      i >>= 1;\n      j >>= 1;\n      currentLevel++;\n    }\n    currentLevel--;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    this.currentLevel = currentLevel;\n    delete this.value;\n  }\n\n  incrementValue() {\n    const level = this.levels[this.currentLevel];\n    level.items[level.index]++;\n  }\n\n  nextLevel() {\n    let currentLevel = this.currentLevel;\n    let level = this.levels[currentLevel];\n    const value = level.items[level.index];\n    currentLevel--;\n    if (currentLevel < 0) {\n      this.value = value;\n      return false;\n    }\n\n    this.currentLevel = currentLevel;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    return true;\n  }\n}\n\nclass InclusionTree {\n  constructor(width, height, defaultValue) {\n    const levelsLength = log2(Math.max(width, height)) + 1;\n    this.levels = [];\n    for (let i = 0; i < levelsLength; i++) {\n      const items = new Uint8Array(width * height);\n      for (let j = 0, jj = items.length; j < jj; j++) {\n        items[j] = defaultValue;\n      }\n\n      const level = {\n        width,\n        height,\n        items,\n      };\n      this.levels.push(level);\n\n      width = Math.ceil(width / 2);\n      height = Math.ceil(height / 2);\n    }\n  }\n\n  reset(i, j, stopValue) {\n    let currentLevel = 0;\n    while (currentLevel < this.levels.length) {\n      const level = this.levels[currentLevel];\n      const index = i + j * level.width;\n      level.index = index;\n      const value = level.items[index];\n\n      if (value === 0xff) {\n        break;\n      }\n\n      if (value > stopValue) {\n        this.currentLevel = currentLevel;\n        // already know about this one, propagating the value to top levels\n        this.propagateValues();\n        return false;\n      }\n\n      i >>= 1;\n      j >>= 1;\n      currentLevel++;\n    }\n    this.currentLevel = currentLevel - 1;\n    return true;\n  }\n\n  incrementValue(stopValue) {\n    const level = this.levels[this.currentLevel];\n    level.items[level.index] = stopValue + 1;\n    this.propagateValues();\n  }\n\n  propagateValues() {\n    let levelIndex = this.currentLevel;\n    let level = this.levels[levelIndex];\n    const currentValue = level.items[level.index];\n    while (--levelIndex >= 0) {\n      level = this.levels[levelIndex];\n      level.items[level.index] = currentValue;\n    }\n  }\n\n  nextLevel() {\n    let currentLevel = this.currentLevel;\n    let level = this.levels[currentLevel];\n    const value = level.items[level.index];\n    level.items[level.index] = 0xff;\n    currentLevel--;\n    if (currentLevel < 0) {\n      return false;\n    }\n\n    this.currentLevel = currentLevel;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    return true;\n  }\n}\n\n// Section D. Coefficient bit modeling\nconst BitModel = (function BitModelClosure() {\n  const UNIFORM_CONTEXT = 17;\n  const RUNLENGTH_CONTEXT = 18;\n  // Table D-1\n  // The index is binary presentation: 0dddvvhh, ddd - sum of Di (0..4),\n  // vv - sum of Vi (0..2), and hh - sum of Hi (0..2)\n  const LLAndLHContextsLabel = new Uint8Array([\n    0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4,\n    7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6,\n    8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8,\n  ]);\n  const HLContextLabel = new Uint8Array([\n    0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8,\n    8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3,\n    4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8,\n  ]);\n  const HHContextLabel = new Uint8Array([\n    0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5,\n    5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8,\n    8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8,\n  ]);\n\n  // eslint-disable-next-line no-shadow\n  class BitModel {\n    constructor(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n\n      let contextLabelTable;\n      if (subband === \"HH\") {\n        contextLabelTable = HHContextLabel;\n      } else if (subband === \"HL\") {\n        contextLabelTable = HLContextLabel;\n      } else {\n        contextLabelTable = LLAndLHContextsLabel;\n      }\n      this.contextLabelTable = contextLabelTable;\n\n      const coefficientCount = width * height;\n\n      // coefficients outside the encoding region treated as insignificant\n      // add border state cells for significanceState\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      let coefficentsMagnitude;\n      if (mb > 14) {\n        coefficentsMagnitude = new Uint32Array(coefficientCount);\n      } else if (mb > 6) {\n        coefficentsMagnitude = new Uint16Array(coefficientCount);\n      } else {\n        coefficentsMagnitude = new Uint8Array(coefficientCount);\n      }\n      this.coefficentsMagnitude = coefficentsMagnitude;\n      this.processingFlags = new Uint8Array(coefficientCount);\n\n      const bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (let i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n\n      this.reset();\n    }\n\n    setDecoder(decoder) {\n      this.decoder = decoder;\n    }\n\n    reset() {\n      // We have 17 contexts that are accessed via context labels,\n      // plus the uniform and runlength context.\n      this.contexts = new Int8Array(19);\n\n      // Contexts are packed into 1 byte:\n      // highest 7 bits carry the index, lowest bit carries mps\n      this.contexts[0] = (4 << 1) | 0;\n      this.contexts[UNIFORM_CONTEXT] = (46 << 1) | 0;\n      this.contexts[RUNLENGTH_CONTEXT] = (3 << 1) | 0;\n    }\n\n    setNeighborsSignificance(row, column, index) {\n      const neighborsSignificance = this.neighborsSignificance;\n      const width = this.width,\n        height = this.height;\n      const left = column > 0;\n      const right = column + 1 < width;\n      let i;\n\n      if (row > 0) {\n        i = index - width;\n        if (left) {\n          neighborsSignificance[i - 1] += 0x10;\n        }\n        if (right) {\n          neighborsSignificance[i + 1] += 0x10;\n        }\n        neighborsSignificance[i] += 0x04;\n      }\n\n      if (row + 1 < height) {\n        i = index + width;\n        if (left) {\n          neighborsSignificance[i - 1] += 0x10;\n        }\n        if (right) {\n          neighborsSignificance[i + 1] += 0x10;\n        }\n        neighborsSignificance[i] += 0x04;\n      }\n\n      if (left) {\n        neighborsSignificance[index - 1] += 0x01;\n      }\n      if (right) {\n        neighborsSignificance[index + 1] += 0x01;\n      }\n      neighborsSignificance[index] |= 0x80;\n    }\n\n    runSignificancePropagationPass() {\n      const decoder = this.decoder;\n      const width = this.width,\n        height = this.height;\n      const coefficentsMagnitude = this.coefficentsMagnitude;\n      const coefficentsSign = this.coefficentsSign;\n      const neighborsSignificance = this.neighborsSignificance;\n      const processingFlags = this.processingFlags;\n      const contexts = this.contexts;\n      const labels = this.contextLabelTable;\n      const bitsDecoded = this.bitsDecoded;\n      const processedInverseMask = ~1;\n      const processedMask = 1;\n      const firstMagnitudeBitMask = 2;\n\n      for (let i0 = 0; i0 < height; i0 += 4) {\n        for (let j = 0; j < width; j++) {\n          let index = i0 * width + j;\n          for (let i1 = 0; i1 < 4; i1++, index += width) {\n            const i = i0 + i1;\n            if (i >= height) {\n              break;\n            }\n            // clear processed flag first\n            processingFlags[index] &= processedInverseMask;\n\n            if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n              continue;\n            }\n\n            const contextLabel = labels[neighborsSignificance[index]];\n            const decision = decoder.readBit(contexts, contextLabel);\n            if (decision) {\n              const sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n            }\n            bitsDecoded[index]++;\n            processingFlags[index] |= processedMask;\n          }\n        }\n      }\n    }\n\n    decodeSignBit(row, column, index) {\n      const width = this.width,\n        height = this.height;\n      const coefficentsMagnitude = this.coefficentsMagnitude;\n      const coefficentsSign = this.coefficentsSign;\n      let contribution, sign0, sign1, significance1;\n      let contextLabel, decoded;\n\n      // calculate horizontal contribution\n      significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n      if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n        sign1 = coefficentsSign[index + 1];\n        if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign1 - sign0;\n        } else {\n          contribution = 1 - sign1 - sign1;\n        }\n      } else if (significance1) {\n        sign0 = coefficentsSign[index - 1];\n        contribution = 1 - sign0 - sign0;\n      } else {\n        contribution = 0;\n      }\n      const horizontalContribution = 3 * contribution;\n\n      // calculate vertical contribution and combine with the horizontal\n      significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n      if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n        sign1 = coefficentsSign[index + width];\n        if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign1 - sign0 + horizontalContribution;\n        } else {\n          contribution = 1 - sign1 - sign1 + horizontalContribution;\n        }\n      } else if (significance1) {\n        sign0 = coefficentsSign[index - width];\n        contribution = 1 - sign0 - sign0 + horizontalContribution;\n      } else {\n        contribution = horizontalContribution;\n      }\n\n      if (contribution >= 0) {\n        contextLabel = 9 + contribution;\n        decoded = this.decoder.readBit(this.contexts, contextLabel);\n      } else {\n        contextLabel = 9 - contribution;\n        decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n      }\n      return decoded;\n    }\n\n    runMagnitudeRefinementPass() {\n      const decoder = this.decoder;\n      const width = this.width,\n        height = this.height;\n      const coefficentsMagnitude = this.coefficentsMagnitude;\n      const neighborsSignificance = this.neighborsSignificance;\n      const contexts = this.contexts;\n      const bitsDecoded = this.bitsDecoded;\n      const processingFlags = this.processingFlags;\n      const processedMask = 1;\n      const firstMagnitudeBitMask = 2;\n      const length = width * height;\n      const width4 = width * 4;\n\n      for (let index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n        indexNext = Math.min(length, index0 + width4);\n        for (let j = 0; j < width; j++) {\n          for (let index = index0 + j; index < indexNext; index += width) {\n            // significant but not those that have just become\n            if (\n              !coefficentsMagnitude[index] ||\n              (processingFlags[index] & processedMask) !== 0\n            ) {\n              continue;\n            }\n\n            let contextLabel = 16;\n            if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n              processingFlags[index] ^= firstMagnitudeBitMask;\n              // first refinement\n              const significance = neighborsSignificance[index] & 127;\n              contextLabel = significance === 0 ? 15 : 14;\n            }\n\n            const bit = decoder.readBit(contexts, contextLabel);\n            coefficentsMagnitude[index] =\n              (coefficentsMagnitude[index] << 1) | bit;\n            bitsDecoded[index]++;\n            processingFlags[index] |= processedMask;\n          }\n        }\n      }\n    }\n\n    runCleanupPass() {\n      const decoder = this.decoder;\n      const width = this.width,\n        height = this.height;\n      const neighborsSignificance = this.neighborsSignificance;\n      const coefficentsMagnitude = this.coefficentsMagnitude;\n      const coefficentsSign = this.coefficentsSign;\n      const contexts = this.contexts;\n      const labels = this.contextLabelTable;\n      const bitsDecoded = this.bitsDecoded;\n      const processingFlags = this.processingFlags;\n      const processedMask = 1;\n      const firstMagnitudeBitMask = 2;\n      const oneRowDown = width;\n      const twoRowsDown = width * 2;\n      const threeRowsDown = width * 3;\n      let iNext;\n      for (let i0 = 0; i0 < height; i0 = iNext) {\n        iNext = Math.min(i0 + 4, height);\n        const indexBase = i0 * width;\n        const checkAllEmpty = i0 + 3 < height;\n        for (let j = 0; j < width; j++) {\n          const index0 = indexBase + j;\n          // using the property: labels[neighborsSignificance[index]] === 0\n          // when neighborsSignificance[index] === 0\n          const allEmpty =\n            checkAllEmpty &&\n            processingFlags[index0] === 0 &&\n            processingFlags[index0 + oneRowDown] === 0 &&\n            processingFlags[index0 + twoRowsDown] === 0 &&\n            processingFlags[index0 + threeRowsDown] === 0 &&\n            neighborsSignificance[index0] === 0 &&\n            neighborsSignificance[index0 + oneRowDown] === 0 &&\n            neighborsSignificance[index0 + twoRowsDown] === 0 &&\n            neighborsSignificance[index0 + threeRowsDown] === 0;\n          let i1 = 0,\n            index = index0;\n          let i = i0,\n            sign;\n          if (allEmpty) {\n            const hasSignificantCoefficent = decoder.readBit(\n              contexts,\n              RUNLENGTH_CONTEXT\n            );\n            if (!hasSignificantCoefficent) {\n              bitsDecoded[index0]++;\n              bitsDecoded[index0 + oneRowDown]++;\n              bitsDecoded[index0 + twoRowsDown]++;\n              bitsDecoded[index0 + threeRowsDown]++;\n              continue; // next column\n            }\n            i1 =\n              (decoder.readBit(contexts, UNIFORM_CONTEXT) << 1) |\n              decoder.readBit(contexts, UNIFORM_CONTEXT);\n            if (i1 !== 0) {\n              i = i0 + i1;\n              index += i1 * width;\n            }\n\n            sign = this.decodeSignBit(i, j, index);\n            coefficentsSign[index] = sign;\n            coefficentsMagnitude[index] = 1;\n            this.setNeighborsSignificance(i, j, index);\n            processingFlags[index] |= firstMagnitudeBitMask;\n\n            index = index0;\n            for (let i2 = i0; i2 <= i; i2++, index += width) {\n              bitsDecoded[index]++;\n            }\n\n            i1++;\n          }\n          for (i = i0 + i1; i < iNext; i++, index += width) {\n            if (\n              coefficentsMagnitude[index] ||\n              (processingFlags[index] & processedMask) !== 0\n            ) {\n              continue;\n            }\n\n            const contextLabel = labels[neighborsSignificance[index]];\n            const decision = decoder.readBit(contexts, contextLabel);\n            if (decision === 1) {\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n            }\n            bitsDecoded[index]++;\n          }\n        }\n      }\n    }\n\n    checkSegmentationSymbol() {\n      const decoder = this.decoder;\n      const contexts = this.contexts;\n      const symbol =\n        (decoder.readBit(contexts, UNIFORM_CONTEXT) << 3) |\n        (decoder.readBit(contexts, UNIFORM_CONTEXT) << 2) |\n        (decoder.readBit(contexts, UNIFORM_CONTEXT) << 1) |\n        decoder.readBit(contexts, UNIFORM_CONTEXT);\n      if (symbol !== 0xa) {\n        throw new JpxError(\"Invalid segmentation symbol\");\n      }\n    }\n  }\n\n  return BitModel;\n})();\n\n// Section F, Discrete wavelet transformation\nclass Transform {\n  constructor() {\n    if (this.constructor === Transform) {\n      unreachable(\"Cannot initialize Transform.\");\n    }\n  }\n\n  calculate(subbands, u0, v0) {\n    let ll = subbands[0];\n    for (let i = 1, ii = subbands.length; i < ii; i++) {\n      ll = this.iterate(ll, subbands[i], u0, v0);\n    }\n    return ll;\n  }\n\n  extend(buffer, offset, size) {\n    // Section F.3.7 extending... using max extension of 4\n    let i1 = offset - 1,\n      j1 = offset + 1;\n    let i2 = offset + size - 2,\n      j2 = offset + size;\n    buffer[i1--] = buffer[j1++];\n    buffer[j2++] = buffer[i2--];\n    buffer[i1--] = buffer[j1++];\n    buffer[j2++] = buffer[i2--];\n    buffer[i1--] = buffer[j1++];\n    buffer[j2++] = buffer[i2--];\n    buffer[i1] = buffer[j1];\n    buffer[j2] = buffer[i2];\n  }\n\n  filter(x, offset, length) {\n    unreachable(\"Abstract method `filter` called\");\n  }\n\n  iterate(ll, hl_lh_hh, u0, v0) {\n    const llWidth = ll.width,\n      llHeight = ll.height;\n    let llItems = ll.items;\n    const width = hl_lh_hh.width;\n    const height = hl_lh_hh.height;\n    const items = hl_lh_hh.items;\n    let i, j, k, l, u, v;\n\n    // Interleave LL according to Section F.3.3\n    for (k = 0, i = 0; i < llHeight; i++) {\n      l = i * 2 * width;\n      for (j = 0; j < llWidth; j++, k++, l += 2) {\n        items[l] = llItems[k];\n      }\n    }\n    // The LL band is not needed anymore.\n    llItems = ll.items = null;\n\n    const bufferPadding = 4;\n    const rowBuffer = new Float32Array(width + 2 * bufferPadding);\n\n    // Section F.3.4 HOR_SR\n    if (width === 1) {\n      // if width = 1, when u0 even keep items as is, when odd divide by 2\n      if ((u0 & 1) !== 0) {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          items[k] *= 0.5;\n        }\n      }\n    } else {\n      for (v = 0, k = 0; v < height; v++, k += width) {\n        rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n\n        this.extend(rowBuffer, bufferPadding, width);\n        this.filter(rowBuffer, bufferPadding, width);\n\n        items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n      }\n    }\n\n    // Accesses to the items array can take long, because it may not fit into\n    // CPU cache and has to be fetched from main memory. Since subsequent\n    // accesses to the items array are not local when reading columns, we\n    // have a cache miss every time. To reduce cache misses, get up to\n    // 'numBuffers' items at a time and store them into the individual\n    // buffers. The colBuffers should be small enough to fit into CPU cache.\n    let numBuffers = 16;\n    const colBuffers = [];\n    for (i = 0; i < numBuffers; i++) {\n      colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n    }\n    let b,\n      currentBuffer = 0;\n    ll = bufferPadding + height;\n\n    // Section F.3.5 VER_SR\n    if (height === 1) {\n      // if height = 1, when v0 even keep items as is, when odd divide by 2\n      if ((v0 & 1) !== 0) {\n        for (u = 0; u < width; u++) {\n          items[u] *= 0.5;\n        }\n      }\n    } else {\n      for (u = 0; u < width; u++) {\n        // if we ran out of buffers, copy several image columns at once\n        if (currentBuffer === 0) {\n          numBuffers = Math.min(width - u, numBuffers);\n          for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n            for (b = 0; b < numBuffers; b++) {\n              colBuffers[b][l] = items[k + b];\n            }\n          }\n          currentBuffer = numBuffers;\n        }\n\n        currentBuffer--;\n        const buffer = colBuffers[currentBuffer];\n        this.extend(buffer, bufferPadding, height);\n        this.filter(buffer, bufferPadding, height);\n\n        // If this is last buffer in this group of buffers, flush all buffers.\n        if (currentBuffer === 0) {\n          k = u - numBuffers + 1;\n          for (l = bufferPadding; l < ll; k += width, l++) {\n            for (b = 0; b < numBuffers; b++) {\n              items[k + b] = colBuffers[b][l];\n            }\n          }\n        }\n      }\n    }\n\n    return { width, height, items };\n  }\n}\n\n// Section 3.8.2 Irreversible 9-7 filter\nclass IrreversibleTransform extends Transform {\n  filter(x, offset, length) {\n    const len = length >> 1;\n    offset |= 0;\n    let j, n, current, next;\n\n    const alpha = -1.586134342059924;\n    const beta = -0.052980118572961;\n    const gamma = 0.882911075530934;\n    const delta = 0.443506852043971;\n    const K = 1.230174104914001;\n    const K_ = 1 / K;\n\n    // step 1 is combined with step 3\n\n    // step 2\n    j = offset - 3;\n    for (n = len + 4; n--; j += 2) {\n      x[j] *= K_;\n    }\n\n    // step 1 & 3\n    j = offset - 2;\n    current = delta * x[j - 1];\n    for (n = len + 3; n--; j += 2) {\n      next = delta * x[j + 1];\n      x[j] = K * x[j] - current - next;\n      if (n--) {\n        j += 2;\n        current = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n      } else {\n        break;\n      }\n    }\n\n    // step 4\n    j = offset - 1;\n    current = gamma * x[j - 1];\n    for (n = len + 2; n--; j += 2) {\n      next = gamma * x[j + 1];\n      x[j] -= current + next;\n      if (n--) {\n        j += 2;\n        current = gamma * x[j + 1];\n        x[j] -= current + next;\n      } else {\n        break;\n      }\n    }\n\n    // step 5\n    j = offset;\n    current = beta * x[j - 1];\n    for (n = len + 1; n--; j += 2) {\n      next = beta * x[j + 1];\n      x[j] -= current + next;\n      if (n--) {\n        j += 2;\n        current = beta * x[j + 1];\n        x[j] -= current + next;\n      } else {\n        break;\n      }\n    }\n\n    // step 6\n    if (len !== 0) {\n      j = offset + 1;\n      current = alpha * x[j - 1];\n      for (n = len; n--; j += 2) {\n        next = alpha * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = alpha * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n    }\n  }\n}\n\n// Section 3.8.1 Reversible 5-3 filter\nclass ReversibleTransform extends Transform {\n  filter(x, offset, length) {\n    const len = length >> 1;\n    offset |= 0;\n    let j, n;\n\n    for (j = offset, n = len + 1; n--; j += 2) {\n      x[j] -= (x[j - 1] + x[j + 1] + 2) >> 2;\n    }\n\n    for (j = offset + 1, n = len; n--; j += 2) {\n      x[j] += (x[j - 1] + x[j + 1]) >> 1;\n    }\n  }\n}\n\nexport { JpxImage };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getVerbosityLevel, setVerbosityLevel } from \"./shared/util.js\";\nimport { Jbig2Image } from \"./core/jbig2.js\";\nimport { JpegImage } from \"./core/jpg.js\";\nimport { JpxImage } from \"./core/jpx.js\";\n\n// To ensure that the standalone PDF.js image decoders have the same\n// browser/environment compatibility as the regular PDF.js library,\n// the standard set of polyfills are thus included in this build as well.\n//\n// Given that the (current) image decoders don't use all of the features\n// of the complete PDF.js library, e.g. they are completely synchronous,\n// some of the larger polyfills are thus unnecessary.\n//\n// In an attempt to reduce the size of the standalone PDF.js image decoders,\n// the following polyfills are currently being excluded:\n//  - ReadableStream\n//  - Promise\n//  - URL\n\n// eslint-disable-next-line no-unused-vars\nconst pdfjsVersion = PDFJSDev.eval(\"BUNDLE_VERSION\");\n// eslint-disable-next-line no-unused-vars\nconst pdfjsBuild = PDFJSDev.eval(\"BUNDLE_BUILD\");\n\nexport {\n  getVerbosityLevel,\n  Jbig2Image,\n  JpegImage,\n  JpxImage,\n  setVerbosityLevel,\n};\n"],"names":["IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","RenderingIntentFlag","ANY","DISPLAY","PRINT","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","AnnotationMode","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","PermissionFlag","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","NONE","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","AnnotationActionEventType","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","DocumentActionEventType","WC","WS","DS","WP","DP","PageActionEventType","O","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","VerbosityLevel","ERRORS","WARNINGS","INFOS","CMapCompressionType","BINARY","STREAM","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","UNSUPPORTED_FEATURES","unknown","forms","javaScript","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","errorContentSubStream","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","setVerbosityLevel","level","Number","isInteger","getVerbosityLevel","info","msg","console","log","warn","unreachable","Error","assert","cond","isSameOrigin","baseUrl","otherUrl","base","URL","origin","e","other","_isValidProtocol","url","protocol","createValidAbsoluteUrl","options","addDefaultProtocol","startsWith","dots","match","length","tryConvertEncoding","stringToUTF8String","ex","absoluteUrl","shadow","obj","prop","value","Object","defineProperty","enumerable","configurable","writable","BaseException","BaseExceptionClosure","message","name","constructor","prototype","PasswordException","code","UnknownErrorException","details","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","bytesToString","bytes","undefined","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","i","chunkEnd","Math","min","chunk","subarray","push","join","stringToBytes","str","Uint8Array","charCodeAt","arrayByteLength","arr","byteLength","arraysToBytes","resultLength","pos","data","item","itemLength","set","string32","objectSize","keys","objectFromMap","map","create","key","isLittleEndian","buffer8","view32","Uint32Array","buffer","IsLittleEndianCached","isEvalSupported","Function","IsEvalSupportedCached","hexNumbers","Array","n","toString","padStart","Util","makeHexColor","r","g","b","m1","m2","applyTransform","p","m","xt","yt","applyInverseTransform","d","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","a","c","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","bezierBoundingBox","x0","y0","x1","y1","x2","y2","x3","y3","tvalues","bounds","t","t1","t2","b2ac","sqrtb2ac","abs","j","mt","jlen","PDFStringTranslateTable","stringToPDFString","encoding","decoder","TextDecoder","fatal","decode","ii","charAt","escapeString","replace","isAscii","test","stringToUTF16BEString","buf","char","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isArrayBuffer","isArrayEqual","arr1","arr2","getModificationDate","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createPromiseCapability","capability","isSettled","get","promise","Promise","resolve","reject","reason","isNodeJS","process","versions","nw","electron","type","Jbig2Error","ContextCache","getContexts","id","Int8Array","DecodingContext","start","end","ArithmeticDecoder","contextCache","cache","decodeInteger","procedure","contexts","prev","readBits","bit","readBit","sign","decodeIAID","codeLength","SegmentTypes","CodingTemplates","x","y","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmapTemplate0","width","height","decodingContext","bitmap","contextLabel","pixel","row","row1","row2","OLD_PIXEL_MASK","decodeBitmap","mmr","templateIndex","prediction","skip","at","input","Reader","decodeMMRBitmap","useskip","template","concat","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","maxX","minY","k","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","Uint16Array","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","i0","j0","shift","sltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","Int32Array","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeSymbolDictionary","huffman","refinement","symbols","numberOfNewSymbols","numberOfExportedSymbols","huffmanTables","refinementTemplateIndex","refinementAt","huffmanInput","newSymbols","currentHeight","symbolCodeLength","log2","tableB1","symbolWidths","getStandardTable","deltaHeight","tableDeltaHeight","currentWidth","totalWidth","firstSymbol","deltaWidth","tableDeltaWidth","numberOfInstances","decodeTextRegion","symbolId","rdx","rdy","symbol","bitmapSize","tableBitmapSize","byteAlign","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","position","numberOfSymbolsDecoded","xMin","xMax","bitmapWidth","symbolBitmap","exportedSymbols","flags","currentFlag","totalSymbolsLength","runLength","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","transposed","dsOffset","referenceCorner","combinationOperator","logStripSize","stripT","tableDeltaT","firstS","deltaT","deltaFirstS","tableFirstS","currentS","currentT","symbolIDTable","applyRefinement","symbolWidth","symbolHeight","rdw","rdh","offsetT","offsetS","s2","symbolRow","maxWidth","deltaS","tableDeltaS","decodePatternDictionary","patternWidth","patternHeight","maxPatternIndex","collectiveWidth","patterns","patternBitmap","decodeHalftoneRegion","regionWidth","regionHeight","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","readSegmentHeader","segmentHeader","number","readUint32","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","readUint16","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionSegmentFlags","RegionSegmentInformationFieldLength","genericRegionMmr","searchPatternLength","searchPattern","headerEnd","readSegments","header","segments","segment","randomAccess","processSegment","visitor","args","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","readInt8","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","halftoneRegion","halftoneRegionFlags","genericRegion","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","parseJbig2Chunks","chunks","SimpleSegmentVisitor","parseJbig2","numberOfPages","currentPageInfo","bitPacked","imgData","Uint8ClampedArray","q","mask","onPageInformation","rowSize","drawBitmap","regionInfo","mask0","offset0","offset","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","arguments","onSymbolDictionary","currentSegment","referredSegments","getSymbolDictionaryHuffmanTables","customTables","referredSymbols","onImmediateTextRegion","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","onImmediateHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","decodeTablesSegment","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","buildTree","node","decodeNode","reader","htOffset","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","standardTablesCache","table","currentByte","numBits","next","getCustomHuffmanTable","index","currentIndex","numberOfSymbols","codes","runCodesTable","repeatedLength","numberOfRepeats","customIndex","tableAggregateInstances","endOfBlock","params","Columns","Rows","BlackIs1","EndOfBlock","CCITTFaxDecoder","eof","readNextChar","lookForEOFLimit","Jbig2Image","parseChunks","parse","getLookupTableFactory","initializer","lookup","getArrayLookupTableFactory","MissingDataException","begin","ParserEOFException","XRefEntryException","XRefParseException","DocStats","handler","_handler","_streamTypes","Set","_fontTypes","_send","streamTypes","fontTypes","send","addStreamType","has","add","addFontType","getInheritableProperty","dict","getArray","stopWhenFound","values","visited","RefSet","Dict","objId","put","ROMAN_NUMBER_MAP","toRomanNumerals","lowerCase","romanBuf","romanStr","toLowerCase","ceil","isWhiteSpace","ch","parseXFAPath","path","positionPattern","split","component","parseInt","escapePDFName","substring","_collectJS","entry","xref","list","parents","parent","Ref","fetch","isArray","element","isName","js","BaseStream","getString","getRaw","remove","collectActions","eventType","actions","additionalActionsDicts","additionalActions","getKeys","action","actionDict","Action","XMLEntities","encodeToXmlString","codePointAt","entity","toUpperCase","validateCSSFont","cssFontInfo","DEFAULT_CSS_FONT_OBLIQUE","DEFAULT_CSS_FONT_WEIGHT","CSS_FONT_WEIGHT_VALUES","fontFamily","fontWeight","italicAngle","ident","weight","angle","parseFloat","isNaN","recoverJsURL","URL_OPEN_METHODS","regex","RegExp","jsUrl","exec","newWindow","CIRCULAR_REF","Symbol","EOF","Name","NameClosure","nameCache","nameValue","_clearCache","Cmd","CmdClosure","cmdCache","cmd","cmdValue","nonSerializable","nonSerializableClosure","_map","suppressEncryption","__nonSerializable__","assignXref","newXref","size","key1","key2","key3","getAsync","fetchAsync","getRawValues","forEach","callback","empty","emptyDict","merge","dictArray","mergeSubDicts","mergedDict","properties","Map","entries","property","subDict","clear","RefClosure","refCache","num","gen","refValue","_set","ref","delete","RefSetCache","putAlias","aliasRef","isCmd","isDict","isRefsEqual","v1","v2","clearPrimitiveCaches","isEmpty","isDataLoaded","getByte","getBytes","forceClamped","peekByte","peekedByte","peekBytes","getUint16","b0","b1","getInt32","b2","b3","getByteRange","reset","moveStart","makeSubStream","getBaseStreams","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","cx_index","cx_mps","qeTableIcx","qeIcx","ccittEOL","ccittEOF","twoDimPass","twoDimHoriz","twoDimVert0","twoDimVertR1","twoDimVertL1","twoDimVertR2","twoDimVertL2","twoDimVertR3","twoDimVertL3","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","source","eoline","EndOfLine","EncodedByteAlign","columns","rows","eoblock","black","codingLine","refLine","codingPos","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","code1","_lookBits","_eatBits","refPos","blackPixels","bits","err","code2","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limit","limitValue","JpegError","DNLMarkerError","scanLines","EOIMarkerError","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","codeLengths","pop","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","components","resetInterval","spectralStart","spectralEnd","successivePrev","successive","parseDNLMarker","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","maybeScanLines","blockRow","precision","round","decodeHuffman","tree","receive","receiveAndExtend","decodeBaseline","blockOffset","huffmanTableDC","diff","blockData","pred","rs","huffmanTableAC","s","z","decodeDCFirst","decodeDCSuccessive","eobrun","decodeACFirst","successiveACState","successiveACNextValue","decodeACSuccessive","offsetZ","decodeMcu","mcu","mcuRow","mcuCol","blockCol","h","decodeBlock","componentsLength","decodeFn","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","invalid","partialMsg","marker","quantizeAndInverse","blockBufferOffset","qt","quantizationTable","v0","v3","v4","v5","v6","v7","p0","p5","p6","p7","buildComponentData","computationBuffer","Int16Array","currentPos","startPos","maxPos","newPos","currentMarker","newMarker","JpegImage","decodeTransform","colorTransform","_decodeTransform","_colorTransform","dnlScanLines","readDataBlock","endOffset","array","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksPerColumnForMcu","blocksBufferSize","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","markerLoop","l","appData","version","major","minor","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","extended","sofScanLines","componentIds","componentsCount","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","processed","nextFileMarker","output","scaleX","scaleY","numComponents","_getLinearizedBlockData","isSourcePDF","componentScaleX","componentScaleY","blocksPerScanline","dataLength","xScaleBlockOffset","mask3LSB","lastComponentScaleX","_isColorConversionNeeded","_convertYccToRgb","Y","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","getData","forceRGB","rgbData","grayColor","JpxError","SubbandsGainLog2","LL","LH","HL","HH","JpxImage","failOnCorruptedImage","head","parseCodestream","headerSize","lbox","tbox","jumpDataLength","method","colorspace","headerType","parseImageProperties","stream","newByte","oldByte","Xsiz","Ysiz","XOsiz","YOsiz","Csiz","bitsPerComponent","context","doNotRecover","sqcd","spqcds","spqcdSize","scalarExpounded","tile","mainHeader","siz","XTsiz","YTsiz","XTOsiz","YTOsiz","isSigned","XRsiz","YRsiz","calculateComponentDimensions","SIZ","calculateTileGrids","QCC","COC","qcd","noQuantization","guardBits","spqcd","epsilon","mu","SPqcds","QCD","currentTile","qcc","cqcc","cod","scod","entropyCoderWithCustomPrecincts","sopMarkerUsed","ephMarkerUsed","progressionOrder","layersCount","multipleComponentTransform","decompositionLevelsCount","xcb","ycb","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticallyStripe","predictableTermination","segmentationSymbolUsed","reversibleTransformation","precinctsSizes","precinctsSize","PPx","PPy","unsupported","COD","partIndex","partsCount","initializeTile","buildPackets","parseTilePackets","tiles","transformComponents","numXtiles","numYtiles","tx0","ty0","tx1","ty1","jj","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","xcb_","ycb_","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","floor","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","codeblock","precinctNumber","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","pi","pj","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","LayerResolutionComponentPositionIterator","tileIndex","codingStyleDefaultParameters","maxDecompositionLevelsCount","nextPacket","JpxImage_nextPacket","resolutions","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","maxNumPrecincts","PositionComponentResolutionLayerIterator","getPrecinctSizesInImageScale","precinctsIterationSizes","px","py","maxNumHigh","maxNumWide","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","MAX_VALUE","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","scale","widthCurrentResolution","heightCurrentResolution","blocksDimensions","bscale","resolutionSubbands","packetsIterator","bufferSize","skipNextBit","count","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","queue","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","valueReady","zeroBitPlanesTree","included","inclusionTree","InclusionTree","TagTree","nextLevel","incrementValue","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","right","bottom","blockWidth","blockHeight","bitModel","BitModel","currentCodingpassType","totalLength","dataItem","encodedData","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","nb","interleave","levelOffset","transformTile","quantizationParameters","ReversibleTransform","IrreversibleTransform","subbandCoefficients","Float32Array","gainLog2","items","calculate","left","top","resultImages","transformedTiles","tile0","out","fourComponents","y0items","y1items","y2items","y3items","component0","alpha01","qcdOrQcc","levelsLength","levels","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","BitModelClosure","UNIFORM_CONTEXT","RUNLENGTH_CONTEXT","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","setNeighborsSignificance","column","labels","processedInverseMask","processedMask","firstMagnitudeBitMask","i1","decision","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","width4","index0","indexNext","significance","oneRowDown","twoRowsDown","threeRowsDown","iNext","indexBase","checkAllEmpty","allEmpty","hasSignificantCoefficent","i2","Transform","u0","ll","iterate","extend","j1","j2","filter","hl_lh_hh","llWidth","llHeight","llItems","u","bufferPadding","rowBuffer","numBuffers","colBuffers","currentBuffer","len","current","alpha","beta","gamma","K_","pdfjsVersion","pdfjsBuild"],"sourceRoot":""}